<?xml version="1.0" encoding="iso-8859-1"?>
<!--
     The FreeBSD Documentation Project
     The FreeBSD French Documentation Project

     $FreeBSD$
     $Id: book.xml,v 1.2 2003-01-12 12:47:57 blackend Exp $
     Original revision: 1.15

-->
<book xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:lang="fr">
  <info><title xmlns:xlink="http://www.w3.org/1999/xlink">Livre de chevet du développeur FreeBSD</title>
    

    <author xmlns:xlink="http://www.w3.org/1999/xlink"><orgname xmlns:xlink="http://www.w3.org/1999/xlink">Le groupe du projet de documentation FreeBSD</orgname></author>

    <pubdate xmlns:xlink="http://www.w3.org/1999/xlink">Août 2000</pubdate>

    <copyright xmlns:xlink="http://www.w3.org/1999/xlink">
      <year xmlns:xlink="http://www.w3.org/1999/xlink">2000</year>
      <year xmlns:xlink="http://www.w3.org/1999/xlink">2001</year>
      <year xmlns:xlink="http://www.w3.org/1999/xlink">2002</year>
      <year xmlns:xlink="http://www.w3.org/1999/xlink">2003</year>
      <holder xmlns:xlink="http://www.w3.org/1999/xlink">Le groupe du projet de documentation FreeBSD</holder>
    </copyright>

    
<legalnotice xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="legalnotice">
  <title xmlns:xlink="http://www.w3.org/1999/xlink">Copyright</title>

  <para xmlns:xlink="http://www.w3.org/1999/xlink">Redistribution and use in source (XML DocBook) and 'compiled'
    forms (XML, HTML, PDF, PostScript, RTF and so forth) with or without
    modification, are permitted provided that the following conditions are
    met:</para>

  <orderedlist xmlns:xlink="http://www.w3.org/1999/xlink">
    <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
      <para xmlns:xlink="http://www.w3.org/1999/xlink">Redistributions of source code (XML DocBook) must retain the
        above copyright notice, this list of conditions and the following
        disclaimer as the first lines of this file unmodified.</para>
    </listitem>

    <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
      <para xmlns:xlink="http://www.w3.org/1999/xlink">Redistributions in compiled form (transformed to other DTDs,
        converted to PDF, PostScript, RTF and other formats) must
        reproduce the above copyright notice, this list of conditions and
        the following disclaimer in the documentation and/or other
        materials provided with the distribution.</para>
    </listitem>
  </orderedlist>

  <important xmlns:xlink="http://www.w3.org/1999/xlink">
    <para xmlns:xlink="http://www.w3.org/1999/xlink">THIS DOCUMENTATION IS PROVIDED BY THE FREEBSD DOCUMENTATION
      PROJECT "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING,
      BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
      FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL
      THE FREEBSD DOCUMENTATION PROJECT BE LIABLE FOR ANY DIRECT, INDIRECT,
      INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
      BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
      OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
      ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
      TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
      USE OF THIS DOCUMENTATION, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
      DAMAGE.</para>
  </important>
</legalnotice>


    <releaseinfo xmlns:xlink="http://www.w3.org/1999/xlink">$FreeBSD$</releaseinfo>

    <abstract xmlns:xlink="http://www.w3.org/1999/xlink">
      <para xmlns:xlink="http://www.w3.org/1999/xlink">Bienvenue dans le livre de chevet du développeur</para>
      <para xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><emphasis xmlns:xlink="http://www.w3.org/1999/xlink">Version française de Frédéric Praca
  <email xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">frederic.praca@freebsd-fr.org</email>.</emphasis></para>
    <para xmlns:xlink="http://www.w3.org/1999/xlink">N.d.T.: La version française est publiée sur le
    <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="../../../../">serveur World Wide Web du groupe de
    traduction en langue française de la documentation de
    FreeBSD</link>.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">N.d.T.: Contactez la liste de diffusion du groupe d'utilisateurs francophones de FreeBSD
  <email xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">freebsd-questions@FreeBSD-fr.org</email> si vous voulez collaborer
    à la traduction.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">La traduction de ce manuel est &#8220;en cours&#8221;. Dans la
    table des matières ci-dessous:

    <itemizedlist xmlns:xlink="http://www.w3.org/1999/xlink">
          <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
            <para xmlns:xlink="http://www.w3.org/1999/xlink">Les chapitres marqués de deux astérisques
              sont en cours de traduction.</para>
          </listitem>

          <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
            <para xmlns:xlink="http://www.w3.org/1999/xlink">Les chapitres marqués de trois astérisques
              sont à traduire.</para>
          </listitem>

          <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
            <para xmlns:xlink="http://www.w3.org/1999/xlink">L'astérisque simple est réservé aux
              chapitres et sections en cours de rédaction dans la
              version U.S.</para>
          </listitem>
        </itemizedlist>
	</para>
	</abstract>

  </info>

  <part xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="introduction">
    <title xmlns:xlink="http://www.w3.org/1999/xlink">Introduction</title>

    <chapter xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="developmentplatform">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Développer sous FreeBSD</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Ce document a pour but de décrire FreeBSD comme une plateforme
        de développement, la vision de BSD, un survol de l'architecture, l'agencement
        de /usr/src, l'histoire, etc.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Merci d'adopter FreeBSD comme votre plateforme
        de développement !  Nous espérons qu'elle ne vous laissera pas tomber.</para>
    </chapter>

    <chapter xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="bsdvision">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">La vision BSD</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink"/>
    </chapter>

    <chapter xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="archoverview">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Survol de l'architecture</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink"/>
    </chapter>

    <chapter xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="sourcelayout">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">L'agencement de /usr/src</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Le code source complet de FreeBSD est disponible depuis notre
    	base CVS publique.  Le code source est normalement installé sous
      <filename xmlns:xlink="http://www.w3.org/1999/xlink">/usr/src</filename> qui contient les
      sous-répertoires suivants.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">
      <informaltable xmlns:xlink="http://www.w3.org/1999/xlink" frame="none">
        <tgroup xmlns:xlink="http://www.w3.org/1999/xlink" cols="2">
	  <thead xmlns:xlink="http://www.w3.org/1999/xlink">
	    <row xmlns:xlink="http://www.w3.org/1999/xlink">
	      <entry xmlns:xlink="http://www.w3.org/1999/xlink">Répertoire</entry>
	      <entry xmlns:xlink="http://www.w3.org/1999/xlink">Description</entry>
	    </row>
	  </thead>

	  <tbody xmlns:xlink="http://www.w3.org/1999/xlink">
	    <row xmlns:xlink="http://www.w3.org/1999/xlink">
	    <entry xmlns:xlink="http://www.w3.org/1999/xlink"><filename xmlns:xlink="http://www.w3.org/1999/xlink">bin/</filename></entry>
            <entry xmlns:xlink="http://www.w3.org/1999/xlink">Sources des fichiers de
            <filename xmlns:xlink="http://www.w3.org/1999/xlink">/bin</filename></entry>
	    </row>

	    <row xmlns:xlink="http://www.w3.org/1999/xlink">
	    <entry xmlns:xlink="http://www.w3.org/1999/xlink"><filename xmlns:xlink="http://www.w3.org/1999/xlink">contrib/</filename></entry>
	    <entry xmlns:xlink="http://www.w3.org/1999/xlink">Sources des fichiers des logiciels fournis ("contributed").</entry>
	    </row>

	    <row xmlns:xlink="http://www.w3.org/1999/xlink">
	    <entry xmlns:xlink="http://www.w3.org/1999/xlink"><filename xmlns:xlink="http://www.w3.org/1999/xlink">crypto/</filename></entry>
	    <entry xmlns:xlink="http://www.w3.org/1999/xlink">Sources du DES</entry>
	    </row>

	    <row xmlns:xlink="http://www.w3.org/1999/xlink">
	    <entry xmlns:xlink="http://www.w3.org/1999/xlink"><filename xmlns:xlink="http://www.w3.org/1999/xlink">etc/</filename></entry>
	    <entry xmlns:xlink="http://www.w3.org/1999/xlink">Sources des fichiers de <filename xmlns:xlink="http://www.w3.org/1999/xlink">/etc</filename></entry>
	    </row>

	    <row xmlns:xlink="http://www.w3.org/1999/xlink">
	    <entry xmlns:xlink="http://www.w3.org/1999/xlink"><filename xmlns:xlink="http://www.w3.org/1999/xlink">games/</filename></entry>
	    <entry xmlns:xlink="http://www.w3.org/1999/xlink">Sources des fichiers de <filename xmlns:xlink="http://www.w3.org/1999/xlink">/usr/games</filename></entry>
	    </row>

	    <row xmlns:xlink="http://www.w3.org/1999/xlink">
	    <entry xmlns:xlink="http://www.w3.org/1999/xlink"><filename xmlns:xlink="http://www.w3.org/1999/xlink">gnu/</filename></entry>
	    <entry xmlns:xlink="http://www.w3.org/1999/xlink">Utilitaires sous licence publique GNU</entry>
	    </row>

	    <row xmlns:xlink="http://www.w3.org/1999/xlink">
	    <entry xmlns:xlink="http://www.w3.org/1999/xlink"><filename xmlns:xlink="http://www.w3.org/1999/xlink">include/</filename></entry>
            <entry xmlns:xlink="http://www.w3.org/1999/xlink">Sources des fichiers de <filename xmlns:xlink="http://www.w3.org/1999/xlink">/usr/include</filename></entry>
	    </row>

	    <row xmlns:xlink="http://www.w3.org/1999/xlink">
	    <entry xmlns:xlink="http://www.w3.org/1999/xlink"><filename xmlns:xlink="http://www.w3.org/1999/xlink">kerberosIV/</filename></entry>
            <entry xmlns:xlink="http://www.w3.org/1999/xlink">Sources de Kerbereros version IV</entry>
	    </row>

	    <row xmlns:xlink="http://www.w3.org/1999/xlink">
	    <entry xmlns:xlink="http://www.w3.org/1999/xlink"><filename xmlns:xlink="http://www.w3.org/1999/xlink">kerberos5/</filename></entry>
            <entry xmlns:xlink="http://www.w3.org/1999/xlink">Sources de Kerbereros version 5</entry>
	    </row>

	    <row xmlns:xlink="http://www.w3.org/1999/xlink">
	    <entry xmlns:xlink="http://www.w3.org/1999/xlink"><filename xmlns:xlink="http://www.w3.org/1999/xlink">lib/</filename></entry>
	    <entry xmlns:xlink="http://www.w3.org/1999/xlink">Sources des fichiers de <filename xmlns:xlink="http://www.w3.org/1999/xlink">/usr/lib</filename></entry>
	    </row>

	    <row xmlns:xlink="http://www.w3.org/1999/xlink">
	    <entry xmlns:xlink="http://www.w3.org/1999/xlink"><filename xmlns:xlink="http://www.w3.org/1999/xlink">libexec/</filename></entry>
	    <entry xmlns:xlink="http://www.w3.org/1999/xlink">Sources des fichiers de <filename xmlns:xlink="http://www.w3.org/1999/xlink">/usr/libexec</filename></entry>
	    </row>

	    <row xmlns:xlink="http://www.w3.org/1999/xlink">
	    <entry xmlns:xlink="http://www.w3.org/1999/xlink"><filename xmlns:xlink="http://www.w3.org/1999/xlink">release/</filename></entry>
            <entry xmlns:xlink="http://www.w3.org/1999/xlink">Fichiers requis pour la production d'une version
            stable de FreeBSD</entry>
	    </row>

	    <row xmlns:xlink="http://www.w3.org/1999/xlink">
	    <entry xmlns:xlink="http://www.w3.org/1999/xlink"><filename xmlns:xlink="http://www.w3.org/1999/xlink">sbin/</filename></entry>
	    <entry xmlns:xlink="http://www.w3.org/1999/xlink">Sources des fichiers de <filename xmlns:xlink="http://www.w3.org/1999/xlink">/sbin</filename></entry>
	    </row>

	    <row xmlns:xlink="http://www.w3.org/1999/xlink">
	    <entry xmlns:xlink="http://www.w3.org/1999/xlink"><filename xmlns:xlink="http://www.w3.org/1999/xlink">secure/</filename></entry>
	    <entry xmlns:xlink="http://www.w3.org/1999/xlink">Sources de FreeSec</entry>
	    </row>

	    <row xmlns:xlink="http://www.w3.org/1999/xlink">
	    <entry xmlns:xlink="http://www.w3.org/1999/xlink"><filename xmlns:xlink="http://www.w3.org/1999/xlink">share/</filename></entry>
	    <entry xmlns:xlink="http://www.w3.org/1999/xlink">Sources des fichiers de <filename xmlns:xlink="http://www.w3.org/1999/xlink">/sbin</filename></entry>
	    </row>

	    <row xmlns:xlink="http://www.w3.org/1999/xlink">
	    <entry xmlns:xlink="http://www.w3.org/1999/xlink"><filename xmlns:xlink="http://www.w3.org/1999/xlink">sys/</filename></entry>
	    <entry xmlns:xlink="http://www.w3.org/1999/xlink">Fichiers source du noyau</entry>
	    </row>

	    <row xmlns:xlink="http://www.w3.org/1999/xlink">
	    <entry xmlns:xlink="http://www.w3.org/1999/xlink"><filename xmlns:xlink="http://www.w3.org/1999/xlink">tools/</filename></entry>
	    <entry xmlns:xlink="http://www.w3.org/1999/xlink">Outils utilisés pour la maintenance et les tests de
	    FreeBSD</entry>
	    </row>

	    <row xmlns:xlink="http://www.w3.org/1999/xlink">
	    <entry xmlns:xlink="http://www.w3.org/1999/xlink"><filename xmlns:xlink="http://www.w3.org/1999/xlink">usr.bin/</filename></entry>
            <entry xmlns:xlink="http://www.w3.org/1999/xlink">Sources des fichiers de <filename xmlns:xlink="http://www.w3.org/1999/xlink">/usr/bin</filename></entry>
            </row>

	    <row xmlns:xlink="http://www.w3.org/1999/xlink">
	    <entry xmlns:xlink="http://www.w3.org/1999/xlink"><filename xmlns:xlink="http://www.w3.org/1999/xlink">usr.sbin/</filename></entry>
            <entry xmlns:xlink="http://www.w3.org/1999/xlink">Sources des fichiers de <filename xmlns:xlink="http://www.w3.org/1999/xlink">/usr/sbin</filename></entry>
            </row>
          </tbody>
	</tgroup>
      </informaltable>

      </para>

    </chapter>
  </part>

  <part xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="Basics">
    <title xmlns:xlink="http://www.w3.org/1999/xlink">Les fondamentaux</title>

    
<!--
     The FreeBSD Documentation Project
     The FreeBSD French Documentation Project

     $Id: chapter.xml,v 1.1 2002-02-14 14:25:02 gioria Exp $
     Original revision: 1.4
     $FreeBSD$
-->
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="tools">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Outils de programmation</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink"><emphasis xmlns:xlink="http://www.w3.org/1999/xlink">Ce chapître a été écrit par James Raynard.
      Les modifications pour le livre de chevet du développeur par Murray Stokely.
      </emphasis></para>

      <sect1 xmlns:xlink="http://www.w3.org/1999/xlink"><title xmlns:xlink="http://www.w3.org/1999/xlink">Synopsis</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Ce document est une introduction à l'utilisation de quelques
      outils de programmation fournis avec FreeBSD, toutefois tout sera applicable
      à beaucoup d'autres versions d'Unix. Cette introduction <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">n'essaye</emphasis>
      pas de décrire la programmation dans le détail.
      La plupart du document suppose que vous possédez peu ou pas de connaissances
      en programmation, espérant que les programmeurs trouveront un
      intérêt dans ce document.</para>

      </sect1>

      <sect1 xmlns:xlink="http://www.w3.org/1999/xlink"><title xmlns:xlink="http://www.w3.org/1999/xlink">Introduction</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">FreeBSD offre un excellent environnement de développement.
      Des compilateurs pour C, C++ et Fortran ainsi qu'un assembleur sont fournis avec
      le système de base, sans parler de l'interpréteur PERL ni des
      outils classiques Unix comme <command xmlns:xlink="http://www.w3.org/1999/xlink">sed</command> et <command xmlns:xlink="http://www.w3.org/1999/xlink">awk</command>.
      Si cela n'est pas suffisant, il y a encore plus de compilateurs et
      d'interpréteurs dans la collection des logiciels portés.
      FreeBSD est compatible avec les standards comme <acronym xmlns:xlink="http://www.w3.org/1999/xlink">POSIX</acronym> et C
      <acronym xmlns:xlink="http://www.w3.org/1999/xlink">ANSI</acronym>, aussi bien qu'avec son propre héritage BSD,
      aussi il est possible d'écrire des applications qui se compileront
      et s'exécuteront avec peu ou pas de modifications sur un grand nombre de
      plateformes.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Toutefois, toute cette puissance peut être plutôt écrasante
      au premier abord si vous n'avez jamais écrit de programmes sur une
      plateforme Unix auparavant. Ce document a pour but de vous aider à commencer,
      sans entrer trop loin dans des sujets plus avancés. L'intention est
      que ce document devrait vous donner assez de bases pour être capable de
      donner du sens à la documentation.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">La majeure partie du document requiert peu ou pas de connaissance
      de la programmation, bien qu'il suppose une compétence de base dans
      l'utilisation d'Unix et dans la bonne volonté d'apprendre !</para>

      </sect1>

      <sect1 xmlns:xlink="http://www.w3.org/1999/xlink">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Introduction à la programmation</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Un programme est un ensemble d'instructions qui disent à l'ordinateur
      de faire diverses choses; quelques fois, l'instruction qu'il a à exécuter
      dépend de ce qui s'est passé lors de l'exécution d'une instruction
      précédente. Cette section donne un aperçu des deux manières par lesquelles
      vous pouvez donner ces instructions, ou
      <quote xmlns:xlink="http://www.w3.org/1999/xlink">commandes</quote> comme elles sont habituellement nommées.
      Une façon utilise un <firstterm xmlns:xlink="http://www.w3.org/1999/xlink">interpréteur</firstterm>, l'autre
      un <firstterm xmlns:xlink="http://www.w3.org/1999/xlink">compilateur</firstterm>. Comme les langages humains sont
      trop difficiles à comprendre sans ambiguïté par un ordinateur,
      les commandes sont habituellement écrites dans un langage ou un autre
      spécialement conçus pour cet usage.</para>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Les interpréteurs</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Avec un interpréteur, le langage va avec un environnement
	où vous entrez des commandes à un invite de commandes et l'environnement
	les exécute pour vous. Pour des programmes plus compliqués, vous pouvez
	entrer les commandes dans un fichier et demander à l'interpréteur de charger
	le fichier et d'exécuter les commandes qui sont à l'intérieur.
	Si quoique ce soit se passe mal, beaucoup d'interpréteurs vous enverrons
	dans un dévermineur pour vous aider à débusquer le problème.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">L'avantage de cela est que vous pouvez voir les résultats de
	vos commandes immédiatement, et les erreurs peuvent être corrigées
	facilement. Le plus gros désavantage arrive quand vous voulez partager
	vos programmes avec d'autres personnes. Ils doivent avoir le même
	interpréteur ou bien vous devez avoir un moyen de leur donner,
	et ils doivent comprendre comment l'utiliser. Par ailleurs, les
	utilisateurs pourraient ne pas apprécier d'être renvoyés dans un
	dévermineur s'ils ont appuyé sur la mauvaise touche !
	D'un point de vue performance, les interpréteurs peuvent utiliser
	beaucoup de mémoire et généralement ne génèrent pas un code aussi
	efficace que les compilateurs.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">A mon avis, les langages interprétés sont le meilleur moyen
      	pour démarrer si vous n'avez jamais programmé. Ce genre
      	d'environnement se trouve typiquement avec des langages comme Lisp,
      	Smalltalk, Perl et Basic. Il peut aussi être dit que l'interpréteur de
	commandes Unix (<command xmlns:xlink="http://www.w3.org/1999/xlink">sh</command>, <command xmlns:xlink="http://www.w3.org/1999/xlink">csh</command>) est
	lui-même un interpréteur, et beaucoup de gens écrivent en fait des
	<quote xmlns:xlink="http://www.w3.org/1999/xlink">scripts</quote> (procédures) pour l'interpréteur pour les aider
	dans diverses tâches <quote xmlns:xlink="http://www.w3.org/1999/xlink">domestiques</quote> sur leur machine.
	En effet, une partie de la philosophie d'origine d'Unix était de
	fournir plein de petits programmes utilitaires qui pouvaient être liés
	ensemble dans des procédures pour effectuer des tâches utiles.</para>
    </sect2>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Les interpréteurs disponibles avec FreeBSD</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Voici la liste des interpréteurs qui sont disponibles sous la forme
      de <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ftp://ftp.FreeBSD.org:pub/FreeBSD/packages/">
      logiciels pré-compilés pour FreeBSD</link>, avec une brève description
      de quelques uns des langages interprétés les plus populaires.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Pour obtenir un de ces logiciels pré-compilés, tout ce que vous
      avez à faire est de cliquer sur le lien du logiciel et d'exécuter</para>

      <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">#</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">pkg_add nom du logiciel</userinput>
      </screen>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">en tant que super-utilisateur. Evidemment, vous aurez besoin d'un
      FreeBSD 2.1.0 ou plus en état de marche pour que le logiciel fonctionne !</para>

      <variablelist xmlns:xlink="http://www.w3.org/1999/xlink">
	<varlistentry xmlns:xlink="http://www.w3.org/1999/xlink">
	  <term xmlns:xlink="http://www.w3.org/1999/xlink"><acronym xmlns:xlink="http://www.w3.org/1999/xlink">BASIC</acronym></term>

	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Abbréviation de "Beginner's All-purpose Symbolic
	      Instruction Code" (code d'instruction symbolique tout usage
	      pour le débutant). Développé dans les années 50 pour apprendre
	      aux étudiants d'université à programmer et fourni avec tout
	      ordinateur qui se respecte dans les années 80,
	      <acronym xmlns:xlink="http://www.w3.org/1999/xlink">BASIC</acronym> a été le premier langage de
	      programmation pour beaucoup de programmeurs. Il est aussi le
	      fondement même du Visual Basic.</para>

	    <para xmlns:xlink="http://www.w3.org/1999/xlink">L'interpréteur Basic <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ftp://ftp.FreeBSD.org:pub/FreeBSD/packages/lang/bwbasic-2.10.tgz">Bywater
		</link> et l'interpréteur Basic de <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ftp://ftp.FreeBSD.org:pub/FreeBSD/packages/lang/pbasic-2.0.tgz">Phil
		Cockroft</link> (anciennement Rabbit
	      Basic) sont disponibles pour FreeBSD sous forme de<link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ftp://ftp.FreeBSD.org:pub/FreeBSD/packages/"> logiciels pré-compilés
		</link></para>
	  </listitem>
	</varlistentry>

	<varlistentry xmlns:xlink="http://www.w3.org/1999/xlink">
	  <term xmlns:xlink="http://www.w3.org/1999/xlink">Lisp</term>

	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Un langage qui a été développé à la fin des années 50 comme
	      une alternative aux langages <quote xmlns:xlink="http://www.w3.org/1999/xlink">dévoreurs de calculs</quote>
	      qui étaient très populaires à l'époque. Plutôt qu'être basé
	      sur les nombres, Lisp est basé sur les listes; en fait
	      le nom est l'abbréviation de <quote xmlns:xlink="http://www.w3.org/1999/xlink">List Processing</quote>.
	      Très populaire en IA (Intelligence Artificielle).</para>

	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Lisp est un langage extrèmement puissant et sophistiqué
	      , mais peut être assez lourd et peu maniable.</para>

	    <para xmlns:xlink="http://www.w3.org/1999/xlink">FreeBSD a <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ftp://ftp.FreeBSD.org:pub/FreeBSD/packages/gcl-2.0.tgz">GNU
		Common Lisp</link> de disponible sous la forme d'un logiciel pré-compilé.</para>
	  </listitem>
	</varlistentry>

	<varlistentry xmlns:xlink="http://www.w3.org/1999/xlink">
	  <term xmlns:xlink="http://www.w3.org/1999/xlink">Perl</term>

	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Très populaire auprès des administrateurs système pour la rédaction
	      de procédures; aussi souvent utilisé sur les serveurs Internet pour
	      l'écriture de procédures <acronym xmlns:xlink="http://www.w3.org/1999/xlink">CGI</acronym>.</para>

	    <para xmlns:xlink="http://www.w3.org/1999/xlink">La dernière version (version 5) est fournie avec FreeBSD.</para>
	  </listitem>
	</varlistentry>

	<varlistentry xmlns:xlink="http://www.w3.org/1999/xlink">
	  <term xmlns:xlink="http://www.w3.org/1999/xlink">Scheme</term>

	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Un dérivé du Lisp qui est plutôt plus compact et
	      plus propre que le Common Lisp. Populaire dans les universités étant
	      suffisamment simple à apprendre aux étudiants comme premier langage
	      , il possède un niveau d'abstraction suffisamment important pour être
	      utilisé dans le travail de recherche.</para>

	    <para xmlns:xlink="http://www.w3.org/1999/xlink">On trouve pour FreeBSD les logiciels pré-compilés <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ftp://ftp.FreeBSD.org:pub/FreeBSD/packages/lang/elk-3.0.tgz">interpréteur
		Scheme Elk</link>, <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ftp://ftp.FreeBSD.org:pub/FreeBSD/packages/lang/mit-scheme-7.3.tgz">l'interpréteur
		Scheme du MIT</link> et <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ftp://ftp.FreeBSD.org:pub/FreeBSD/packages/lang/scm-4e1.tgz">l'interpréteur Scheme
		SCM</link>.</para>
	  </listitem>
	</varlistentry>

	<varlistentry xmlns:xlink="http://www.w3.org/1999/xlink">
	  <term xmlns:xlink="http://www.w3.org/1999/xlink">Icon</term>

	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink"><link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ftp://ftp.FreeBSD.org:pub/FreeBSD/packages/lang/icon-9.0.tgz">Le langage
		de programmation Icon</link>.</para>
	  </listitem>
	</varlistentry>

	<varlistentry xmlns:xlink="http://www.w3.org/1999/xlink">
	  <term xmlns:xlink="http://www.w3.org/1999/xlink">Logo</term>

	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink"><link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ftp://ftp.FreeBSD.org:pub/FreeBSD/packages/lang/ucblogo-3.3.tgz">l'interpréteur Logo
		de Brian Harvey</link>.</para>
	  </listitem>
	</varlistentry>

	<varlistentry xmlns:xlink="http://www.w3.org/1999/xlink">
	  <term xmlns:xlink="http://www.w3.org/1999/xlink">Python</term>

	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink"><link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ftp://ftp.FreeBSD.org:pub/FreeBSD/packages/lang/python-1.2">Le
		langage orienté objet Python</link></para>
	  </listitem>
	</varlistentry>
      </variablelist>
    </sect2>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Les compilateurs</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Les compilateurs sont plutôt différents entre eux. Tout d'abord, vous écrivez
	votre code dans un fichier (ou des fichiers) en utilisant un éditeur de texte. Vous
	exécutez ensuite le compilateur et vérifiez qu'il accepte votre programme. S'il ne
	compile pas, grincez des dents et retournez à l'éditeur; s'il compile et
	vous donne un programme, vous pouvez exécuter ce dernier à l'invite de commande ou
	dans un dévermineur pour voir s'il fonctionne correctement.

	<footnote xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Si vous l'exécuter à l'invite de commande, vous pouvez recevoir un fichier
	  d'image mémoire (NDT: le désormais célèbre "core dump").</para>
	</footnote></para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Evidemment, ce n'est pas aussi direct que d'utiliser un interpréteur.
      Toutefois cela vous permet de faire beaucoup de choses qui sont difficiles
      ou même impossibles avec un interpréteur, comme écrire du code qui interagit
      de façon proche du système d'exploitation ou même d'écrire votre propre
      système d'exploitation ! C'est aussi utile si vous avez besoin d'écrire du code
      très efficace, étant donné que le compilateur peut prendre son temps et
      optimiser le code, ce qui ne serait pas acceptable avec un interpréteur.
      Et distribuer un programme écrit pour un compilateur est habituellement
      plus évident qu'un écrit pour un interpréteur&#8212;vous pouvez juste donner
      une copie de l'exécutable, en supposant que l'utilisateur possède le même
      système d'exploitation que vous.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Les langages compilés incluent Pascal, C et C++. C et C++
	sont des langages plutôt impitoyables et conviennent mieux
	aux programmeurs expérimentés; Pascal, d'autre part, a été
	conçu comme un langage éducatif, et est un assez bon langage
	pour commencer. Malheureusement, FreeBSD ne possède aucun
	support Pascal, excepté pour un convertisseur Pascal vers C
	dans les logiciels portés.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Le cycle édition-compilation-exécution-déverminage étant relativement pénible
      lors de l'utilisation de programmes séparés, beaucoup de fabricants de compilateur
      ont produit des environnements de développement intégrés (ou <acronym xmlns:xlink="http://www.w3.org/1999/xlink">IDE</acronym> pour
      Integrated Development Environments et <acronym xmlns:xlink="http://www.w3.org/1999/xlink">EDI</acronym> dans la langue de
      Molière). FreeBSD ne possède pas d'<acronym xmlns:xlink="http://www.w3.org/1999/xlink">EDI</acronym>
      tel quel; toutefois il est possible d'utiliser Emacs à cet effet.
      Ceci est vu dans <xref xmlns:xlink="http://www.w3.org/1999/xlink" linkend="emacs"/>.</para>
    </sect2>
  </sect1>


  <sect1 xmlns:xlink="http://www.w3.org/1999/xlink">
    <title xmlns:xlink="http://www.w3.org/1999/xlink">Compiler avec <command xmlns:xlink="http://www.w3.org/1999/xlink">cc</command></title>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Cette section traite uniquement du compilateur GNU pour C et C++,
      celui-ci faisant partie du système FreeBSD de base. Il peut être invoqué
      soit par <command xmlns:xlink="http://www.w3.org/1999/xlink">cc</command> ou <command xmlns:xlink="http://www.w3.org/1999/xlink">gcc</command>. Les
      détails de production d'un programme avec un interpréteur varient
      considérablement d'un interpréteur à l'autre, et sont habituellement
      bien couverts par la documentation et l'aide en ligne de l'interpréteur.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Une fois que vous avez écrit votre chef d'oeuvre, la prochaine étape est
      de le convertir en quelque chose qui s'exécutera (espérons !) sur FreeBSD.
      Cela implique normalement plusieurs étapes, réalisées chacune par un programme
      différent.</para>

    <procedure xmlns:xlink="http://www.w3.org/1999/xlink">
      <step xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Pré-traiter votre code source pour retirer les commentaires et faire
	  d'autres trucs comme développer (expanser) les macros en C.</para>
      </step>

      <step xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Vérifier la syntaxe de votre code source pour voir si vous avez
	obéi aux règles du langage. Si vous ne l'avez pas fait, il se plaindra !</para>
      </step>

      <step xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Convertir le code source en langage assembleur&#8212;
	cela est vraiment proche du code machine, mais reste
	  compréhensible par des humains. Prétendument.

	  <footnote xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Pour être vraiment précis, <command xmlns:xlink="http://www.w3.org/1999/xlink">cc</command> convertit à ce niveau le
	      code source dans son propre <firstterm xmlns:xlink="http://www.w3.org/1999/xlink">p-code</firstterm> indépendant de la
	      machine plutôt qu'en langage assembleur.</para>
	  </footnote></para>
      </step>

      <step xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Convertir le langage  assembleur en code machine
	  &#8212;ouais, on parle de bits et d'octets, de uns et
	  de zéros.</para>
      </step>

      <step xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Vérifier que vous avez utilisé des choses comme des fonctions et
	des variables globales de façon consistente. Par exemple, si vous
	  avez appelé une fonction inexistente, le compilateur se plaindra.</para>
      </step>

      <step xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Si vous essayez de produire un exécutable depuis plusieurs
	  fichiers de code source, résoudre comment les faire fonctionner
	  ensemble.</para>
      </step>

      <step xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Résoudre comment produire quelque chose que le chargeur au vol
	du système sera capable de charger en mémoire et exécuter.</para>
      </step>

      <step xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Finalement, écrire l'exécutable dans le système de fichiers.</para>
      </step>
    </procedure>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Le mot <firstterm xmlns:xlink="http://www.w3.org/1999/xlink">compilation</firstterm> est souvent utilisé pour
      les étapes 1 à 4 seules&#8212;les autres correspondent au terme
      <firstterm xmlns:xlink="http://www.w3.org/1999/xlink">liaison</firstterm>. Quelquefois, l'étape 1 est appelée
      <firstterm xmlns:xlink="http://www.w3.org/1999/xlink">pre-traitement</firstterm> et les étapes 3-4 <firstterm xmlns:xlink="http://www.w3.org/1999/xlink">assemblage</firstterm>.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Heureusement, la plupart de ces détails vous sont cachés, étant donné que
    <command xmlns:xlink="http://www.w3.org/1999/xlink">cc</command> est un frontal qui s'occupe d'appeler tous les
      programmes avec les arguments corrects pour vous; tapez simplement</para>

    <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">cc foobar.c</userinput>
    </screen>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">compilera <filename xmlns:xlink="http://www.w3.org/1999/xlink">foobar.c</filename> avec toutes les étapes au-dessus.
    Si vous avez plus d'un fichier à compiler, faites simplement
      quelque chose comme</para>

    <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">cc foo.c bar.c</userinput>
    </screen>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Notez que la vérification de syntaxe n'est que cela&#8212;vérifier
      la syntaxe. Cela ne vérifiera pas les erreurs de logique que vous pouvez
      avoir faites, comme mettre le programme en boucle infinie ou
      utiliser un tri à bulles quand vous devriez utiliser un tri binaire.

      <footnote xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Au cas où vous ne le sauriez pas, un tri binaire est un manière
	  efficace de trier les éléments et le tri à bulles n'en est pas une.</para>
      </footnote></para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Il y a beaucoup d'options pour <command xmlns:xlink="http://www.w3.org/1999/xlink">cc</command>, qui
      qui se trouvent toutes dans les pages de manuel en ligne.
      Voici quelques unes des plus importantes, avec des exemples illustrant leur
      utilisation.</para>

    <variablelist xmlns:xlink="http://www.w3.org/1999/xlink">
      <varlistentry xmlns:xlink="http://www.w3.org/1999/xlink">
	<term xmlns:xlink="http://www.w3.org/1999/xlink"><option xmlns:xlink="http://www.w3.org/1999/xlink">-o <replaceable xmlns:xlink="http://www.w3.org/1999/xlink">nom_du_fichier</replaceable></option></term>

	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Le nom de sortie du fichier.  Si vous n'utilisez pas cette option,
	  <command xmlns:xlink="http://www.w3.org/1999/xlink">cc</command> produira un exécutable appelé
	    <filename xmlns:xlink="http://www.w3.org/1999/xlink">a.out</filename>.

	    <footnote xmlns:xlink="http://www.w3.org/1999/xlink">
	      <para xmlns:xlink="http://www.w3.org/1999/xlink">Les raisons de ceci sont enterrées dans les brumes de l'histoire.</para>
	    </footnote></para>

	  <informalexample xmlns:xlink="http://www.w3.org/1999/xlink">
	    <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">cc foobar.c</userinput>               <lineannotation xmlns:xlink="http://www.w3.org/1999/xlink">l'exécutable est a.out</lineannotation>
<prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">cc -o foobar foobar.c</userinput>     <lineannotation xmlns:xlink="http://www.w3.org/1999/xlink">l'exécutable est foobar</lineannotation>
	    </screen>
	  </informalexample>
	</listitem>
      </varlistentry>

      <varlistentry xmlns:xlink="http://www.w3.org/1999/xlink">
	<term xmlns:xlink="http://www.w3.org/1999/xlink"><option xmlns:xlink="http://www.w3.org/1999/xlink">-c</option></term>

	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Compile juste le fichier, ne le lie pas. Utile pour les
	    programmes jouets dont vous voulez juste vérifier la syntaxe,
	    ou si vous utilisez un <filename xmlns:xlink="http://www.w3.org/1999/xlink">Makefile</filename>.</para>

	  <informalexample xmlns:xlink="http://www.w3.org/1999/xlink">
	    <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">cc -c foobar.c</userinput>
	    </screen>
	  </informalexample>

	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Cela va produire un <firstterm xmlns:xlink="http://www.w3.org/1999/xlink">fichier objet</firstterm> (pas un
	    exécutable) appelé <filename xmlns:xlink="http://www.w3.org/1999/xlink">foobar.o</filename>. Celui-ci
	    peut être lié ensuite avec d'autres fichiers objets pour produire un
	    exécutable.</para>
	</listitem>
      </varlistentry>

      <varlistentry xmlns:xlink="http://www.w3.org/1999/xlink">
	<term xmlns:xlink="http://www.w3.org/1999/xlink"><option xmlns:xlink="http://www.w3.org/1999/xlink">-g</option></term>

	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Crée une version de déverminage de l'exécutable. Cela oblige
	    le compilateur à placer des informations dans l'exécutable comme
	    telle ligne du fichier source correspond à tel appel de fonction.
	    Un dévermineur peut utiliser cette information pour vous montrer
	    le code source au fur et à mesure que vous avancez pas à pas dans le programme,
	    ce qui est <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">très</emphasis> utile; le désavantage est que
	    toutes ces informations supplémentaires rendent le programme plus gros.
	    Normalement, vous compilez avec l'option <option xmlns:xlink="http://www.w3.org/1999/xlink">-g</option> quand vous
	    êtes en train de développer un programme et compilez ensuite une
	    <quote xmlns:xlink="http://www.w3.org/1999/xlink">version de production</quote> sans <option xmlns:xlink="http://www.w3.org/1999/xlink">-g</option> quand vous êtes
	    satisfait du fonctionnement.</para>

	  <informalexample xmlns:xlink="http://www.w3.org/1999/xlink">
	    <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">cc -g foobar.c</userinput>
	    </screen>
	  </informalexample>

	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Cela va produire une version de déverminage du programme foobar.

	    <footnote xmlns:xlink="http://www.w3.org/1999/xlink">
	      <para xmlns:xlink="http://www.w3.org/1999/xlink">Notez, nous n'avons pas utilisé l'option <option xmlns:xlink="http://www.w3.org/1999/xlink">-o</option>
		pour spécifier le nom de l'exécutable, aussi nous obtiendrons un
		exécutable du nom de <filename xmlns:xlink="http://www.w3.org/1999/xlink">a.out</filename>.
		Produire une version de déverminage du nom de
		<filename xmlns:xlink="http://www.w3.org/1999/xlink">foobar</filename> est laissé en exercice pour le lecteur!</para>
	    </footnote></para>
	</listitem>
      </varlistentry>

      <varlistentry xmlns:xlink="http://www.w3.org/1999/xlink">
	<term xmlns:xlink="http://www.w3.org/1999/xlink"><option xmlns:xlink="http://www.w3.org/1999/xlink">-O</option></term>

	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Crée une version optimisée de l'exécutable. Le compilateur
	    effectue différents trucs malins pour essayer de produire
	    un exécutable qui s'exécute plus rapidement que normal.
	    Vous pouvez ajouter un nombre après l'option <option xmlns:xlink="http://www.w3.org/1999/xlink">-O</option>
	    pour spécifier un niveau d'optimisation plus important, mais cela vous expose
	    souvent aux bogues dans l'optimiseur du compilateur. Par exemple, la version de
	    <command xmlns:xlink="http://www.w3.org/1999/xlink">cc</command> fournit avec la version 2.1.0 FreeBSD est connue
	    pour produire du mauvais code avec l'option <option xmlns:xlink="http://www.w3.org/1999/xlink">-O2</option>
	    dans certaines circonstances.</para>

	  <para xmlns:xlink="http://www.w3.org/1999/xlink">L'optimisation est habituellement activée uniquement lors de
	  la compilation d'une version de production.</para>

	  <informalexample xmlns:xlink="http://www.w3.org/1999/xlink">
	    <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">cc -O -o foobar foobar.c</userinput>
	    </screen>
	  </informalexample>

	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Cela va produire une version optimisée de
	    <filename xmlns:xlink="http://www.w3.org/1999/xlink">foobar</filename>.</para>
	</listitem>
      </varlistentry>
    </variablelist>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Les trois prochaines options vont forcer <command xmlns:xlink="http://www.w3.org/1999/xlink">cc</command>
      à vérifier que votre code est conforme au standard international en cours,
      se référant souvent à la norme <acronym xmlns:xlink="http://www.w3.org/1999/xlink">ANSI</acronym>, qui pour dire précisement
      est un standard <acronym xmlns:xlink="http://www.w3.org/1999/xlink">ISO</acronym>.</para>

    <variablelist xmlns:xlink="http://www.w3.org/1999/xlink">
      <varlistentry xmlns:xlink="http://www.w3.org/1999/xlink">
	<term xmlns:xlink="http://www.w3.org/1999/xlink"><option xmlns:xlink="http://www.w3.org/1999/xlink">-Wall</option></term>

	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Active tous les avertissements que les auteurs de
	    <command xmlns:xlink="http://www.w3.org/1999/xlink">cc</command> pensent valoir le coup. Malgré le nom, il
	    n'active pas tous les avertissements dont <command xmlns:xlink="http://www.w3.org/1999/xlink">cc</command>
	    est capable.</para>
	</listitem>
      </varlistentry>

      <varlistentry xmlns:xlink="http://www.w3.org/1999/xlink">
	<term xmlns:xlink="http://www.w3.org/1999/xlink"><option xmlns:xlink="http://www.w3.org/1999/xlink">-ansi</option></term>

	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Désactive la plupart, mais pas toutes, des caractéristiques
	    du C fournies par <command xmlns:xlink="http://www.w3.org/1999/xlink">cc</command> qui sont non-<acronym xmlns:xlink="http://www.w3.org/1999/xlink">ANSI</acronym> . Malgré
	    le nom, cela ne garantit pas strictement que votre code sera conforme au standard.</para>
	</listitem>
      </varlistentry>

      <varlistentry xmlns:xlink="http://www.w3.org/1999/xlink">
	<term xmlns:xlink="http://www.w3.org/1999/xlink"><option xmlns:xlink="http://www.w3.org/1999/xlink">-pedantic</option></term>

	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Désactive <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">toutes</emphasis>
	    les caractéristiques de <command xmlns:xlink="http://www.w3.org/1999/xlink">cc</command> qui ne sont pas <acronym xmlns:xlink="http://www.w3.org/1999/xlink">ANSI</acronym> .</para>
	</listitem>
      </varlistentry>
    </variablelist>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Sans ces options, <command xmlns:xlink="http://www.w3.org/1999/xlink">cc</command> vous permettrait d'utiliser
      quelques extensions au standard non-standards. Quelques unes de celles-ci
      sont très utiles, mais ne fonctionneront pas avec d'autres compilateurs
      &#8212;en fait, un des principaux buts du standard est de permettre aux gens
      d'écrire du code qui fonctionnera avec n'importe quel compilateur sur
      n'importe quel système. Cela est connu sous le nom de <firstterm xmlns:xlink="http://www.w3.org/1999/xlink">code portable</firstterm>.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Generalement, vous devriez essayer de faire votre code aussi portable
    que possible, sinon vous pourriez avoir a ré-écrire totalement votre
    programme plus tard pour le faire fonctionner autre part&#8212;et qui
      sait ce que vous utiliserez dans quelques années?</para>

    <informalexample xmlns:xlink="http://www.w3.org/1999/xlink">
      <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">cc -Wall -ansi -pedantic -o foobar foobar.c</userinput>
      </screen>
    </informalexample>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Cela produira un exécutable <filename xmlns:xlink="http://www.w3.org/1999/xlink">foobar</filename>
      après avoir vérifié que <filename xmlns:xlink="http://www.w3.org/1999/xlink">foobar.c</filename> est conforme au standard.</para>

    <variablelist xmlns:xlink="http://www.w3.org/1999/xlink">
      <varlistentry xmlns:xlink="http://www.w3.org/1999/xlink">
	<term xmlns:xlink="http://www.w3.org/1999/xlink"><option xmlns:xlink="http://www.w3.org/1999/xlink">-l<replaceable xmlns:xlink="http://www.w3.org/1999/xlink">librairie</replaceable></option></term>

	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Spécifie une librairie de fonctions à utiliser lors
	  de l'édition des liens.</para>

	  <para xmlns:xlink="http://www.w3.org/1999/xlink">L'exemple le plus commun de cela est lors de la compilation
	  d'un programme qui utilise quelques fonctions mathématiques en C.
	  A l'inverse de la plupart des plateformes, celles-ci se trouvent dans
	  une librairie standard du C et vous devez dire au compilateur de l'ajouter.
	  </para>

	  <para xmlns:xlink="http://www.w3.org/1999/xlink">La règle est que si une librairie est appelée
	    <filename xmlns:xlink="http://www.w3.org/1999/xlink">libquelque_chose.a</filename>,
	    vous donnez à  <command xmlns:xlink="http://www.w3.org/1999/xlink">cc</command> l'argument
	    <option xmlns:xlink="http://www.w3.org/1999/xlink">-l<replaceable xmlns:xlink="http://www.w3.org/1999/xlink">quelque_chose</replaceable></option>.
	    Par exemple, la librairie des fonctions mathématiques est
	    <filename xmlns:xlink="http://www.w3.org/1999/xlink">libm.a</filename>, aussi vous donnez à
	    <command xmlns:xlink="http://www.w3.org/1999/xlink">cc</command> le paramètre  <option xmlns:xlink="http://www.w3.org/1999/xlink">-lm</option>.
	    Un <quote xmlns:xlink="http://www.w3.org/1999/xlink">piège</quote> habituel avec la librairie math est
	    qu'elle doit être la dernière sur la ligne de commande.</para>

	  <informalexample xmlns:xlink="http://www.w3.org/1999/xlink">
	    <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">cc -o foobar foobar.c -lm</userinput>
	    </screen>
	  </informalexample>

	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Cela va lier les fonctions de la librairie math à l'interieur de
	    <filename xmlns:xlink="http://www.w3.org/1999/xlink">foobar</filename>.</para>

	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Si vous compilez du C++; vous devrez ajouter
	    <option xmlns:xlink="http://www.w3.org/1999/xlink">-lg++</option>, ou <option xmlns:xlink="http://www.w3.org/1999/xlink">-lstdc++</option> si
	    vous utilisez FreeBSD 2.2 ou ultérieur, à la ligne de commande de
	    <command xmlns:xlink="http://www.w3.org/1999/xlink">cc</command> pour lier avec les fonctions de la librairie C++.
	    Alternativement, vous pouvez utiliser <command xmlns:xlink="http://www.w3.org/1999/xlink">c++</command> plutôt
	    que <command xmlns:xlink="http://www.w3.org/1999/xlink">cc</command>, qui fait tout cela pour vous.
	    <command xmlns:xlink="http://www.w3.org/1999/xlink">c++</command> peut aussi être invoqué par
	    <command xmlns:xlink="http://www.w3.org/1999/xlink">g++</command> sur FreeBSD.</para>

	  <informalexample xmlns:xlink="http://www.w3.org/1999/xlink">
	    <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">cc -o foobar foobar.cc -lg++</userinput>     <lineannotation xmlns:xlink="http://www.w3.org/1999/xlink">Pour FreeBSD 2.1.6 et antérieur</lineannotation>
<prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">cc -o foobar foobar.cc -lstdc++</userinput>  <lineannotation xmlns:xlink="http://www.w3.org/1999/xlink">Pour FreeBSD 2.2 et ultérieur</lineannotation>
<prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">c++ -o foobar foobar.cc</userinput>
	    </screen>
	  </informalexample>

	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Chacune de ces commandes va produire un exécutable
	    <filename xmlns:xlink="http://www.w3.org/1999/xlink">foobar</filename> à partir du fichier source C++
	    <filename xmlns:xlink="http://www.w3.org/1999/xlink">foobar.cc</filename>. Notez que, sur les systèmes Unix
	    , les fichiers source C++ se terminent traditionnellement en
	    <filename xmlns:xlink="http://www.w3.org/1999/xlink">.C</filename>, <filename xmlns:xlink="http://www.w3.org/1999/xlink">.cxx</filename> ou
	    <filename xmlns:xlink="http://www.w3.org/1999/xlink">.cc</filename>, plutôt que le style MS-DOS
	    <filename xmlns:xlink="http://www.w3.org/1999/xlink">.cpp</filename> (qui était déjà
	    utilisé pour autre chose).  <command xmlns:xlink="http://www.w3.org/1999/xlink">gcc</command> a utilisé cela
	    pour trouver le type de compilateur à utiliser sur le fichier source;
	    toutefois, cette restriction ne s'applique plus,
	    aussi vous pouvez maintenant appeler vos fichiers C++
	    <filename xmlns:xlink="http://www.w3.org/1999/xlink">.cpp</filename> en toute impunité !</para>
	</listitem>
      </varlistentry>
    </variablelist>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Questions et problèmes usuels sur <command xmlns:xlink="http://www.w3.org/1999/xlink">cc</command></title>

      <qandaset xmlns:xlink="http://www.w3.org/1999/xlink">
	<qandaentry xmlns:xlink="http://www.w3.org/1999/xlink">
	  <question xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">J'essaye d'écrire un programme qui utilise la fonction
	      <function xmlns:xlink="http://www.w3.org/1999/xlink">sin()</function> et je reçois l'erreur suivante.
	      Que cela signifie-t-il ?</para>

	    <informalexample xmlns:xlink="http://www.w3.org/1999/xlink">
	      <screen xmlns:xlink="http://www.w3.org/1999/xlink">/var/tmp/cc0143941.o: Undefined symbol `_sin' referenced from text segment
	      </screen>
	    </informalexample>
	  </question>

	  <answer xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Lors de l'utilisation des fonctions mathématiques comme
	      <function xmlns:xlink="http://www.w3.org/1999/xlink">sin()</function>, vous devez dire à
	      <command xmlns:xlink="http://www.w3.org/1999/xlink">cc</command> de lier avec la librairie math, comme :</para>

	    <informalexample xmlns:xlink="http://www.w3.org/1999/xlink">
	      <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">cc -o foobar foobar.c -lm</userinput>
	      </screen>
	    </informalexample>
	  </answer>
	</qandaentry>

	<qandaentry xmlns:xlink="http://www.w3.org/1999/xlink">
	  <question xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">J'ai écrit un programme simple pour m'exercer à
	    l'utilisation de l'option <option xmlns:xlink="http://www.w3.org/1999/xlink">-lm</option>. Tout ce qu'il fait
	    est d'élever 2,1 à la puissance 6.</para>

	    <informalexample xmlns:xlink="http://www.w3.org/1999/xlink">
	      <programlisting xmlns:xlink="http://www.w3.org/1999/xlink">#include &lt;stdio.h&gt;

int main() {
	float f;

	f = pow(2.1, 6);
	printf("2.1 ^ 6 = %f\n", f);
	return 0;
}
	      </programlisting>
	    </informalexample>

	    <para xmlns:xlink="http://www.w3.org/1999/xlink">j'ai effectué la compilation comme suit :</para>

	    <informalexample xmlns:xlink="http://www.w3.org/1999/xlink">
	      <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">cc temp.c -lm</userinput>
	      </screen>
	    </informalexample>

	    <para xmlns:xlink="http://www.w3.org/1999/xlink">et comme expliqué ici, mais j'obtiens ceci
	    quand je l'exécute :</para>

	    <informalexample xmlns:xlink="http://www.w3.org/1999/xlink">
	      <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">./a.out</userinput>
2.1 ^ 6 = 1023.000000
	      </screen>
	    </informalexample>

	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Ce <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">n'est pas</emphasis> la réponse correcte !
	      Que se passe-t-il ?</para>
	  </question>

	  <answer xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Quand le compilateur voit que vous appelez une fonction, il
	    vérifie s'il a déjà un prototype pour celle-ci.
	    S'il ne l'a pas vu, il suppose que la fonction retourne un <type xmlns:xlink="http://www.w3.org/1999/xlink">int</type>,
	    ce qui n'est absolument  pas ce que vous voulez ici.
	    </para>
	  </answer>
	</qandaentry>

	<qandaentry xmlns:xlink="http://www.w3.org/1999/xlink">
	  <question xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Alors comment puis-je le réparer?</para>
	  </question>

	  <answer xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Les prototypes des fonctions mathématiques sont dans
	      <filename xmlns:xlink="http://www.w3.org/1999/xlink">math.h</filename>. Si vous incluez ce fichier,
	      le compilateur sera capable de trouver le prototype et il
	      arrêtera de faire des trucs étranges à vos calculs!
	      </para>

	    <informalexample xmlns:xlink="http://www.w3.org/1999/xlink">
	      <programlisting xmlns:xlink="http://www.w3.org/1999/xlink">#include &lt;math.h&gt;
#include &lt;stdio.h&gt;

int main() {
...
	      </programlisting>
	    </informalexample>

	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Après avoir recompilé comme précédemment,
	    exécutez :
	    </para>

	    <informalexample xmlns:xlink="http://www.w3.org/1999/xlink">
	      <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">./a.out</userinput>
2.1 ^ 6 = 85.766121
	      </screen>
	    </informalexample>

	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Si vous utilisez quelques fonctions mathématiques que ce soit,
	    incluez <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">toujours</emphasis> <filename xmlns:xlink="http://www.w3.org/1999/xlink">math.h</filename> et n'oubliez pas
	    de lier avec la librairie math.</para>
	  </answer>
	</qandaentry>

	<qandaentry xmlns:xlink="http://www.w3.org/1999/xlink">
	  <question xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">J'ai compilé un fichier appelé
	      <filename xmlns:xlink="http://www.w3.org/1999/xlink">foobar.c</filename> et je ne trouve pas d'exécutable
	      appelé <filename xmlns:xlink="http://www.w3.org/1999/xlink">foobar</filename>. Où est-il parti?</para>
	  </question>

	  <answer xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Souvenez-vous, <command xmlns:xlink="http://www.w3.org/1999/xlink">cc</command> appellera
	    l'exécutable <filename xmlns:xlink="http://www.w3.org/1999/xlink">a.out</filename> sauf si vous lui dites
	    de faire autrement. Utilisez l'option
	      <option xmlns:xlink="http://www.w3.org/1999/xlink">-o <replaceable xmlns:xlink="http://www.w3.org/1999/xlink">nomfichier</replaceable></option>:</para>

	    <informalexample xmlns:xlink="http://www.w3.org/1999/xlink">
	      <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">cc -o foobar foobar.c</userinput>
	      </screen>
	    </informalexample>
	  </answer>
	</qandaentry>

	<qandaentry xmlns:xlink="http://www.w3.org/1999/xlink">
	  <question xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">OK, j'ai un exécutable appelé
	      <filename xmlns:xlink="http://www.w3.org/1999/xlink">foobar</filename>, je peux le voir en exécutant
	      <command xmlns:xlink="http://www.w3.org/1999/xlink">ls</command>, mais quand je tape
	      <command xmlns:xlink="http://www.w3.org/1999/xlink">foobar</command> à l'invite de commandes, la réponse
	      est qu'il n'y a pas de tel fichier. Pourquoi le système ne le trouve pas?
	    </para>
	  </question>

	  <answer xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">A l'inverse de MS-DOS, Unix ne regarde pas dans le
	    répertoire courant lorsqu'il essaye de trouver un
	    exécutable que vous voulez exécuter, sauf si
	    vous lui avez dit de le faire.
	    Vous pouvez soit taper <command xmlns:xlink="http://www.w3.org/1999/xlink">./foobar</command>, ce qui
	    signifie <quote xmlns:xlink="http://www.w3.org/1999/xlink">exécute le fichier nommé
	    <filename xmlns:xlink="http://www.w3.org/1999/xlink">foobar</filename> dans le répertoire courant</quote>,
	    soit changer votre variable d'environnement <envar xmlns:xlink="http://www.w3.org/1999/xlink">PATH</envar>
	    de façon à ce qu'elle ressemble à quelque chose comme
	    </para>

	    <informalexample xmlns:xlink="http://www.w3.org/1999/xlink">
	      <screen xmlns:xlink="http://www.w3.org/1999/xlink">bin:/usr/bin:/usr/local/bin:.
	      </screen>
	    </informalexample>

	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Le point à la fin signifie <quote xmlns:xlink="http://www.w3.org/1999/xlink">regarde dans le repertoire
	    courant s'il n'est dans aucun autre</quote>.</para>
	  </answer>
	</qandaentry>

	<qandaentry xmlns:xlink="http://www.w3.org/1999/xlink">
	  <question xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">J'ai appelé mon exécutable <filename xmlns:xlink="http://www.w3.org/1999/xlink">test</filename>,
	    mais rien ne se passe quand je l'exécute. Que se passe-t-il?
	    </para>
	  </question>

	  <answer xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">La plupart des systèmes Unix ont un programme appelé
	      <command xmlns:xlink="http://www.w3.org/1999/xlink">test</command> dans <filename xmlns:xlink="http://www.w3.org/1999/xlink">/usr/bin</filename>
	      et l'interpréteur prend celui-ci avant de vérifier dans
	      le répertoire courant. Soit vous tapez
	      </para>

	    <informalexample xmlns:xlink="http://www.w3.org/1999/xlink">
	      <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">./test</userinput>
	      </screen>
	    </informalexample>

	    <para xmlns:xlink="http://www.w3.org/1999/xlink">soit vous choisissez un meilleur nom pour votre programme !!
	    </para>
	  </answer>
	</qandaentry>

	<qandaentry xmlns:xlink="http://www.w3.org/1999/xlink">
	  <question xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">J'ai compilé mon programme et il semble fonctionner au premier abord,
	    puis il y a une erreur et le système a dit quelque chose comme
	    <errorname xmlns:xlink="http://www.w3.org/1999/xlink">core dumped</errorname>. Que cela signifie-t-il?</para>
	  </question>

	  <answer xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Le nom <firstterm xmlns:xlink="http://www.w3.org/1999/xlink">core dump</firstterm> date
	    des tous premiers jours d'Unix, quand les machines utilisaient
	    la mémoire centrale<footnote xmlns:xlink="http://www.w3.org/1999/xlink"><para xmlns:xlink="http://www.w3.org/1999/xlink">NDT: je n'ai pas trouvé
	    de meilleure traduction pour core memory</para></footnote>pour stocker
	    les données.
	    Simplement, si le programme a échoué sous certaines conditions,
	    le système va écrire le contenu de la mémoire centrale
	    sur le disque dans un fichier appelé
	    <filename xmlns:xlink="http://www.w3.org/1999/xlink">core</filename>, que le programmeur peut ensuite
	    examiner de près pour trouver ce qui s'est mal passé.
	    </para>
	  </answer>
	</qandaentry>

	<qandaentry xmlns:xlink="http://www.w3.org/1999/xlink">
	  <question xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Fascinant, mais que suis-je supposé faire ?</para>
	  </question>

	  <answer xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Utilisez <command xmlns:xlink="http://www.w3.org/1999/xlink">gdb</command> pour analyser le fichier <filename xmlns:xlink="http://www.w3.org/1999/xlink">core</filename>
	    (voir <xref xmlns:xlink="http://www.w3.org/1999/xlink" linkend="debugging"/>).</para>
	  </answer>
	</qandaentry>

	<qandaentry xmlns:xlink="http://www.w3.org/1999/xlink">
	  <question xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Quand mon programme a généré un fichier <filename xmlns:xlink="http://www.w3.org/1999/xlink">core</filename>,
	    il a parlé d'une erreur <errorname xmlns:xlink="http://www.w3.org/1999/xlink">segmentation fault</errorname>.
	    Qu'est-ce que c'est ?</para>
	  </question>

	  <answer xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Cela signifie simplement que votre programme a essayé
	    d'effectuer une opération illégale sur la mémoire;
	    Unix est conçu pour protéger le système d'exploitation
	    et les autres programmes des programmes crapuleux.
	    </para>

	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Les causes habituelles de cela sont :</para>

	    <itemizedlist xmlns:xlink="http://www.w3.org/1999/xlink">
	      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
		<para xmlns:xlink="http://www.w3.org/1999/xlink">Essayer d'écrire dans un pointeur <symbol xmlns:xlink="http://www.w3.org/1999/xlink">NULL</symbol>,
		par exemple
		</para>

		<programlisting xmlns:xlink="http://www.w3.org/1999/xlink">char *foo = NULL;
strcpy(foo, "bang!");
		</programlisting>
	      </listitem>

	      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
		<para xmlns:xlink="http://www.w3.org/1999/xlink">Utiliser un pointeur qui n'a pas été initialisé,
		par exemple</para>

		<programlisting xmlns:xlink="http://www.w3.org/1999/xlink">char *foo;
strcpy(foo, "bang!");
		</programlisting>

		<para xmlns:xlink="http://www.w3.org/1999/xlink">Le pointeur va avoir une valeur aléatoire qui
		avec de la chance, pointera dans une zone de la mémoire qui
		n'est pas disponible pour votre programme et le noyau va tuer
		votre programme avant qu'il ne fasse des dommages. Si
		vous êtes malchanceux, il pointera quelque part dans votre
		propre programme et altèrera une de vos structures de données,
		faisant planter votre programme mystérieusement.
		</para>
	      </listitem>

	      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
		<para xmlns:xlink="http://www.w3.org/1999/xlink">Essayer d'accèder la mémoire au-delà de la fin
		d'un tableau,
		par exemple</para>

		<programlisting xmlns:xlink="http://www.w3.org/1999/xlink">int bar[20];
bar[27] = 6;
		</programlisting>
	      </listitem>

	      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
		<para xmlns:xlink="http://www.w3.org/1999/xlink">Essayer de stocker quelque chose dans la mémoire en lecture seule,
		par exemple</para>

		<programlisting xmlns:xlink="http://www.w3.org/1999/xlink">char *foo = "Ma chaine";
strcpy(foo, "bang!");
		</programlisting>

		<para xmlns:xlink="http://www.w3.org/1999/xlink">Les compilateurs Unix mettent souvent les chaînes comme
		<literal xmlns:xlink="http://www.w3.org/1999/xlink">"Ma chaine"</literal> dans des zones de mémoire
		en lecture seule.
		</para>
	      </listitem>

	      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
		<para xmlns:xlink="http://www.w3.org/1999/xlink">Faire des trucs sales avec
		  <function xmlns:xlink="http://www.w3.org/1999/xlink">malloc()</function> et
		  <function xmlns:xlink="http://www.w3.org/1999/xlink">free()</function>, par exemple</para>

		<programlisting xmlns:xlink="http://www.w3.org/1999/xlink">char bar[80];
free(bar);
		</programlisting>

		<para xmlns:xlink="http://www.w3.org/1999/xlink">ou</para>

		<programlisting xmlns:xlink="http://www.w3.org/1999/xlink">char *foo = malloc(27);
free(foo);
free(foo);
		</programlisting>
	      </listitem>
	    </itemizedlist>

	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Faire une de ces fautes ne conduit pas toujours
	    à une erreur, mais elles sont toujours de mauvais entrainements.
	    Certains systèmes et compilateurs sont plus tolérants que d'autres,
	    ce qui explique pourquoi des programmes qui fonctionnent bien sur un système
	    peuvent planter si vous les essayer sur un autre.
	    </para>
	  </answer>
	</qandaentry>

	<qandaentry xmlns:xlink="http://www.w3.org/1999/xlink">
	  <question xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Des fois quand je reçoit une erreur <errorname xmlns:xlink="http://www.w3.org/1999/xlink">core dump</errorname>,
	    il est précisé <errorname xmlns:xlink="http://www.w3.org/1999/xlink">bus error</errorname>.
	    Il est dit dans mon livre Unix qu'il s'agit d'un problème matériel
	    mais l'ordinateur semble toujours fonctionner. Est-ce vrai ?
	    </para>
	  </question>

	  <answer xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Non, heureusement non (sauf si bien sûr vous avez réellement
	    un problème matériel&#8230;). Cela est habituellement une
	    manière de dire que vous avez accédé à la mémoire
	    d'une façon que vous n'auriez pas dû.
	    </para>
	  </answer>
	</qandaentry>

	<qandaentry xmlns:xlink="http://www.w3.org/1999/xlink">
	  <question xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Toute cette affaire de fichier <filename xmlns:xlink="http://www.w3.org/1999/xlink">core</filename> semble être
	    assez utile, si je peux le faire apparaître quand je le désire.
	    Puis-je faire cela, ou dois-je attendre la prochaine erreur ?</para>
	  </question>

	  <answer xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Oui, ouvrez une autre console ou xterm, faites</para>

	    <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">ps</userinput>
	    </screen>

	    <para xmlns:xlink="http://www.w3.org/1999/xlink">pour trouver l'identifiant du processus de votre programme, et faites
	    </para>

	    <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">kill -ABRT identifiant</userinput>
	    </screen>

	    <para xmlns:xlink="http://www.w3.org/1999/xlink">où
	      <parameter xmlns:xlink="http://www.w3.org/1999/xlink"><replaceable xmlns:xlink="http://www.w3.org/1999/xlink">identifiant</replaceable></parameter> est
	      l'identifiant du processus que vous avez trouvé.</para>

	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Ceci est utile si votre programme est bloqué dans une boucle
	    infinie, par exemple. Si votre programme arrive à bloquer le signal
	    <symbol xmlns:xlink="http://www.w3.org/1999/xlink">SIGABRT</symbol>, il y a d'autres signaux qui ont des effets
	    similaires.
	    </para>

	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Alternativement, vous pouvez créer un fichier <filename xmlns:xlink="http://www.w3.org/1999/xlink">core</filename> depuis
	    votre programme, en appelant la fonction <function xmlns:xlink="http://www.w3.org/1999/xlink">abort()</function>.
	    Voir la page de manuel en ligne de <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">abort</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">3</manvolnum></citerefentry> pour en savoir plus.
	    </para>

            <para xmlns:xlink="http://www.w3.org/1999/xlink">Si vous voulez créer un fichier <filename xmlns:xlink="http://www.w3.org/1999/xlink">core</filename> depuis
	    l'extérieur de votre programme, mais ne voulez pas que le processus
	    s'arrêt,vous pouvez utiliser le programme <command xmlns:xlink="http://www.w3.org/1999/xlink">gcore</command>.
	    Voir la page de manuel en ligne de <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">gcore</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">1</manvolnum></citerefentry> pour plus d'informations.
	    </para>

	  </answer>
	</qandaentry>
      </qandaset>
    </sect2>
  </sect1>

  <sect1 xmlns:xlink="http://www.w3.org/1999/xlink">
    <title xmlns:xlink="http://www.w3.org/1999/xlink">Make</title>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Qu'est-ce que <command xmlns:xlink="http://www.w3.org/1999/xlink">make</command>?</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Quand vous travaillez sur un programme simple avec seulement
      un ou deux fichiers source, taper
      </para>

      <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">cc fichier1.c fichier2.c</userinput>
      </screen>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">n'est pas si mal, mais cela devient rapidement fastidieux quand
      il y a plusieurs fichiers&#8212;et cela peut prendre du temps à compiler aussi.
      </para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Une façon de contourner cela est d'utiliser les fichiers objet
      et de recompiler le fichier source seulement si le code source a changé.
      Aussi, nous pourrions avoir quelque chose comme ça:
      </para>

      <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">cc fichier1.o fichier2.o</userinput> &#8230; <userinput xmlns:xlink="http://www.w3.org/1999/xlink">fichier37.c</userinput> &#8230;
      </screen>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">si nous avions changé le fichier <filename xmlns:xlink="http://www.w3.org/1999/xlink">fichier37.c</filename> mais aucun
      des autres depuis la dernère compilation. Cela pourrait accélerer assez bien
      la compilation mais cela ne resoud pas le problème de la frappe au clavier.
      </para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Ou nous pourrions écrire une procédure pour résoudre ce
      problème de frappe, mais celle-ci devrait tout re-compiler, devenant
      ainsi inefficace sur un gros projet.
      </para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Que se passe-t-il si nous avons des centaines de fichiers source ?
      Que se passe-t-il si nous travaillons dans une équipe avec
      d'autres personnes qui oublient de nous dire quand ils ont changé
      un de leurs fichiers source que nous utilisons ?
      </para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Peut-être pourrions nous mettre ensemble les deux solutions et
      écrire quelque chose comme une procédure qui contiendrait
      quelque règle magique disant quand notre fichier source doit être
      compilé. Maintenant, tout ce dont nous avons besoin est un programme
      qui comprend ces règles, alors que c'est trop compliqué pour
      l'interpréteur.
      </para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Ce programme s'appelle <command xmlns:xlink="http://www.w3.org/1999/xlink">make</command>. Il lit
      dans un fichier, appelé un <firstterm xmlns:xlink="http://www.w3.org/1999/xlink">makefile</firstterm>,
      qui lui dit comment les différents fichiers dépendent les
      uns des autres, et détermine quels fichiers ont besoin d'être
      recompilés et quels n'en ont pas besoin.
      Par exemple, une règle pourrait dire quelque chose comme
      <quote xmlns:xlink="http://www.w3.org/1999/xlink">si <filename xmlns:xlink="http://www.w3.org/1999/xlink">fromboz.o</filename> est plus ancien que
      <filename xmlns:xlink="http://www.w3.org/1999/xlink">fromboz.c</filename>, cela signifie que quelqu'un a dû
      changer <filename xmlns:xlink="http://www.w3.org/1999/xlink">fromboz.c</filename>, aussi il a besoin d'être
      recompilé.</quote> Le makefile possède aussi des règles
      pour dire à <command xmlns:xlink="http://www.w3.org/1999/xlink">make</command> <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">comment</emphasis>
      re-compiler un fichier source, en faisant ainsi un outil encore plus
      puissant.
      </para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Les <filename xmlns:xlink="http://www.w3.org/1999/xlink">Makefile</filename>s sont typiquement stockés dans le même
      répertoire que le source auxquels il s'appliquent, et peuvent être
      appelés <filename xmlns:xlink="http://www.w3.org/1999/xlink">makefile</filename>, <filename xmlns:xlink="http://www.w3.org/1999/xlink">Makefile</filename>
      ou <filename xmlns:xlink="http://www.w3.org/1999/xlink">MAKEFILE</filename>. La plupart des programmeurs utilise le nom
      <filename xmlns:xlink="http://www.w3.org/1999/xlink">Makefile</filename>, celui-ci se trouvant proche du début de la
      liste du contenu du répertoire où il peut être facilement vu.

	<footnote xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Ils n'utilisent pas la forme <filename xmlns:xlink="http://www.w3.org/1999/xlink">MAKEFILE</filename>
	  car les bloques de majuscules sont souvent utilisés pour les
	  fichiers de documentation comme <filename xmlns:xlink="http://www.w3.org/1999/xlink">README</filename>.
	  </para>
	</footnote>
      </para>
    </sect2>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Exemple d'utilisation de <command xmlns:xlink="http://www.w3.org/1999/xlink">make</command></title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Voici un exemple très simple de <filename xmlns:xlink="http://www.w3.org/1999/xlink">Makefile</filename>:
      </para>
      <programlisting xmlns:xlink="http://www.w3.org/1999/xlink">foo: foo.c
	cc -o foo foo.c</programlisting>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Il consiste en deux lignes, une ligne de dépendance et une ligne
      de création.
      </para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">La ligne de dépendance ici consiste en le nom du programme (connu comme
      <firstterm xmlns:xlink="http://www.w3.org/1999/xlink">cible</firstterm>), suivi de deux-points puis un espace et enfin
      le nom du fichier source.
      Quand <command xmlns:xlink="http://www.w3.org/1999/xlink">make</command> lit cette ligne, il vérifie si
       <filename xmlns:xlink="http://www.w3.org/1999/xlink">foo</filename> existe; s'il existe, il compare la date à laquelle
       <filename xmlns:xlink="http://www.w3.org/1999/xlink">foo</filename> a été modifié la dernière fois
       avec la date de dernière modification de <filename xmlns:xlink="http://www.w3.org/1999/xlink">foo.c</filename>.
       Si <filename xmlns:xlink="http://www.w3.org/1999/xlink">foo</filename> n'existe pas ou est plus ancien que <filename xmlns:xlink="http://www.w3.org/1999/xlink">foo.c</filename>,
       il regarde la ligne de création pour trouver ce qu'il doit faire.
       En d'autres termes, il s'agit de la règle à utiliser quand
       <filename xmlns:xlink="http://www.w3.org/1999/xlink">foo.c</filename> a besoin d'être re-compilé.
       </para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">La ligne de création commence avec un <token xmlns:xlink="http://www.w3.org/1999/xlink">tab</token> (appuyez
      sur la touche <keycap xmlns:xlink="http://www.w3.org/1999/xlink">tab</keycap>) suivi de la commande que vous taperiez
      pour créer <filename xmlns:xlink="http://www.w3.org/1999/xlink">foo</filename> si vous deviez le faire à l'invite
      de commandes. Si <filename xmlns:xlink="http://www.w3.org/1999/xlink">foo</filename> n'est pas à jour ou n'existe
      pas, <command xmlns:xlink="http://www.w3.org/1999/xlink">make</command> exécute alors cette commande pour
      le créer. En d'autres termes, il s'agit de la règle permettant
      à make de re-compiler <filename xmlns:xlink="http://www.w3.org/1999/xlink">foo.c</filename>.
      </para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Aussi, quand vous tapez <userinput xmlns:xlink="http://www.w3.org/1999/xlink">make</userinput>, il vérifiera
      que <filename xmlns:xlink="http://www.w3.org/1999/xlink">foo</filename> est à jour en respect de vos derniers
      changements sur <filename xmlns:xlink="http://www.w3.org/1999/xlink">foo.c</filename>. Ce principe peut être
      étendu à des <filename xmlns:xlink="http://www.w3.org/1999/xlink">Makefile</filename>s de plusieurs
      centaines de cibles&#8212;en fait, sur FreeBSD, il est possible de
      compiler un système d'exploitation entier en tapant juste
      <userinput xmlns:xlink="http://www.w3.org/1999/xlink">make world</userinput> dans le répertoire approprié !
      </para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Une autre propriété utile des makefiles est que les cibles
      n'ont pas nécessairement besoin d'être des programmes.
      Par exemple, nous pourrions avoir un <filename xmlns:xlink="http://www.w3.org/1999/xlink">Makefile</filename>
      qui ressemble à cela:
      </para>

      <programlisting xmlns:xlink="http://www.w3.org/1999/xlink">foo: foo.c
	cc -o foo foo.c

install:
	cp foo /home/moi</programlisting>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Nous pouvons dire à <command xmlns:xlink="http://www.w3.org/1999/xlink">make</command> quelle cible nous
      voulons en tapant:
      </para>

      <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">make cible</userinput>
      </screen>

      <para xmlns:xlink="http://www.w3.org/1999/xlink"><command xmlns:xlink="http://www.w3.org/1999/xlink">make</command> ira seulement voir cette cible
      et ingorera les autres. Par exemple, si nous tapons
      <userinput xmlns:xlink="http://www.w3.org/1999/xlink">make foo</userinput> avec le <filename xmlns:xlink="http://www.w3.org/1999/xlink">Makefile</filename> du dessus,
      <command xmlns:xlink="http://www.w3.org/1999/xlink">make</command> ignorera la cible <phrase xmlns:xlink="http://www.w3.org/1999/xlink" remap="action">install</phrase>.
      </para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Si nous tapons juste <userinput xmlns:xlink="http://www.w3.org/1999/xlink">make</userinput>,
      <command xmlns:xlink="http://www.w3.org/1999/xlink">make</command> regardera toujours la première cible et s'arrêtera
      sans regarder aucune autre. Aussi, si nous avions tapé <userinput xmlns:xlink="http://www.w3.org/1999/xlink">make</userinput>
      seul, <command xmlns:xlink="http://www.w3.org/1999/xlink">make</command> serait juste allé à la cible <phrase xmlns:xlink="http://www.w3.org/1999/xlink" remap="action">foo</phrase>,
      aurait recompilé <filename xmlns:xlink="http://www.w3.org/1999/xlink">foo</filename> si nécessaire et se
      serait arrêté sans aller à la cible <phrase xmlns:xlink="http://www.w3.org/1999/xlink" remap="action">install</phrase>.
      </para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Notez que la cible <phrase xmlns:xlink="http://www.w3.org/1999/xlink" remap="action">install</phrase> ne dépend pour l'instant
      de rien ! Cela signifie que la commande qui suit est toujours exécutée
      lorsque nous essayons de créer cette cible en tapant <userinput xmlns:xlink="http://www.w3.org/1999/xlink">make install</userinput>.
      Dans ce cas, <command xmlns:xlink="http://www.w3.org/1999/xlink">make</command> va copier <filename xmlns:xlink="http://www.w3.org/1999/xlink">foo</filename> dans le
      répertoire de l'utilisateur. Cela est souvent utilisé par les
      <filename xmlns:xlink="http://www.w3.org/1999/xlink">Makefile</filename>s des applications, ainsi l'application
      peut être installée dans le répertoire correct
      quand elle a été correctement compilée
      </para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Il s'agit d'un sujet légèrement embrouillant à essayer
      et expliquer.
      Si vous ne comprenez pas bien comment <command xmlns:xlink="http://www.w3.org/1999/xlink">make</command>
      fonctionne, la meilleure chose à faire est d'écrire un petit
      programme comme <quote xmlns:xlink="http://www.w3.org/1999/xlink">bonjour monde</quote> et un fichier <filename xmlns:xlink="http://www.w3.org/1999/xlink">Makefile</filename>
      comme le précédent et de le tester. Ensuite continuez en
      utilisant plus d'un fichier source ou en ayant un fichier source
      incluant un fichier d'en-tête. La commande <command xmlns:xlink="http://www.w3.org/1999/xlink">touch</command> est
      très utile ici&#8212;elle change la date sur un fichier sans avoir
      à l'éditer.
      </para>
    </sect2>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Les <filename xmlns:xlink="http://www.w3.org/1999/xlink">Makefiles</filename>de FreeBSD</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Les <filename xmlns:xlink="http://www.w3.org/1999/xlink">Makefile</filename>s peuvent être plutôt compliqués
      à écrire. Heureusement, les systèmes BSD comme FreeBSD sont fournis avec
      des fichiers très puissants comme partie intégrante du système.
      Un très bon exemple est le système des logiciels portés. Voici
      la partie essentielle d'un <filename xmlns:xlink="http://www.w3.org/1999/xlink">Makefile</filename> typique des logiciels portés:
      </para>

      <programlisting xmlns:xlink="http://www.w3.org/1999/xlink">MASTER_SITES=   ftp://freefall.cdrom.com/pub/FreeBSD/LOCAL_PORTS/
DISTFILES=      scheme-microcode+dist-7.3-freebsd.tgz

.include &lt;bsd.port.mk&gt;</programlisting>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Maintenant, si nous allons dans le répertoire de ce logiciel porté et
      tapons <userinput xmlns:xlink="http://www.w3.org/1999/xlink">make</userinput>, la chose suivante se passe :
      </para>

      <procedure xmlns:xlink="http://www.w3.org/1999/xlink">
	<step xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Une vérification est faite pour voir si le code source de ce logiciel porté
	  est déjà dans le système.
	  </para>
	</step>

	<step xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Si celui-ci n'y est pas, une connexion FTP à l'URL dans
	  <symbol xmlns:xlink="http://www.w3.org/1999/xlink">MASTER_SITES</symbol> est faite pour télécharger le source.
	  </para>
	</step>

	<step xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">La somme de contrôle (<literal xmlns:xlink="http://www.w3.org/1999/xlink">checksum</literal>) du source est calculée
	  et comparée avec celle d'une bonne et connue copie du source. Cela est fait pour
	  être sûr que le source n'a pas été corrompu pendant le transfert.
	  </para>
	</step>

	<step xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Tout changement requis pour faire fonctionner le source sur FreeBSD est appliqué&#8212;
	  cela est connu sous le nom de <firstterm xmlns:xlink="http://www.w3.org/1999/xlink">correctif</firstterm><footnote xmlns:xlink="http://www.w3.org/1999/xlink"><para xmlns:xlink="http://www.w3.org/1999/xlink">NDT: On entendra plus souvent parler de
	  <literal xmlns:xlink="http://www.w3.org/1999/xlink">patch</literal>.</para></footnote>.
	  </para>
	</step>

	<step xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Toute configuration spéciale nécessaire pour le source est faite.
	  (Beaucoup de distributions de programmes Unix essaye de fonctionner quelle que soit
	  la version d'Unix sur laquelle elles sont compilées et quelles que soient les
	  caractéristiques optionnelles qui sont présentes&#8212;c'est ce qui se trouve
	  dans le scénario des logiciels portés pour FreeBSD).
	  </para>
	  <!--  A verifier
	  optional Unix features are present&mdash;this is where
	    they are given the information in the FreeBSD ports
	    scenario.</para>
	    -->
	</step>

	<step xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Le code source pour ce programme est compilé. En effet, nous changeons
	  de répertoire pour le répertoire où le source a été
	  décompressé et faisons <command xmlns:xlink="http://www.w3.org/1999/xlink">make</command>&#8212;le fichier <filename xmlns:xlink="http://www.w3.org/1999/xlink">Makefile</filename>
	  du programme contient les informations nécessaires pour construire le programme.
	  </para>
	</step>

	<step xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Nous avons maintenant une version compilée du programme. Si nous le désirons,
	  nous pouvons le tester maintenant; quand nous sommes confiant dans le programme, nous pouvons
	  taper <userinput xmlns:xlink="http://www.w3.org/1999/xlink">make install</userinput>. Cela va installer le programme et ses fichiers de
	  soutien nécessaires au bon endroit; une entrée est aussi créée dans
	  la <database xmlns:xlink="http://www.w3.org/1999/xlink">base de données des logiciels pré-compilés</database>, ainsi
	  le logiciel porté peut être facilement désinstallé plus tard si
	  nous changeons d'avis sur ce programme.
	  </para>
	</step>
      </procedure>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Maintenant je pense que vous serez d'accord que c'est plus impressionnant qu'une
      procédure de quatre lignes !
      </para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Le secret réside dans la dernière ligne qui dit à
      <command xmlns:xlink="http://www.w3.org/1999/xlink">make</command> de regarder dans le <filename xmlns:xlink="http://www.w3.org/1999/xlink">Makefile</filename> système
      appelé <filename xmlns:xlink="http://www.w3.org/1999/xlink">bsd.port.mk</filename>. Il est facile de fermer les yeux sur cette
      ligne mais c'est ici que tous les trucs forts se passent&#8212;quelqu'un a écrit un <filename xmlns:xlink="http://www.w3.org/1999/xlink">Makefile</filename>
      qui dit à <command xmlns:xlink="http://www.w3.org/1999/xlink">make</command> de faire tout ce qu'il y a au-dessus (plus un couple d'autres choses
      que je n'ai pas mentionnées, comme la gestion des erreurs) et n'importe qui peut avoir accès
      à cela simplement est ajoutant une simple ligne dans son propre fichier <filename xmlns:xlink="http://www.w3.org/1999/xlink">Makefile</filename> !
      </para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Si vous voulez jeter un regard sur ces <filename xmlns:xlink="http://www.w3.org/1999/xlink">Makefile</filename>s système,
      ils se trouvent <filename xmlns:xlink="http://www.w3.org/1999/xlink">/usr/share/mk</filename> mais il est probablement mieux
      d'attendre un moment jusqu'à ce que vous ayez un peu d'entrainement avec les
      <filename xmlns:xlink="http://www.w3.org/1999/xlink">Makefile</filename>s car ceux-ci sont très compliqués (et
      si vous les lisez, soyez sûr d'avoir un thermos de café fort à portée
      de main !)
      </para>
    </sect2>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Utilisations plus avancées de <command xmlns:xlink="http://www.w3.org/1999/xlink">make</command></title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink"><command xmlns:xlink="http://www.w3.org/1999/xlink">Make</command> est un outil très puissant et peut
      faire beaucoup plus que le simple exemple précédent ne l'a montré.
      Malheureusement, il y a différentes versions de <command xmlns:xlink="http://www.w3.org/1999/xlink">make</command>
      et elles diffèrent considérablement.
      Le meilleur moyen d'apprendre ce qu'elles peuvent faire est probablement de lire
      la documentation&#8212;heureusement cette introduction vous donnera la base
      à partir de laquelle vous pourrez faire cela.
      </para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">La version de <command xmlns:xlink="http://www.w3.org/1999/xlink">make</command> fournies avec FreeBSD est le
      <application xmlns:xlink="http://www.w3.org/1999/xlink">Berkeley make</application>(make de Berkeley); il y a un cours d'instruction
      pour celui-ci dans <filename xmlns:xlink="http://www.w3.org/1999/xlink">/usr/share/doc/psd/12.make</filename>. Pour le voir, faites
      </para>

      <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">zmore paper.ascii.gz</userinput>
      </screen>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">dans ce répertoire.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Beaucoup d'applications dans les logiciels portés utilisent
      <application xmlns:xlink="http://www.w3.org/1999/xlink">GNU make</application>, qui possède un très bon ensemble de page
      d'<quote xmlns:xlink="http://www.w3.org/1999/xlink">info</quote>. Si vous avez installé un de ces logiciels portés,
      <application xmlns:xlink="http://www.w3.org/1999/xlink">GNU make</application> aura été automatiquement installé
      sous le nom de <command xmlns:xlink="http://www.w3.org/1999/xlink">gmake</command>. Il est aussi disponible comme logiciel porté ou
      logiciel pré-compilé seul.
      </para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Pour voir les pages d'info pour <application xmlns:xlink="http://www.w3.org/1999/xlink">GNU make</application>, vous devrez
      editer le fichier <filename xmlns:xlink="http://www.w3.org/1999/xlink">dir</filename> dans le répertoire
      <filename xmlns:xlink="http://www.w3.org/1999/xlink">/usr/local/info</filename> pour ajouter une entrée pour celui-ci.
      Cela implique d'ajouter une ligne
      </para>

      <programlisting xmlns:xlink="http://www.w3.org/1999/xlink"> * Make: (make).                 l'utilitaire GNU Make.</programlisting>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">au fichier. Une fois que vous avez fait ceci, vous pouvez taper
	<userinput xmlns:xlink="http://www.w3.org/1999/xlink">info</userinput> et ensuite sélectionner
	<guimenuitem xmlns:xlink="http://www.w3.org/1999/xlink">make</guimenuitem> dans le menu (ou dans <application xmlns:xlink="http://www.w3.org/1999/xlink">Emacs</application>,
	faites <userinput xmlns:xlink="http://www.w3.org/1999/xlink">C-h i</userinput>).
      </para>

    </sect2>
  </sect1>

  <sect1 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="debugging">
    <title xmlns:xlink="http://www.w3.org/1999/xlink">Déverminer</title>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Le dévermineur</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Le dévermineur fourni avec FreeBSD est appelé
      <command xmlns:xlink="http://www.w3.org/1999/xlink">gdb</command> (<application xmlns:xlink="http://www.w3.org/1999/xlink">GNU
	  debugger</application>). Vous pouvez le démarrer en tapant
      </para>

      <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">gdb nomprog</userinput>
      </screen>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">bien que la plupart des gens préfèrent le démarrer au
      sein d'<application xmlns:xlink="http://www.w3.org/1999/xlink">Emacs</application>. Vous pouvez faire cela avec:
      </para>

      <screen xmlns:xlink="http://www.w3.org/1999/xlink"><userinput xmlns:xlink="http://www.w3.org/1999/xlink">M-x gdb RET nomprog RET</userinput>
      </screen>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Utiliser un dévermineur vous permet d'exécuter le programme
      dans des circonstances plus contrôlées. Typiquement, vous pouvez
      exécuter le programme ligne à ligne, inspecter la valeur des
      variables, changer cette dernière, dire au dévermineur d'exécuter jusqu'à
      un certain point puis de s'arrêter etc... Vous pouvez même vous brancher
      sur un programme en fonctionnement, ou charger un fichier <filename xmlns:xlink="http://www.w3.org/1999/xlink">core</filename>
      pour enquêter sur le plantage du programme. Il est même possible de
      déverminer le noyau, quoique ce soit un peu plus rusé que de
      déverminer des applications utilisateur dont nous discuterons
      dans cette section.
      </para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink"><command xmlns:xlink="http://www.w3.org/1999/xlink">gdb</command> dispose d'une assez bonne aide en ligne
      comme d'un ensemble de pages d'info, aussi cette section va se concentrer sur
      quelques commandes basiques.
      </para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Finalement, si vous trouvez son interface texte non fonctionnelle,
      il y a une interface graphique pour celui-ci, <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="../../ports/devel.html">xxgdb</link>,
      dans la collection des logiciels portés.
      </para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Cette section a pour but d'être une introduction
      à l'utilisation de <command xmlns:xlink="http://www.w3.org/1999/xlink">gdb</command> et ne couvre pas les sujets
      très spécialisés comme le déverminage du noyau.
      </para>
    </sect2>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Exécuter un programme dans le dévermineur</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Vous devrez avoir compilé le programme avec l'option	<option xmlns:xlink="http://www.w3.org/1999/xlink">-g</option>
      pour avoir la meilleure utilisation de <command xmlns:xlink="http://www.w3.org/1999/xlink">gdb</command>. Il fonctionnera sans
      mais vous ne verrez que le nom de la fonction dans laquelle vous vous trouvez plutôt
      que son code source. Si vous voyez une ligne comme:
      </para>

      <screen xmlns:xlink="http://www.w3.org/1999/xlink">&#8230; (no debugging symbols found) &#8230;
      </screen>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">quand <command xmlns:xlink="http://www.w3.org/1999/xlink">gdb</command> démarre, vous saurez que le programme
      n'a pas été compilé avec l'option <option xmlns:xlink="http://www.w3.org/1999/xlink">-g</option>.
      </para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">A l'invite de <command xmlns:xlink="http://www.w3.org/1999/xlink">gdb</command>, tapez
      <userinput xmlns:xlink="http://www.w3.org/1999/xlink">break main</userinput>. Cela dira au dévermineur
      de passer le code préliminaire d'initialisation du programme
      et de démarrer au début de votre code. Maintenant tapez
      <userinput xmlns:xlink="http://www.w3.org/1999/xlink">run</userinput> pour démarrer le programme&#8212;cela va
      démarrer au début du code d'initialisation et ensuite s'arrêtera
      lors de l'appel à <function xmlns:xlink="http://www.w3.org/1999/xlink">main()</function>.
      (Si vous vous êtes toujours demandé où <function xmlns:xlink="http://www.w3.org/1999/xlink">main()</function>
      était appelé, maintenant vous le savez !).
      </para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Vous pouvez maintenant vous déplacer dans le programme ligne par ligne en
      pressant <command xmlns:xlink="http://www.w3.org/1999/xlink">n</command>. Si vous arrivez à l'appel d'une fonction,
      vous pouvez entrer dans celle-ci en appuyant sur <command xmlns:xlink="http://www.w3.org/1999/xlink">s</command>. Une fois
      que vous êtes dans l'appel de la fonction, vous pouvez retourner dans le code
      appelant en appuyant sur <command xmlns:xlink="http://www.w3.org/1999/xlink">f</command>. Vous pouvez aussi utiliser
      <command xmlns:xlink="http://www.w3.org/1999/xlink">up</command> et <command xmlns:xlink="http://www.w3.org/1999/xlink">down</command> pour avoir une vue rapide de l'appelant.
      </para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Voici un exemple simple de comment détecter une erreur dans un programme avec
      <command xmlns:xlink="http://www.w3.org/1999/xlink">gdb</command>. Voici notre programme (avec une erreur délibérée):
      </para>

      <programlisting xmlns:xlink="http://www.w3.org/1999/xlink">#include &lt;stdio.h&gt;

int bazz(int anint);

main() {
	int i;

	printf("C'est mon programme\n");
	bazz(i);
	return 0;
}

int bazz(int anint) {
	printf("Vous m'avez fourni %d\n", anint);
	return anint;
}</programlisting>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Le programme met <symbol xmlns:xlink="http://www.w3.org/1999/xlink">i</symbol> à <literal xmlns:xlink="http://www.w3.org/1999/xlink">5</literal> et le passe à une
      fonction <function xmlns:xlink="http://www.w3.org/1999/xlink">bazz()</function> qui imprime le nombre que nous lui avons donné.
      </para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Puis nous compilons et exécutons le programme obtenu
      </para>

      <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">cc -g -o temp temp.c</userinput>
<prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">./temp</userinput>
C'est mon programme
Vous m'avez fourni 4231
      </screen>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Ce n'était pas ce que nous attendions ! Il est temps de voir ce qui se passe !
      </para>

      <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">gdb temp</userinput>
GDB is free software and you are welcome to distribute copies of it
 under certain conditions; type "show copying" to see the conditions.
There is absolutely no warranty for GDB; type "show warranty" for details.
GDB 4.13 (i386-unknown-freebsd), Copyright 1994 Free Software Foundation, Inc.
(gdb) <userinput xmlns:xlink="http://www.w3.org/1999/xlink">break main</userinput>				<lineannotation xmlns:xlink="http://www.w3.org/1999/xlink">passe le code d'initialisation</lineannotation>
Breakpoint 1 at 0x160f: file temp.c, line 9.	<lineannotation xmlns:xlink="http://www.w3.org/1999/xlink">gdb met un point d'arrêt sur main()</lineannotation>
(gdb) <userinput xmlns:xlink="http://www.w3.org/1999/xlink">run</userinput>					<lineannotation xmlns:xlink="http://www.w3.org/1999/xlink">Exécute jusqu'à main()</lineannotation>
Starting program: /home/james/tmp/temp		<lineannotation xmlns:xlink="http://www.w3.org/1999/xlink">Le programme démarre</lineannotation>

Breakpoint 1, main () at temp.c:9		<lineannotation xmlns:xlink="http://www.w3.org/1999/xlink">gdb s'arrête à main()</lineannotation>
(gdb) <userinput xmlns:xlink="http://www.w3.org/1999/xlink">n</userinput>						<lineannotation xmlns:xlink="http://www.w3.org/1999/xlink">Va à la ligne suivante</lineannotation>
C'est mon programme				<lineannotation xmlns:xlink="http://www.w3.org/1999/xlink">Le programme écrit</lineannotation>
(gdb) <userinput xmlns:xlink="http://www.w3.org/1999/xlink">s</userinput>						<lineannotation xmlns:xlink="http://www.w3.org/1999/xlink">entre dans bazz()</lineannotation>
bazz (anint=4231) at temp.c:17			<lineannotation xmlns:xlink="http://www.w3.org/1999/xlink">gdb montre la pile</lineannotation>
(gdb)
      </screen>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Arrêtons-nous une minute! Comment <symbol xmlns:xlink="http://www.w3.org/1999/xlink">anint</symbol> a eu la valeur
      <literal xmlns:xlink="http://www.w3.org/1999/xlink">4231</literal>? Ne l'avons-nous pas mis à <literal xmlns:xlink="http://www.w3.org/1999/xlink">5</literal>
      dans <function xmlns:xlink="http://www.w3.org/1999/xlink">main()</function>? Remontons dans <function xmlns:xlink="http://www.w3.org/1999/xlink">main()</function>
      et regardons.
      </para>

      <screen xmlns:xlink="http://www.w3.org/1999/xlink">(gdb) <userinput xmlns:xlink="http://www.w3.org/1999/xlink">up</userinput>					<lineannotation xmlns:xlink="http://www.w3.org/1999/xlink">Remonte la pile des appels</lineannotation>
#1  0x1625 in main () at temp.c:11		<lineannotation xmlns:xlink="http://www.w3.org/1999/xlink">gdb montre la pile</lineannotation>
(gdb) <userinput xmlns:xlink="http://www.w3.org/1999/xlink">p i</userinput>					<lineannotation xmlns:xlink="http://www.w3.org/1999/xlink">Montre la valeur de i</lineannotation>
$1 = 4231					<lineannotation xmlns:xlink="http://www.w3.org/1999/xlink">gdb montre 4231</lineannotation>
      </screen>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Oh ! En regardant dans le code, nous avons oublié d'initialiser <symbol xmlns:xlink="http://www.w3.org/1999/xlink">i</symbol>.
      Nous aurions dû mettre
      </para>

      <programlisting xmlns:xlink="http://www.w3.org/1999/xlink"><lineannotation xmlns:xlink="http://www.w3.org/1999/xlink">&#8230;</lineannotation>
main() {
	int i;

	i = 5;
	printf("C'est mon programme\n");
<lineannotation xmlns:xlink="http://www.w3.org/1999/xlink">&#8230;</lineannotation></programlisting>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">mais nous n'avions pas mis la ligne <literal xmlns:xlink="http://www.w3.org/1999/xlink">i=5;</literal>. Comme
      nous n'avons pas initialisé <symbol xmlns:xlink="http://www.w3.org/1999/xlink">i</symbol>, il a pris le nombre se trouvant
      dans la zone de mémoire quand le programme a démarré,
      ce qui dans ce cas était <literal xmlns:xlink="http://www.w3.org/1999/xlink">4231</literal>.
      </para>

      <note xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink"><command xmlns:xlink="http://www.w3.org/1999/xlink">gdb</command> montre la pile chaque fois que nous entrons ou sortons
	d'une fonction, même si nous avons utilisé	<command xmlns:xlink="http://www.w3.org/1999/xlink">up</command> et
	<command xmlns:xlink="http://www.w3.org/1999/xlink">down</command> pour nous déplacer dans la pile des appels.
	Cela montre le nom de la fonction et les valeurs de ses arguments, ce qui nous aide
	à garder une trace d'où nous sommes et de ce qui se passe.
	(La pile est une zone de stockage où le programme stocke les informations
	sur les arguments passés aux fonctions et où il doit aller
	quand il revient d'une fonction).
	</para>
      </note>
    </sect2>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Examiner un fichier <filename xmlns:xlink="http://www.w3.org/1999/xlink">core</filename></title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Un fichier <filename xmlns:xlink="http://www.w3.org/1999/xlink">core</filename> est basiquement un fichier qui contient
      l'état complet du processus quand il s'est planté.
      Dans <quote xmlns:xlink="http://www.w3.org/1999/xlink">le bon vieux temps</quote>, les programmeurs devait imprimer des
      listings en hexadécimal de fichiers <filename xmlns:xlink="http://www.w3.org/1999/xlink">core</filename> et transpirer
      sur leur manuels de code machine, mais la vie est maintenant un peu plus facile.
      Par chance, sous FreeBSD et les autres systèmes 4.4BSD, un fichier <filename xmlns:xlink="http://www.w3.org/1999/xlink">core</filename>
      est appelé <filename xmlns:xlink="http://www.w3.org/1999/xlink">nomprog.core</filename>
      plutôt que juste <filename xmlns:xlink="http://www.w3.org/1999/xlink">core</filename>, pour mieux savoir à quel
      programme appartient un fichier <filename xmlns:xlink="http://www.w3.org/1999/xlink">core</filename>.
      </para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Pour examiner un fichier <filename xmlns:xlink="http://www.w3.org/1999/xlink">core</filename>, démarrez <command xmlns:xlink="http://www.w3.org/1999/xlink">gdb</command>
      de façon habituel. Plutôt que de taper <command xmlns:xlink="http://www.w3.org/1999/xlink">break</command> ou
      <command xmlns:xlink="http://www.w3.org/1999/xlink">run</command>, tapez
      </para>

      <screen xmlns:xlink="http://www.w3.org/1999/xlink">(gdb) <userinput xmlns:xlink="http://www.w3.org/1999/xlink">core nomprog.core</userinput>
      </screen>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Si vous n'êtes pas dans le même répertoire que le fichier
      <filename xmlns:xlink="http://www.w3.org/1999/xlink">core</filename>, vous devrez faire <userinput xmlns:xlink="http://www.w3.org/1999/xlink">dir /path/to/core/file</userinput>
      d'abord.
      </para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Vous devriez voir quelque chose comme cela:
      </para>

      <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">gdb a.out</userinput>
GDB is free software and you are welcome to distribute copies of it
 under certain conditions; type "show copying" to see the conditions.
There is absolutely no warranty for GDB; type "show warranty" for details.
GDB 4.13 (i386-unknown-freebsd), Copyright 1994 Free Software Foundation, Inc.
(gdb) <userinput xmlns:xlink="http://www.w3.org/1999/xlink">core a.out.core</userinput>
Core was generated by `a.out'.
Program terminated with signal 11, Segmentation fault.
Cannot access memory at address 0x7020796d.
#0  0x164a in bazz (anint=0x5) at temp.c:17
(gdb)
      </screen>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Dans ce cas, le programme a été appelé	<filename xmlns:xlink="http://www.w3.org/1999/xlink">a.out</filename>,
      aussi le fichier <filename xmlns:xlink="http://www.w3.org/1999/xlink">core</filename> s'appelle <filename xmlns:xlink="http://www.w3.org/1999/xlink">a.out.core</filename>.
      Nous pouvons voir que le programme s'est planté car il a essayé
      d'accèder à une zone dans la mémoire qui n'était pas
      disponible dans la fonction appelée <function xmlns:xlink="http://www.w3.org/1999/xlink">bazz</function>.
      </para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Quelquefois il est utile de pouvoir voir comment une fonction a été
      appelée car le problème peut avoir eu lieu bien avant
      dans la pile des appels dans un programme complexe. La commande <command xmlns:xlink="http://www.w3.org/1999/xlink">bt</command>
      demande à <command xmlns:xlink="http://www.w3.org/1999/xlink">gdb</command> d'afficher une trace inverse de la pile
      des appels:
      </para>

      <screen xmlns:xlink="http://www.w3.org/1999/xlink">(gdb) <userinput xmlns:xlink="http://www.w3.org/1999/xlink">bt</userinput>
#0  0x164a in bazz (anint=0x5) at temp.c:17
#1  0xefbfd888 in end ()
#2  0x162c in main () at temp.c:11
(gdb)
      </screen>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">La fonction <function xmlns:xlink="http://www.w3.org/1999/xlink">end()</function> est appelée lorsque le programme se plante;
      dans ce cas, la fonction <function xmlns:xlink="http://www.w3.org/1999/xlink">bazz()</function> a été appelée
      <function xmlns:xlink="http://www.w3.org/1999/xlink">main()</function>.
      </para>
    </sect2>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Se brancher sur un programme en cours d'exécution</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Une des plus belles caractéristiques de <command xmlns:xlink="http://www.w3.org/1999/xlink">gdb</command>
      est qu'il peut se brancher sur un programme qui s'exécute déjà.
      Bien sûr, cela suppose que vous ayez les privilèges suffisants pour
      le faire. Un problème habituel est quand vous vous déplacez dans
      un programme qui se dédouble et que vous voulez tracer le programme fils
      cependant le dévermineur ne vous laissera seulement tracer le père.
      </para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Ce que vous devez faire est de démarrer un autre <command xmlns:xlink="http://www.w3.org/1999/xlink">gdb</command>,
      utiliser <command xmlns:xlink="http://www.w3.org/1999/xlink">ps</command> pour trouver l'ID du processus fils et faire
      </para>

      <screen xmlns:xlink="http://www.w3.org/1999/xlink">(gdb) <userinput xmlns:xlink="http://www.w3.org/1999/xlink">attach identifiant_processus</userinput>
      </screen>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">dans <command xmlns:xlink="http://www.w3.org/1999/xlink">gdb</command>, et déverminer ensuite comme d'habitude.
      </para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink"><quote xmlns:xlink="http://www.w3.org/1999/xlink">C'est tout simple,</quote> pensez-vous certainement,<quote xmlns:xlink="http://www.w3.org/1999/xlink">
      mais pendant le temps que je faisais ça, le processus fils
      sera déjà parti loin</quote>. Ne vous en faites pas,
      noble lecteur, voici comment faire (avec l'appui des pages d'info
      de <command xmlns:xlink="http://www.w3.org/1999/xlink">gdb</command>):
      </para>

      <screen xmlns:xlink="http://www.w3.org/1999/xlink"><lineannotation xmlns:xlink="http://www.w3.org/1999/xlink">&#8230;</lineannotation>
if ((pid = fork()) &lt; 0)		/* _Toujours_ verifier cela */
	error();
else if (pid == 0) {		/* le fils */
	int PauseMode = 1;

	while (PauseMode)
		sleep(10);	/* Attendre jusqu'a ce que quelqu'un se brache sur nous */
	<lineannotation xmlns:xlink="http://www.w3.org/1999/xlink">&#8230;</lineannotation>
} else {			/* le pere */
	<lineannotation xmlns:xlink="http://www.w3.org/1999/xlink">&#8230;</lineannotation>
      </screen>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Maintenant tout ce que nous avons à faire est de nous brancher sur le processus fils,
      de mettre <symbol xmlns:xlink="http://www.w3.org/1999/xlink">PauseMode</symbol> à <literal xmlns:xlink="http://www.w3.org/1999/xlink">0</literal> et d'attendre
      que l'appel à la fonction <function xmlns:xlink="http://www.w3.org/1999/xlink">sleep()</function> retourne !
      </para>
    </sect2>
  </sect1>

  <sect1 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="emacs">
    <title xmlns:xlink="http://www.w3.org/1999/xlink">Utiliser Emacs comme environnement de développement</title>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Emacs</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Malheureusement, les systèmes Unix ne sont pas fournis avec des sortes
      d'environnements de développement intégrés
      tout-ce-que-vous-avez-toujours-voulu-et-beaucoup-plus-dans-un-ensemble-gigantesque
      que d'autres sytèmes ont.

	<footnote xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Sauf si vous payez des sommes importantes.
	  </para>
	</footnote>

	Toutefois, il est possible de se faire son propre environnement.
	Cela n'est pas forcément aussi joli et il peut ne pas être
	autant intégré mais vous pouvez le personnaliser comme
	vous voulez. Et c'est gratuit. Et vous en avez les sources.
	</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">La clé de tout cela est Emacs. Maintenant il y a des gens qui le détestent,
      mais beaucoup l'aiment. Si vous êtes un du premier groupe, j'ai peur que cette section
      ait peu d'intérêt pour vous. Vous aurez besoin d'une quantité
      moyenne de mémoire pour le faire fonctionner&#8212;Je recommenderai 8Mo en mode
      texte et 16Mo dans X pour avoir un minimum de performances.
      </para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Emacs est basiquement un éditeur hautement personnalisable
      &#8212;en effet, il a été personnalisé au point de ressembler
      plus à un système d'exploitation qu'à un éditeur!
      Beaucoup de développeurs et d'administrateurs système passent
      en fait pratiquement tout leur temps à travailler dans Emacs,
      en ne le quittant qu'à leur déconnexion.
      </para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Il est impossible de dire tout ce qu'Emacs peut faire ici,
      mais voici quelques unes des caractéristiques d'intérêt
      pour les développeurs:
      </para>

      <itemizedlist xmlns:xlink="http://www.w3.org/1999/xlink">
	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Un très puissant éditeur, permettant le chercher-remplacer sur
	  les chaînes et les expressions régulières (motifs),
	  sauter à la fin ou au début d'un bloc, etc, etc.
	  </para>
	</listitem>

	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Menus déroulants et aide en ligne.
	  </para>
	</listitem>

	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Colorisation syntaxique en fonction du langage et indentation.
	  </para>
	</listitem>

	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Totalement personnalisable.
	  </para>
	</listitem>

	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Vous pouvez compiler et déverminer des programmes dans Emacs.
	  </para>
	</listitem>

	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Sur erreur de compilation, vous pouvez aller directement
	  à la ligne de code source fautive.
	  </para>
	</listitem>

	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Une interface amicale au programme <command xmlns:xlink="http://www.w3.org/1999/xlink">info</command>
	  utilisé pour lire la documentation hypertexte GNU,
	  incluant la documentation sur Emacs elle-même.
	  </para>
	</listitem>

	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Une interface agréable à <command xmlns:xlink="http://www.w3.org/1999/xlink">gdb</command>, vous permettant
	  de voir le code source au fur et à mesure que vous vous déplacez
	  dans votre programme.
	  </para>
	</listitem>

	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Vous pouvez lire les nouvelles Usenet et envoyer des e-mails pendant que
	  votre programme est en compilation.
	  </para>
	</listitem>
      </itemizedlist>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Et sans doute beaucoup plus que je n'ai survolé.
      </para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Emacs peut être installé sur FreeBSD en utilisant Emacs
      <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="../../ports/editors.html">le logiciel porté Emacs</link>.
      </para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Une fois installé, démarrez-le et faites <userinput xmlns:xlink="http://www.w3.org/1999/xlink">C-h t</userinput>
      pour lire un cours sur Emacs&#8212;cela signifie maintenir la touche <keycap xmlns:xlink="http://www.w3.org/1999/xlink">control</keycap>,
      presser <keycap xmlns:xlink="http://www.w3.org/1999/xlink">h</keycap>, relâcher la touche <keycap xmlns:xlink="http://www.w3.org/1999/xlink">control</keycap>
      et presser <keycap xmlns:xlink="http://www.w3.org/1999/xlink">t</keycap>. (Alternativement, vous pouvez utiliser la souris
      pour sélectionner <guimenuitem xmlns:xlink="http://www.w3.org/1999/xlink">Emacs Tutorial</guimenuitem> dans le menu
      <guimenu xmlns:xlink="http://www.w3.org/1999/xlink">Help</guimenu>).
      </para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Bien que Emacs possède des menus, il est valable d'apprendre les raccourcis
      clavier, étant plus rapide quand vous éditez quelque chose
      d'appuyer sur un couple de touches que de reprendre la souris et de cliquer
      au bon endroit. Et, quand vous discutez avec des utilisateurs expérimentés
      d'Emacs, vous trouverez qu'ils parlent souvent de choses comme
      <quote xmlns:xlink="http://www.w3.org/1999/xlink"><literal xmlns:xlink="http://www.w3.org/1999/xlink">M-x replace-s RET foo RET bar RET</literal></quote> aussi il est utile
      de savoir ce que cela veut dire. Et dans tous les cas, Emacs possède beaucoup trop
      de fonctions pour qu'elles soient dans les barres de menus.
      </para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Heureusement, il est assez simple de récupérer les raccourcis
      clavier car ils sont affichés à côté des éléments
      des menus déroulants. Mon conseil est d'utiliser un élément de menu
      pour, disons, ouvrir un fichier jusqu'à ce que vous sachiez comment cela fonctionne
      et que quand vous vous sentez à l'aise avec, essayez <userinput xmlns:xlink="http://www.w3.org/1999/xlink">C-x C-f</userinput>.
      Quand vous serez content avec ça, passez à une autre commande du menu.
      </para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Si vous ne pouvez pas vous rappeler de ce qu'une combinaison de touches particulières
      fait, sélectionnez <guimenuitem xmlns:xlink="http://www.w3.org/1999/xlink">Describe Key</guimenuitem> dans le menu
      <guimenu xmlns:xlink="http://www.w3.org/1999/xlink">Help</guimenu> et tapez-la&#8212;Emacs vous dira ce qu'elle fait.
      Vous pouvez aussi utiliser l'élément de menu <guimenuitem xmlns:xlink="http://www.w3.org/1999/xlink">Command Apropos</guimenuitem>
      pour trouver toutes les commandes qui contiennent un mot particulier, avec leur
      raccourci clavier.
      </para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">De cette manière, l'expression ci-dessus signifie maintenir la touche
      <keysym xmlns:xlink="http://www.w3.org/1999/xlink">Meta</keysym>, taper <keysym xmlns:xlink="http://www.w3.org/1999/xlink">x</keysym>, relâcher
      la touche <keysym xmlns:xlink="http://www.w3.org/1999/xlink">Meta</keysym>, taper <userinput xmlns:xlink="http://www.w3.org/1999/xlink">replace-s</userinput>
      (raccourci pour <literal xmlns:xlink="http://www.w3.org/1999/xlink">replace-string</literal>&#8212;
      une autre caractéristique d'Emacs est que vous pouvez abréger
      les commandes), appuyer sur la touche <keysym xmlns:xlink="http://www.w3.org/1999/xlink">Entrée</keysym>, taper
      <userinput xmlns:xlink="http://www.w3.org/1999/xlink">foo</userinput> (la chaîne que vous voulez remplacer), presser
      la touche <keysym xmlns:xlink="http://www.w3.org/1999/xlink">Entrée</keysym>, taper <userinput xmlns:xlink="http://www.w3.org/1999/xlink">bar</userinput> (la chaîne
      que vous voulez substituer à <literal xmlns:xlink="http://www.w3.org/1999/xlink">foo</literal>) puis appuyer sur
      <keysym xmlns:xlink="http://www.w3.org/1999/xlink">Entrée</keysym> une dernière fois. Emacs va alors faire
      l'opération chercher-remplacer que vous avez demandé.
      </para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Si vous vous demandez ce qu'est cette touche <keysym xmlns:xlink="http://www.w3.org/1999/xlink">Meta</keysym>,
      il s'agit d'une touche spéciale que beaucoup de stations de travail Unix
      possèdent. Malheureusement, les PC n'en ont pas, aussi c'est habituellement
      la touche <keycap xmlns:xlink="http://www.w3.org/1999/xlink">alt</keycap> (ou si vous n'avez pas de chance, la touche <keysym xmlns:xlink="http://www.w3.org/1999/xlink">échap</keysym>).
      </para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Oh, et pour sortir d'Emacs, faites <command xmlns:xlink="http://www.w3.org/1999/xlink">C-x C-c</command>
      (ce qui signifie maintenir la touche <keysym xmlns:xlink="http://www.w3.org/1999/xlink">control</keysym> appuyée,
      appuyer <keysym xmlns:xlink="http://www.w3.org/1999/xlink">c</keysym> et relâcher la touche <keysym xmlns:xlink="http://www.w3.org/1999/xlink">control</keysym>.
      Si vous avez des fichiers non sauvegardés ouverts, Emacs vous demandera si
      vous voulez les sauvegarder. (Ignorez le bout de documentation où il est dit
      que <command xmlns:xlink="http://www.w3.org/1999/xlink">C-z</command> est la manière habituelle de quitter Emacs&#8212;
      qui quitte Emacs en le laissant tourner en tâche de fond et qui n'est
      vraiment utile que si vous avez un système sans terminal virtuel).
      </para>
    </sect2>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Configurer Emacs</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Emacs fait des choses merveilleuses; une partie est intégrée
      directement, une autre doit être configurée.
      </para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Plutôt que d'utiliser un macro langage propriétaire pour la configuration,
      Emacs utilise une version du Lisp spécialement adaptée pour les
      éditeurs, connue sous le nom d'Emacs Lisp. Celui-ci peut être assez utile si
      vous voulez poursuivre et apprendre quelque chose comme le Common Lisp,
      car il est considérablement plus petit que le Common Lisp (bien que
      déjà assez gros!).
      </para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">La meilleure façon d'apprendre l'Emacs Lisp est de télécharger
      le <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ftp://prep.ai.mit.edu:pub/gnu/elisp-manual-19-2.4.tar.gz">cours d'Emacs</link>
      </para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Toutefois, il n'y a pas besoin de connaître le Lisp pour commencer
      la configuration d'Emacs, car j'ai inclus un exemple de fichier <filename xmlns:xlink="http://www.w3.org/1999/xlink">.emacs</filename>
      qui devrait être suffisant pour commencer. Copiez juste celui-ci dans votre
      répertoire utilisateur et redémarrez Emacs si celui-ci s'exécute,
      il lira les commandes du fichier et (si tout va bien!) vous donnera une configuration
      basique utile.
      </para>
    </sect2>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Un fichier exemple <filename xmlns:xlink="http://www.w3.org/1999/xlink">.emacs</filename></title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Malheureusement, il y a beaucoup trop de choses ici pour les expliquer en détail;
      toutefois, il y a un ou deux points qui valent d'être mentionnés.
      </para>

      <itemizedlist xmlns:xlink="http://www.w3.org/1999/xlink">
	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Tout ce qui commence avec un <literal xmlns:xlink="http://www.w3.org/1999/xlink">;</literal> est un commentaire et est
	  ignoré par Emacs.
	  </para>
	</listitem>

	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">A la première ligne, le <literal xmlns:xlink="http://www.w3.org/1999/xlink">-*- Emacs-Lisp -*-</literal>
	  est tel que vous pouvez éditer le fichier <filename xmlns:xlink="http://www.w3.org/1999/xlink">.emacs</filename> lui-même
	  à l'intérieur d'Emacs et d'obtenir tous les fantaisistes dispositifs
	  pour l'édition en Emacs Lisp. Emacs essaye habituellement de deviner cela
	  en se basant sur le nom du fichier, et ne trouvera peut-être pas pour
	  <filename xmlns:xlink="http://www.w3.org/1999/xlink">.emacs</filename>.
	  </para>
	</listitem>

	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">La touche <keysym xmlns:xlink="http://www.w3.org/1999/xlink">tab</keysym> est liée à la fonction d'indentation
	  dans certains modes, aussi quand vous l'enfoncez, cela va indenter la ligne courante
	  de code. Si vous voulez mettre un caractère <token xmlns:xlink="http://www.w3.org/1999/xlink">tab</token> dans quoique ce soit
	  que vous tapiez, maintenez la touche <keysym xmlns:xlink="http://www.w3.org/1999/xlink">control</keysym> enfoncée pendant
	  que vous appuyez sur <keysym xmlns:xlink="http://www.w3.org/1999/xlink">tab</keysym>.
	  </para>
	</listitem>

	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Ce fichier supporte la colorisation de syntaxe pour les langages C, C++, Perl, Lisp
	  et Scheme en devinant le langage par leur nom.
	  </para>
	</listitem>

	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Emacs possède déjà une fonction pré-définie
	  appelée <function xmlns:xlink="http://www.w3.org/1999/xlink">next-error</function>.  Dans la fenêtre de sortie d'une
	  compilation, cela vous permet de vous déplacer d'une erreur de compilation
	  à la suivante en faisant <command xmlns:xlink="http://www.w3.org/1999/xlink">M-n</command>; nous définissons une
	  fonction complémentaire <function xmlns:xlink="http://www.w3.org/1999/xlink">previous-error</function>, qui vous permet
	  d'aller à l'erreur précédente en faisant <command xmlns:xlink="http://www.w3.org/1999/xlink">M-p</command>.
	  Le plus beau dispositif de tous est que <command xmlns:xlink="http://www.w3.org/1999/xlink">C-c C-c</command>
	  va ouvrir le fichier source dans lequel l'erreur a eu lieu et sautera à la ligne
	  appropriée.
	  </para>
	</listitem>

	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Nous autorisons la capacité d'Emacs à agir comme un serveur
	  ainsi si vous faites quelque chose en dehors d'Emacs et voulez éditer un
	  fichier, tapez juste
	  </para>

	  <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">emacsclient nomfichier</userinput>
	  </screen>

	  <para xmlns:xlink="http://www.w3.org/1999/xlink">et alors vous pouvez éditer le fichier dans votre Emacs!
	  <footnote xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Beaucoup d'utilisateurs d'Emacs mettent leur variable d'environnement
	  <envar xmlns:xlink="http://www.w3.org/1999/xlink">EDITOR</envar> à <literal xmlns:xlink="http://www.w3.org/1999/xlink">emacsclient</literal> ainsi cela se passe
	  à chaque fois qu'ils ont besoin d'éditer un fichier.
	  </para>
	  </footnote>
	  </para>
	</listitem>
      </itemizedlist>

      <example xmlns:xlink="http://www.w3.org/1999/xlink">
	<title xmlns:xlink="http://www.w3.org/1999/xlink">Un fichier exemple <filename xmlns:xlink="http://www.w3.org/1999/xlink">.emacs</filename></title>

	<programlisting xmlns:xlink="http://www.w3.org/1999/xlink">;; -*-Emacs-Lisp-*-

;; Ce fichier est concu pour etre reevalue, utiliser la variable first-time
;; pour eviter tout probleme.
(defvar first-time t
  "Valeur signifiant que c'est la premiere fois que .emacs a ete evalue"
  )

;; Meta
(global-set-key "\M- " 'set-mark-command)
(global-set-key "\M-\C-h" 'backward-kill-word)
(global-set-key "\M-\C-r" 'query-replace)
(global-set-key "\M-r" 'replace-string)
(global-set-key "\M-g" 'goto-line)
(global-set-key "\M-h" 'help-command)

;; Function keys
(global-set-key [f1] 'manual-entry)
(global-set-key [f2] 'info)
(global-set-key [f3] 'repeat-complex-command)
(global-set-key [f4] 'advertised-undo)
(global-set-key [f5] 'eval-current-buffer)
(global-set-key [f6] 'buffer-menu)
(global-set-key [f7] 'other-window)
(global-set-key [f8] 'find-file)
(global-set-key [f9] 'save-buffer)
(global-set-key [f10] 'next-error)
(global-set-key [f11] 'compile)
(global-set-key [f12] 'grep)
(global-set-key [C-f1] 'compile)
(global-set-key [C-f2] 'grep)
(global-set-key [C-f3] 'next-error)
(global-set-key [C-f4] 'previous-error)
(global-set-key [C-f5] 'display-faces)
(global-set-key [C-f8] 'dired)
(global-set-key [C-f10] 'kill-compilation)

;; Keypad bindings
(global-set-key [up] "\C-p")
(global-set-key [down] "\C-n")
(global-set-key [left] "\C-b")
(global-set-key [right] "\C-f")
(global-set-key [home] "\C-a")
(global-set-key [end] "\C-e")
(global-set-key [prior] "\M-v")
(global-set-key [next] "\C-v")
(global-set-key [C-up] "\M-\C-b")
(global-set-key [C-down] "\M-\C-f")
(global-set-key [C-left] "\M-b")
(global-set-key [C-right] "\M-f")
(global-set-key [C-home] "\M-&lt;")
(global-set-key [C-end] "\M-&gt;")
(global-set-key [C-prior] "\M-&lt;")
(global-set-key [C-next] "\M-&gt;")

;; Souris
(global-set-key [mouse-3] 'imenu)

;; Divers
(global-set-key [C-tab] "\C-q\t")	; Control tab quotes a tab.
(setq backup-by-copying-when-mismatch t)

;; Traite 'y' ou &lt;CR&gt; comme yes, 'n' comme no.
(fset 'yes-or-no-p 'y-or-n-p)
    (define-key query-replace-map [return] 'act)
    (define-key query-replace-map [?\C-m] 'act)

;; Charge les ajouts
(require 'desktop)
(require 'tar-mode)

;; Diff mode sympa
(autoload 'ediff-buffers "ediff" "Intelligent Emacs interface to diff" t)
(autoload 'ediff-files "ediff" "Intelligent Emacs interface to diff" t)
(autoload 'ediff-files-remote "ediff"
  "Intelligent Emacs interface to diff")

(if first-time
    (setq auto-mode-alist
	  (append '(("\\.cpp$" . c++-mode)
		    ("\\.hpp$" . c++-mode)
                    ("\\.lsp$" . lisp-mode)
		    ("\\.scm$" . scheme-mode)
		    ("\\.pl$" . perl-mode)
		    ) auto-mode-alist)))

;; Mode de verrouillage automatique de la police de caracteres
(defvar font-lock-auto-mode-list
  (list 'c-mode 'c++-mode 'c++-c-mode 'emacs-lisp-mode 'lisp-mode 'perl-mode 'scheme-mode)
  "List of modes to always start in font-lock-mode")

(defvar font-lock-mode-keyword-alist
  '((c++-c-mode . c-font-lock-keywords)
    (perl-mode . perl-font-lock-keywords))
  "Associations between modes and keywords")

(defun font-lock-auto-mode-select ()
  "Automatically select font-lock-mode if the current major mode is
in font-lock-auto-mode-list"
  (if (memq major-mode font-lock-auto-mode-list)
      (progn
	(font-lock-mode t))
    )
  )

(global-set-key [M-f1] 'font-lock-fontify-buffer)

;; New dabbrev stuff
;(require 'new-dabbrev)
(setq dabbrev-always-check-other-buffers t)
(setq dabbrev-abbrev-char-regexp "\\sw\\|\\s_")
(add-hook 'emacs-lisp-mode-hook
	  '(lambda ()
	     (set (make-local-variable 'dabbrev-case-fold-search) nil)
	     (set (make-local-variable 'dabbrev-case-replace) nil)))
(add-hook 'c-mode-hook
	  '(lambda ()
	     (set (make-local-variable 'dabbrev-case-fold-search) nil)
	     (set (make-local-variable 'dabbrev-case-replace) nil)))
(add-hook 'text-mode-hook
	  '(lambda ()
	     (set (make-local-variable 'dabbrev-case-fold-search) t)
	     (set (make-local-variable 'dabbrev-case-replace) t)))

;; mode C++ et C...
(defun my-c++-mode-hook ()
  (setq tab-width 4)
  (define-key c++-mode-map "\C-m" 'reindent-then-newline-and-indent)
  (define-key c++-mode-map "\C-ce" 'c-comment-edit)
  (setq c++-auto-hungry-initial-state 'none)
  (setq c++-delete-function 'backward-delete-char)
  (setq c++-tab-always-indent t)
  (setq c-indent-level 4)
  (setq c-continued-statement-offset 4)
  (setq c++-empty-arglist-indent 4))

(defun my-c-mode-hook ()
  (setq tab-width 4)
  (define-key c-mode-map "\C-m" 'reindent-then-newline-and-indent)
  (define-key c-mode-map "\C-ce" 'c-comment-edit)
  (setq c-auto-hungry-initial-state 'none)
  (setq c-delete-function 'backward-delete-char)
  (setq c-tab-always-indent t)
;; Style d'indentation BSD
  (setq c-indent-level 4)
  (setq c-continued-statement-offset 4)
  (setq c-brace-offset -4)
  (setq c-argdecl-indent 0)
  (setq c-label-offset -4))

;; mode Perl
(defun my-perl-mode-hook ()
  (setq tab-width 4)
  (define-key c++-mode-map "\C-m" 'reindent-then-newline-and-indent)
  (setq perl-indent-level 4)
  (setq perl-continued-statement-offset 4))

;; mode Scheme...
(defun my-scheme-mode-hook ()
  (define-key scheme-mode-map "\C-m" 'reindent-then-newline-and-indent))

;; mode Emacs-Lisp...
(defun my-lisp-mode-hook ()
  (define-key lisp-mode-map "\C-m" 'reindent-then-newline-and-indent)
  (define-key lisp-mode-map "\C-i" 'lisp-indent-line)
  (define-key lisp-mode-map "\C-j" 'eval-print-last-sexp))

;; Ajoute tout le reste...
(add-hook 'c++-mode-hook 'my-c++-mode-hook)
(add-hook 'c-mode-hook 'my-c-mode-hook)
(add-hook 'scheme-mode-hook 'my-scheme-mode-hook)
(add-hook 'emacs-lisp-mode-hook 'my-lisp-mode-hook)
(add-hook 'lisp-mode-hook 'my-lisp-mode-hook)
(add-hook 'perl-mode-hook 'my-perl-mode-hook)

;; Le complement a next-error
(defun previous-error (n)
  "Visit previous compilation error message and corresponding source code."
  (interactive "p")
  (next-error (- n)))

;; Divers...
(transient-mark-mode 1)
(setq mark-even-if-inactive t)
(setq visible-bell nil)
(setq next-line-add-newlines nil)
(setq compile-command "make")
(setq suggest-key-bindings nil)
(put 'eval-expression 'disabled nil)
(put 'narrow-to-region 'disabled nil)
(put 'set-goal-column 'disabled nil)

;; Recherche des archives Elisp
(autoload 'format-lisp-code-directory "lispdir" nil t)
(autoload 'lisp-dir-apropos "lispdir" nil t)
(autoload 'lisp-dir-retrieve "lispdir" nil t)
(autoload 'lisp-dir-verify "lispdir" nil t)

;; Mode de verrouillage de police
(defun my-make-face (face colour &amp;optional bold)
  "Create a face from a colour and optionally make it bold"
  (make-face face)
  (copy-face 'default face)
  (set-face-foreground face colour)
  (if bold (make-face-bold face))
  )

(if (eq window-system 'x)
    (progn
      (my-make-face 'blue "blue")
      (my-make-face 'red "red")
      (my-make-face 'green "dark green")
      (setq font-lock-comment-face 'blue)
      (setq font-lock-string-face 'bold)
      (setq font-lock-type-face 'bold)
      (setq font-lock-keyword-face 'bold)
      (setq font-lock-function-name-face 'red)
      (setq font-lock-doc-string-face 'green)
      (add-hook 'find-file-hooks 'font-lock-auto-mode-select)

      (setq baud-rate 1000000)
      (global-set-key "\C-cmm" 'menu-bar-mode)
      (global-set-key "\C-cms" 'scroll-bar-mode)
      (global-set-key [backspace] 'backward-delete-char)
					;      (global-set-key [delete] 'delete-char)
      (standard-display-european t)
      (load-library "iso-transl")))

;; X11 ou PC utilisant les ecritures directes a l'ecran
(if window-system
    (progn
      ;;      (global-set-key [M-f1] 'hilit-repaint-command)
      ;;      (global-set-key [M-f2] [?\C-u M-f1])
      (setq hilit-mode-enable-list
	    '(not text-mode c-mode c++-mode emacs-lisp-mode lisp-mode
		  scheme-mode)
	    hilit-auto-highlight nil
	    hilit-auto-rehighlight 'visible
	    hilit-inhibit-hooks nil
	    hilit-inhibit-rebinding t)
      (require 'hilit19)
      (require 'paren))
  (setq baud-rate 2400)			; For slow serial connections
  )

;; Terminal de type TTY
(if (and (not window-system)
	 (not (equal system-type 'ms-dos)))
    (progn
      (if first-time
	  (progn
	    (keyboard-translate ?\C-h ?\C-?)
	    (keyboard-translate ?\C-? ?\C-h)))))

;; Sous Unix
(if (not (equal system-type 'ms-dos))
    (progn
      (if first-time
	  (server-start))))

;; Add any face changes here
(add-hook 'term-setup-hook 'my-term-setup-hook)
(defun my-term-setup-hook ()
  (if (eq window-system 'pc)
      (progn
;;	(set-face-background 'default "red")
	)))

;; Restaure le  "desktop" - faire cela le plus tard possible
(if first-time
    (progn
      (desktop-load-default)
      (desktop-read)))

;; Indique que ce fichier a ete lu au moins une fois
(setq first-time nil)

;; Pas besoin de deverminer quoique ce soit maintenant

(setq debug-on-error nil)

;; Tout est fait
(message "All done, %s%s" (user-login-name) ".")
	</programlisting>
      </example>
    </sect2>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Etendre la palette de langages qu'Emacs comprend</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Maintenant, Emacs est très bien si vous voulez seulement programmer
      dans des langages déjà fournis dans le fichier <filename xmlns:xlink="http://www.w3.org/1999/xlink">.emacs</filename>
      (C, C++, Perl, Lisp et Scheme), mais qu'arrive-t-il si un nouveau langage appelé
      <quote xmlns:xlink="http://www.w3.org/1999/xlink">whizbang</quote> sort, plein d'excitantes fonctionnalités ?
      </para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">La première chose à faire est de savoir si whizbang est fourni avec
      des fichiers de configuration pour Emacs. Ceux-ci se terminent habituellement
      par <filename xmlns:xlink="http://www.w3.org/1999/xlink">.el</filename>, raccourci pour <quote xmlns:xlink="http://www.w3.org/1999/xlink">Emacs Lisp</quote>.
      Par exemple, si whizbang est un logiciel porté FreeBSD, nous pouvons
      localiser ces fichiers en faisant
      </para>

      <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">find /usr/ports/lang/whizbang -name "*.el" -print</userinput>
      </screen>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">et les installer en les copiant dans le répertoire Lisp d'Emacs.
      Sur FreeBSD 2.1.0-RELEASE, il s'agit de <filename xmlns:xlink="http://www.w3.org/1999/xlink">/usr/local/share/emacs/site-lisp</filename>
      <footnote xmlns:xlink="http://www.w3.org/1999/xlink"><para xmlns:xlink="http://www.w3.org/1999/xlink">NDT : Sur FreeBSD 4.2-RELEASE aussi.</para></footnote>.
      </para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Aisni par exemple, si la sortie de la commande <command xmlns:xlink="http://www.w3.org/1999/xlink">find</command> était
      </para>

      <screen xmlns:xlink="http://www.w3.org/1999/xlink">/usr/ports/lang/whizbang/work/misc/whizbang.el
      </screen>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">nous ferions
      </para>

      <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">#</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">cp /usr/ports/lang/whizbang/work/misc/whizbang.el /usr/local/share/emacs/site-lisp</userinput>
      </screen>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Ensuite, nous devons décider quel extension les fichiers source whizbang ont. Disons
      qu'il s'agit de fichiers se terminant par <filename xmlns:xlink="http://www.w3.org/1999/xlink">.wiz</filename>. Nous devons
      ajouter une entrée dans notre fichier <filename xmlns:xlink="http://www.w3.org/1999/xlink">.emacs</filename> pour être sûr
      qu'Emacs sera capable d'utiliser les informations dans <filename xmlns:xlink="http://www.w3.org/1999/xlink">whizbang.el</filename>.
      </para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Trouvez l'entrée <symbol xmlns:xlink="http://www.w3.org/1999/xlink">auto-mode-alist</symbol> dans
      <filename xmlns:xlink="http://www.w3.org/1999/xlink">.emacs</filename> et ajoutez une ligne pour whizbang, comme :
      </para>

      <programlisting xmlns:xlink="http://www.w3.org/1999/xlink"><lineannotation xmlns:xlink="http://www.w3.org/1999/xlink">&#8230;</lineannotation>
("\\.lsp$" . lisp-mode)
("\\.wiz$" . whizbang-mode)
("\\.scm$" . scheme-mode)
<lineannotation xmlns:xlink="http://www.w3.org/1999/xlink">&#8230;</lineannotation></programlisting>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Cela signifie qu'Emacs ira automatiquement dans la fonction
      <function xmlns:xlink="http://www.w3.org/1999/xlink">whizbang-mode</function> quand vous éditerez un fichier se terminant
      par <filename xmlns:xlink="http://www.w3.org/1999/xlink">.wiz</filename>.
      </para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Juste en-dessous, vous trouverez l'entrée <symbol xmlns:xlink="http://www.w3.org/1999/xlink">font-lock-auto-mode-list</symbol>.
      Ajoutez <function xmlns:xlink="http://www.w3.org/1999/xlink">whizbang-mode</function> à celle-ci comme ceci :
      </para>

      <programlisting xmlns:xlink="http://www.w3.org/1999/xlink">;; Auto font lock mode
(defvar font-lock-auto-mode-list
  (list 'c-mode 'c++-mode 'c++-c-mode 'emacs-lisp-mode 'whizbang-mode 'lisp-mode 'perl-mode 'scheme-mode)
  "List of modes to always start in font-lock-mode")</programlisting>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Cela signifie qu'Emacs autorisera toujours <function xmlns:xlink="http://www.w3.org/1999/xlink">font-lock-mode</function>
      (ie colorisation de la syntaxe) pendant l'édition d'un fichier <filename xmlns:xlink="http://www.w3.org/1999/xlink">.wiz</filename>.
      </para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Et c'est tout ce qui est nécessaire. S'il y a quoique ce soit que
      vous voulez de fait automatiquement quand vous ouvrez un fichier
      <filename xmlns:xlink="http://www.w3.org/1999/xlink">.wiz</filename>, vous pouvez ajouter un	<function xmlns:xlink="http://www.w3.org/1999/xlink">whizbang-mode hook</function>
      (voir <function xmlns:xlink="http://www.w3.org/1999/xlink">my-scheme-mode-hook</function> pour un exemple simple
      qui ajoute <function xmlns:xlink="http://www.w3.org/1999/xlink">auto-indent</function>, l'auto-indentation).
      </para>
    </sect2>
  </sect1>

  <sect1 xmlns:xlink="http://www.w3.org/1999/xlink">
    <title xmlns:xlink="http://www.w3.org/1999/xlink">Pour aller plus loin</title>

    <itemizedlist xmlns:xlink="http://www.w3.org/1999/xlink">
      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Brian Harvey and Matthew Wright
	  <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">Simply Scheme</emphasis>
	  MIT 1994.<!-- <br> -->
	  ISBN 0-262-08226-8</para>
      </listitem>

      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Randall Schwartz
	  <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">Learning Perl</emphasis>
	  O'Reilly 1993<!-- <br> -->
	  ISBN 1-56592-042-2</para>
      </listitem>

      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Patrick Henry Winston and Berthold Klaus Paul Horn
	  <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">Lisp (3rd Edition)</emphasis>
	  Addison-Wesley 1989<!-- <br> -->
	  ISBN 0-201-08319-1</para>
      </listitem>

      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Brian W. Kernighan and Rob Pike
	  <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">The Unix Programming Environment</emphasis>
	  Prentice-Hall 1984<!-- <br> -->
	  ISBN 0-13-937681-X</para>
      </listitem>

      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Brian W. Kernighan and Dennis M. Ritchie
	  <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">The C Programming Language (2nd Edition)</emphasis>
	  Prentice-Hall 1988<!-- <br> -->
	  ISBN 0-13-110362-8</para>
      </listitem>

      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Bjarne Stroustrup
	<emphasis xmlns:xlink="http://www.w3.org/1999/xlink">The C++ Programming Language</emphasis>
	Addison-Wesley 1991<!-- <br> -->
	ISBN 0-201-53992-6</para>
      </listitem>

      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">W. Richard Stevens
	  <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">Advanced Programming in the Unix Environment</emphasis>
	  Addison-Wesley 1992<!-- <br> -->
	  ISBN 0-201-56317-7</para>
      </listitem>

      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">W. Richard Stevens
	  <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">Unix Network Programming</emphasis>
	  Prentice-Hall 1990<!-- <br> -->
	  ISBN 0-13-949876-1</para>
      </listitem>
    </itemizedlist>
  </sect1>

    </chapter>

    
<!--
     The FreeBSD Documentation Project
     The FreeBSD French Documentation Project

     $Id: chapter.xml,v 1.1 2002-02-14 14:25:02 gioria Exp $
     Original revision: 1.3
     $FreeBSD$

-->
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="secure">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Programmation sécurisée</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Ce chapître a été écrit par Murray Stokely.</para>

      <sect1 xmlns:xlink="http://www.w3.org/1999/xlink"><title xmlns:xlink="http://www.w3.org/1999/xlink">Synopsis</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Ce chapître décrit quelques problèmes de sécurité qui
      ont tourmenté les programmeurs Unix depuis des dizaines d'années
      et quelques uns des nouveaux outils disponibles pour aider
      les programmeurs à éviter l'écriture de code non sécurisé.
      </para>
      </sect1>

      <sect1 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="secure-philosophy"><title xmlns:xlink="http://www.w3.org/1999/xlink">Méthodologie de développement
      sécurisé</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Ecrire des applications sécurisées demande une très minutieuse
      et pessimiste vision de la vie. Les applications devrait fonctionner
      avec le principe du <quote xmlns:xlink="http://www.w3.org/1999/xlink">privilège moindre</quote> de façon à ce
      qu'aucun processus ne fonctionne avec plus que le strict minimum dont
      il a besoin pour accomplir sa tâche. Le code pré-testé devrait être
      réutilisé autant que possible pour éviter les erreurs communes que
      d'autres peuvent déjà avoir réparées.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Un des pièges de l'environnement Unix est qu'il est facile
      d'affecter la stabilité de l'environnement.
      Les applications ne devraient jamais avoir confiance dans la saisie
      de l'utilisateur (sous toutes ses formes),
      les ressources système, la communication inter-processus, ou l'enchaînement
      des évènements. Les processus Unix n'exécutent pas de manière synchrone
      aussi, logiquement, les opérations sont rarement atomiques.</para>
      </sect1>

      <sect1 xmlns:xlink="http://www.w3.org/1999/xlink"><title xmlns:xlink="http://www.w3.org/1999/xlink">Dépassement de capacité</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Les dépassements de capacité ("Buffer Overflows") existent depuis
      les débuts de l'architecture de Von-Neuman <xref xmlns:xlink="http://www.w3.org/1999/xlink" linkend="COD"/>.
      Ils gagnèrent une grande notoriété en 1988 avec le ver pour Internet
      de Morris. Malheureusement, la même attaque basique reste effective
      aujourd'hui. Des 17 rapports de sécurité du CERT de 1999, 10
      furent causés directement des bogues logiciels de dépassement de
      capacité. De loin la plus commune de types d'attaques par dépassement de
       capacité est basée sur la corruption de la pile.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">La plupart des systèmes informatiques modernes utilise une pile
      pour passer les arguments aux procédures et stocker les variables locales
      Une pile est une zone mémoire dernier entré-premier sorti (Last In-First
       Out : LIFO) dans la zone de mémoire haute de l'image d'un processus.
      Quand un programme invoque une fonction une nouvelle structure pile est
      créée. Cette structure pile consiste dans les arguments passés à la
      fonction aussi bien que dans une quantité dynamique d'espace pour
      la variable locale. Le pointeur de pile est un registre qui référence la
      position courante du sommet de la pile. Etant donné que cette valeur
      change constamment au fur et à mesure que de nouvelles valeurs sont
      ajoutées au sommet de la pile, beaucoup d'implémentations fournissent
      aussi un pointeur de structure qui est positionné dans le voisinage du
      début de la structure pile de façon à ce que les variables locales soient
      plus facilement adressables relativement à cette valeur.
      <xref xmlns:xlink="http://www.w3.org/1999/xlink" linkend="COD"/> L'adresse de retour des appels de fonction est aussi
      stocké dans la pile, et cela est la cause des découvertes des
      dépassements de pile puisque faire déborder une variable locale dans une
      fonction peut écraser l'adresse de retour de cette fonction, permettant
      potentiellement à un utilisateur malveillant d'exécuter le code qu'il ou
      elle désire.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Bien que les attaques basées sur les dépassements de pile soient
      de loin les plus communes, il serait aussi possible de faire exploser
      la pile avec une attaque du tas (malloc/free).</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Le langage de programmation C ne réalise pas de vérifications
      automatiques des limites sur les tableaux ou pointeurs comme d'autres
      langages le font. De plus, la librairie standard du C est remplie d'une
      poignée de fonctions très dangereuses.</para>

      <informaltable xmlns:xlink="http://www.w3.org/1999/xlink">
        <tgroup xmlns:xlink="http://www.w3.org/1999/xlink" cols="2">
          <tbody xmlns:xlink="http://www.w3.org/1999/xlink">
          <row xmlns:xlink="http://www.w3.org/1999/xlink"><entry xmlns:xlink="http://www.w3.org/1999/xlink"><function xmlns:xlink="http://www.w3.org/1999/xlink">strcpy</function>(char *dest, const char
          *src)</entry>
          <entry xmlns:xlink="http://www.w3.org/1999/xlink"><simpara xmlns:xlink="http://www.w3.org/1999/xlink">Peut faire déborder le tampon dest</simpara></entry>
          </row>

          <row xmlns:xlink="http://www.w3.org/1999/xlink"><entry xmlns:xlink="http://www.w3.org/1999/xlink"><function xmlns:xlink="http://www.w3.org/1999/xlink">strcat</function>(char *dest, const char
          *src)</entry>
          <entry xmlns:xlink="http://www.w3.org/1999/xlink"><simpara xmlns:xlink="http://www.w3.org/1999/xlink">Peut faire déborder le tampon dest</simpara></entry>
          </row>

          <row xmlns:xlink="http://www.w3.org/1999/xlink"><entry xmlns:xlink="http://www.w3.org/1999/xlink"><function xmlns:xlink="http://www.w3.org/1999/xlink">getwd</function>(char *buf)</entry>
          <entry xmlns:xlink="http://www.w3.org/1999/xlink"><simpara xmlns:xlink="http://www.w3.org/1999/xlink">Peut faire déborder le tampon buf</simpara></entry>
          </row>

          <row xmlns:xlink="http://www.w3.org/1999/xlink"><entry xmlns:xlink="http://www.w3.org/1999/xlink"><function xmlns:xlink="http://www.w3.org/1999/xlink">gets</function>(char *s)</entry>
          <entry xmlns:xlink="http://www.w3.org/1999/xlink"><simpara xmlns:xlink="http://www.w3.org/1999/xlink">Peut faire déborder le tampon s</simpara></entry>
          </row>

          <row xmlns:xlink="http://www.w3.org/1999/xlink"><entry xmlns:xlink="http://www.w3.org/1999/xlink"><function xmlns:xlink="http://www.w3.org/1999/xlink">[vf]scanf</function>(const char *format,
          ...)</entry>
          <entry xmlns:xlink="http://www.w3.org/1999/xlink"><simpara xmlns:xlink="http://www.w3.org/1999/xlink">Peut faire déborder ses arguments.</simpara></entry>
          </row>

          <row xmlns:xlink="http://www.w3.org/1999/xlink"><entry xmlns:xlink="http://www.w3.org/1999/xlink"><function xmlns:xlink="http://www.w3.org/1999/xlink">realpath</function>(char *path, char
          resolved_path[])</entry>
          <entry xmlns:xlink="http://www.w3.org/1999/xlink"><simpara xmlns:xlink="http://www.w3.org/1999/xlink">Peut faire déborder le tampon path</simpara></entry>
          </row>

          <row xmlns:xlink="http://www.w3.org/1999/xlink"><entry xmlns:xlink="http://www.w3.org/1999/xlink"><function xmlns:xlink="http://www.w3.org/1999/xlink">[v]sprintf</function>(char *str, const char
          *format, ...)</entry>
          <entry xmlns:xlink="http://www.w3.org/1999/xlink"><simpara xmlns:xlink="http://www.w3.org/1999/xlink">Peut faire déborder le tampon str.</simpara></entry>
          </row>
          </tbody>
        </tgroup>
      </informaltable>

      <sect2 xmlns:xlink="http://www.w3.org/1999/xlink"><title xmlns:xlink="http://www.w3.org/1999/xlink">Exemple de dépassement de capacité</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">L'exemple de code suivant contient un dépassement de capacité
      conçu pour écraser l'adresse de retour et "sauter" l'instruction suivant
      immédiatement l'appel de la fonction. (Inspiré
      par <xref xmlns:xlink="http://www.w3.org/1999/xlink" linkend="Phrack"/>)</para>

<programlisting xmlns:xlink="http://www.w3.org/1999/xlink">#include <tag xmlns:xlink="http://www.w3.org/1999/xlink">stdio.h</tag>

void manipulate(char *buffer) {
  char newbuffer[80];
  strcpy(newbuffer,buffer);
}

int main() {
  char ch,buffer[4096];
  int i=0;

  while ((buffer[i++] = getchar()) != '\n') {};

  i=1;
  manipulate(buffer);
  i=2;
  printf("La valeur de i est : %d\n",i);
  return 0;
}</programlisting>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Examinons quel serait l'aspect de l'image mémoire de ce processus
      si nous avions entré 160 espaces dans notre petit programme avant
      d'appuyer sur <keycap xmlns:xlink="http://www.w3.org/1999/xlink">Entrée</keycap>.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">[XXX Schéma ici!]</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Evidemment une entrée plus malveillante pourrait être imaginée pour
      exécuter des instructions déjà compilées (comme exec(/bin/sh)).</para>
      </sect2>

      <sect2 xmlns:xlink="http://www.w3.org/1999/xlink"><title xmlns:xlink="http://www.w3.org/1999/xlink">Eviter les dépassements de capacité</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">La solution la plus simple au problème de débordement de pile
      est de toujours utiliser de la mémoire restreinte en taille et
      les fonctions de copie de chaîne de caractères. <function xmlns:xlink="http://www.w3.org/1999/xlink">strncpy</function>
      et <function xmlns:xlink="http://www.w3.org/1999/xlink">strncat</function> font parties de la libraire standard du
      C. Ces fonctions acceptent une valeur de longueur comme paramètre qui
      qui ne devrait pas être plus grande que la taille du tampon de
      destination. Ces fonctions vont ensuite copier `taille' octets de la
      source vers la destination. Toutefois, il y a un certain nombre de
      problèmes avec ces fonctions. Aucune fonction ne garantit une terminaison
      par le caractère NULL si la taille du tampon d'entrée est aussi grand
      que celui de destination. Le paramètre taille est aussi utilisé de façon
      illogique entre <function xmlns:xlink="http://www.w3.org/1999/xlink">strncpy</function> et <function xmlns:xlink="http://www.w3.org/1999/xlink">strncat</function>
      aussi il est facile pour les programmeurs d'être déroutés sur leur
      utilisation convenable. Il y a aussi une perte significative des
      performances comparé à <function xmlns:xlink="http://www.w3.org/1999/xlink">strcpy</function> lorsque l'on copie
      une courte chaîne dans un grand tampon puisque <function xmlns:xlink="http://www.w3.org/1999/xlink">strncpy</function>
      remplit de caractères NULL jusqu'à la taille spécifiée.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Dans OpenBSD, une autre implémentation de la copie de mémoire
      a été créée pour contourner ces problèmes. Les fonctions <function xmlns:xlink="http://www.w3.org/1999/xlink">strlcpy</function>
      et <function xmlns:xlink="http://www.w3.org/1999/xlink">strlcat</function> garantissent qu'elles termineront
      toujours le tampon de destination par un caractère NULL losque l'argument
      de taille est différent de zéro. Pour plus d'informations sur ces
      fonctions, voir <xref xmlns:xlink="http://www.w3.org/1999/xlink" linkend="OpenBSD"/>. Les fonctions <function xmlns:xlink="http://www.w3.org/1999/xlink">strlcpy</function> et
      <function xmlns:xlink="http://www.w3.org/1999/xlink">strlcat</function> d'OpenBSD ont été inclues dans FreeBSD
      depuis la version 3.5.</para>

        <sect3 xmlns:xlink="http://www.w3.org/1999/xlink"><title xmlns:xlink="http://www.w3.org/1999/xlink">V#233;rifications des limites en fonctionnement basées sur le compilateur</title>
        <!--Compiler based run-time bounds -->

        <para xmlns:xlink="http://www.w3.org/1999/xlink">Malheureusement il y a toujours un très important assortiment de
        code en utilisation publique qui copie aveuglément la mémoire sans
        utiliser une des routines de copie limitée dont nous venons juste de
        discuter. Heureusement, il y a une autre solution.  Plusieurs produits
        complémentaires pour compilateur et librairies existent pour faire
        de la vérification de limites pendant le fonctionnement en C/C++.</para>

        <para xmlns:xlink="http://www.w3.org/1999/xlink">StackGuard est un de ces produits qui est implémenté comme un
        petit correctif ("patch") pour le générateur de code gcc. Extrait du
        site Internet de StackGuard, http://immunix.org/stackguard.html :
        <blockquote xmlns:xlink="http://www.w3.org/1999/xlink"><para xmlns:xlink="http://www.w3.org/1999/xlink">"StackGuard détecte et fait échouer les attaques
        par débordement de pile en empêchant l'adresse de retour sur la pile
        d'être altérée. StackGuard place un mot "canari"
        <footnote xmlns:xlink="http://www.w3.org/1999/xlink"><para xmlns:xlink="http://www.w3.org/1999/xlink">NDT : Jaune de préférence pour être bien visible</para></footnote>
        à côté de l'adresse de retour quand la fontion est appelée. Si le mot
        "canari" a été altéré au retour de la fonction, alors une attaque par
        débordement de pile a été tentée et le programme répond en envoyant
        une alerte d'intrusion dans la trace système (syslog) et
        s'arrête alors."</para></blockquote>

        <blockquote xmlns:xlink="http://www.w3.org/1999/xlink"><para xmlns:xlink="http://www.w3.org/1999/xlink">"StackGuard est implémenté comme un petit correctif
        au générateur de code gcc, spécifiquement sur les routines
        function_prolog() et function_epilog().  function_prolog() a été
        amélioré pour laisser des "canaris" sur la pile quand les fonctions
        démarrent, et function_epilog vérifie l'intégrité des "canaris" quand
        la fonction se termine. Tout essai pour corrompre l'adresse de retour
        est alors détectée avant que la fonction ne retourne."</para></blockquote>
        </para>

        <para xmlns:xlink="http://www.w3.org/1999/xlink">Recompiler votre application avec StackGuard est un
        moyen efficace pour stopper la plupart des attques par dépassement de
        capacité, mais cela peut toujours être compromis.</para>

        </sect3>

        <sect3 xmlns:xlink="http://www.w3.org/1999/xlink"><title xmlns:xlink="http://www.w3.org/1999/xlink">Vérifications des limites en fonctionnement basées sur les librairies</title>

        <para xmlns:xlink="http://www.w3.org/1999/xlink">Les mécanismes basés sur le compilateur sont totalement inutiles
        pour logiciel seulement binaire que vous ne pouvez recompiler. Pour
        ces situations, il existe un nombre de librairies qui re-implémente
        les fonctions peu sûres de la librairie C
        (<function xmlns:xlink="http://www.w3.org/1999/xlink">strcpy</function>, <function xmlns:xlink="http://www.w3.org/1999/xlink">fscanf</function>,
        <function xmlns:xlink="http://www.w3.org/1999/xlink">getwd</function>, etc..) et assurent que ces
        fonctions ne peuvent pas écrire plus loin que le pointeur de pile.</para>

        <itemizedlist xmlns:xlink="http://www.w3.org/1999/xlink">
        <listitem xmlns:xlink="http://www.w3.org/1999/xlink"><simpara xmlns:xlink="http://www.w3.org/1999/xlink">libsafe</simpara></listitem>
        <listitem xmlns:xlink="http://www.w3.org/1999/xlink"><simpara xmlns:xlink="http://www.w3.org/1999/xlink">libverify</simpara></listitem>
        <listitem xmlns:xlink="http://www.w3.org/1999/xlink"><simpara xmlns:xlink="http://www.w3.org/1999/xlink">libparnoia</simpara></listitem>
        </itemizedlist>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Malheureusement ces défenses basées sur les librairies possèdent
	un certain nombre de défauts. Ces librairies protègent seulement d'un
        très petit ensemble de problèmes liés à la sécurité et oublient de
        réparer le problème actuel. Ces défenses peuvent échouer si
        l'application a été compilée avec -fomit-frame-pointer. De même, les
        variables d'environnement LD_PRELOAD et LD_LIBRARY_PATH peuvent être
        réécrites/non définies par l'utilisateur.</para>
        </sect3>

        </sect2>
      </sect1>

      <sect1 xmlns:xlink="http://www.w3.org/1999/xlink"><title xmlns:xlink="http://www.w3.org/1999/xlink">Les problèmes liés à SetUID</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Il y a au moins 6 differents ID (identifiants) associés à un
      processus donné. A cause de cela, vous devez être très attentif avec
      l'accès que votre processus possède à un instant donné. En particulier,
      toutes les applications ayant reçu des privilèges par seteuid doivent
      les abandonnés dès qu'ils ne sont plus nécessaires.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">L'identifiant de l'utilisateur réel (real user ID) peut seulement
      être changé par un processus super-utilisateur. Le programme <application xmlns:xlink="http://www.w3.org/1999/xlink">login</application>
      met celui à jour quand un utilisateur se connecte et il est rarement
      changé.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">L'identifiant de l'utilisateur effectif (effective user ID) est mis
      à jour par les fonctions <function xmlns:xlink="http://www.w3.org/1999/xlink">exec()</function> si un programme
      possède son bit seteuid placé. Une application peut appeler
      <function xmlns:xlink="http://www.w3.org/1999/xlink">seteuid()</function> à n'importe quel moment pour règler
      l'identifiant de l'utilisateur effectif sur l'identifiant d'un
      utilisateur réel ou sur le "set-user-ID" sauvé.
      Quand l'identifiant de l'utilisateur effectif est placé par les
      fonctions <function xmlns:xlink="http://www.w3.org/1999/xlink">exec()</function>, la valeur précédente est sauvée
      dans le "set-user-ID" sauvé.</para>

      </sect1>

      <sect1 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="chroot"><title xmlns:xlink="http://www.w3.org/1999/xlink">Limiter l'environnement de votre programme</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">La méthode traditionnelle pour restreindre l'accès d'un processus
      se fait avec l'appel système <function xmlns:xlink="http://www.w3.org/1999/xlink">chroot()</function>. Cet appel
      système change le répertoire racine depuis lequel tous les autres chemins
      sont référencés pour un processus et ses fils. Pour que cet appel
      réussisse, le processus doit avoir exécuté (recherché)
      la permission dans le répertoire référencé. Le nouvel environnement
      environment ne prend pas effet que lorsque vous appelez <function xmlns:xlink="http://www.w3.org/1999/xlink">chdir()</function>
      dans celui-ci.
      Il doit être aussi noté qu'un processus peut facilement s'échapper
      d'un environnement chroot s'il a les privilèges du super-utilisateur.
      Cela devrait être accompli en créant des fichiers spéciaux de
      périphérique pour la mémoire du noyau, en attachant un dévermineur à un
      processus depuis l'extérieur de sa "prison", ou par d'autres manières
      créatrices.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Le comportement de l'appel système <function xmlns:xlink="http://www.w3.org/1999/xlink">chroot()</function>
      peut être un peu contrôlé avec la commande <command xmlns:xlink="http://www.w3.org/1999/xlink">sysctl</command> et
      la variable kern.chroot_allow_open_directories.
      Quand cette valeur est règlée à 0, <function xmlns:xlink="http://www.w3.org/1999/xlink">chroot()</function> échouera
      avec EPERM s'il y a un répertoire d'ouvert. Si la variable est règlée sur
      la valeur par défaut 1, alors <function xmlns:xlink="http://www.w3.org/1999/xlink">chroot()</function> échouera
      avec EPERM s'il y a un répertoire d'ouvert et que le processus est déjà
      sujet à un appel <function xmlns:xlink="http://www.w3.org/1999/xlink">chroot()</function>. Pour toute autre valeur, la
      vérification des répertoires ouverts sera totalement court-circuitée.</para>

      <sect2 xmlns:xlink="http://www.w3.org/1999/xlink"><title xmlns:xlink="http://www.w3.org/1999/xlink">La fonctionnalité "prison" de FreeBSD</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Le concept de Prison ("Jail") étend
      <function xmlns:xlink="http://www.w3.org/1999/xlink">chroot()</function> en limitant les droits du
      super-utilisateur pour créer un véritable `serveur virtuel'. Une fois
      qu'une prison est mise en place, toute communication réseau doit avoir lieu
      au travers de l'adresse IP spécifiée, et le droit du
      "privilège super-utilisateur" dans cette prison est sévèrement gêné.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Tant qu'il se trouve en prison, tout test avec les droits du
      super-utilisateur dans le noyau au travers d'un appel à
      <function xmlns:xlink="http://www.w3.org/1999/xlink">suser()</function> échouera.
      Toutefois, quelques appels à <function xmlns:xlink="http://www.w3.org/1999/xlink">suser()</function> ont été
      changés par la nouvelle interface <function xmlns:xlink="http://www.w3.org/1999/xlink">suser_xxx()</function>.
      Cette fonction est responsable de fournir ou de retirer les accès
      aux droits du super-utilisateur pour les processus emprisonnés.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Un processus super-utilisateur dans un environnement emprisonné
      a le pouvoir de : </para>
      <itemizedlist xmlns:xlink="http://www.w3.org/1999/xlink">
      <listitem xmlns:xlink="http://www.w3.org/1999/xlink"><simpara xmlns:xlink="http://www.w3.org/1999/xlink">Manipuler les identitifications avec
        <function xmlns:xlink="http://www.w3.org/1999/xlink">setuid</function>, <function xmlns:xlink="http://www.w3.org/1999/xlink">seteuid</function>,
        <function xmlns:xlink="http://www.w3.org/1999/xlink">setgid</function>, <function xmlns:xlink="http://www.w3.org/1999/xlink">setegid</function>,
        <function xmlns:xlink="http://www.w3.org/1999/xlink">setgroups</function>, <function xmlns:xlink="http://www.w3.org/1999/xlink">setreuid</function>,
        <function xmlns:xlink="http://www.w3.org/1999/xlink">setregid</function>, <function xmlns:xlink="http://www.w3.org/1999/xlink">setlogin</function></simpara></listitem>
      <listitem xmlns:xlink="http://www.w3.org/1999/xlink"><simpara xmlns:xlink="http://www.w3.org/1999/xlink">Règler les limites en ressources avec <function xmlns:xlink="http://www.w3.org/1999/xlink">setrlimit</function></simpara></listitem>
      <listitem xmlns:xlink="http://www.w3.org/1999/xlink"><simpara xmlns:xlink="http://www.w3.org/1999/xlink">Modifier quelques variables du noyau par sysctl
        (kern.hostname)</simpara></listitem>
      <listitem xmlns:xlink="http://www.w3.org/1999/xlink"><simpara xmlns:xlink="http://www.w3.org/1999/xlink"><function xmlns:xlink="http://www.w3.org/1999/xlink">chroot()</function></simpara></listitem>
      <listitem xmlns:xlink="http://www.w3.org/1999/xlink"><simpara xmlns:xlink="http://www.w3.org/1999/xlink">Règler les paramètres d'un noeud virtuel (vnode):
        <function xmlns:xlink="http://www.w3.org/1999/xlink">chflags</function>,
        <function xmlns:xlink="http://www.w3.org/1999/xlink">fchflags</function></simpara></listitem>
      <listitem xmlns:xlink="http://www.w3.org/1999/xlink"><simpara xmlns:xlink="http://www.w3.org/1999/xlink">Règler les attributs d'un noeud virtuel comme
      les permissions d'un fichier, le propriétaire, le groupe, la taille,
      la date d'accès, et la date de modification.</simpara></listitem>
      <listitem xmlns:xlink="http://www.w3.org/1999/xlink"><simpara xmlns:xlink="http://www.w3.org/1999/xlink">Se lier à des ports privilégiés sur Internet
        (ports &lt; 1024)</simpara></listitem>
      </itemizedlist>

      <para xmlns:xlink="http://www.w3.org/1999/xlink"><function xmlns:xlink="http://www.w3.org/1999/xlink">Jail</function> est un outil très utile pour exécuter
      des applications dans un environnement sécurisé mais il a des
      imperfections. Actuellement, les mécanismes IPC (Inter-Process
      Communications) n'ont pas été convertis pour utiliser <function xmlns:xlink="http://www.w3.org/1999/xlink">suser_xxx</function>
      aussi des applications comme MySQL ne peuvent être exécutée dans une prison.
      L'accès super-utilisateur peut avoir un sens très limité dans une prison,
       mais il n'y aucune façon de spécifier exactement ce que très limité
      veut dire.</para>
      </sect2>

      <sect2 xmlns:xlink="http://www.w3.org/1999/xlink"><title xmlns:xlink="http://www.w3.org/1999/xlink">Les capacitès des processus POSIX.1e</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Posix a réalisé un document de travail qui ajoute l'audit
      d'évènement, les listes de contrôle d'accès, les privilèges fins,
      l'étiquetage d'information, et le contrôle d'accès mandaté.</para>
      <para xmlns:xlink="http://www.w3.org/1999/xlink">Il s'agit d'un travail en cours et c'est l'objectif du projet <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://www.trustedbsd.org">TrustedBSD</link>. Une partie
      du travail initial a été intégré dans FreeBSD-current
      (cap_set_proc(3)).</para>

      </sect2>

      </sect1>

      <sect1 xmlns:xlink="http://www.w3.org/1999/xlink"><title xmlns:xlink="http://www.w3.org/1999/xlink">La confiance</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Une application ne devrait jamais supposer que tout est sain
      dans l'environnement des utilisateurs. Cela inclut (mais n'est
      certainement pas limité à) : la saisie de l'utilisateur, les signaux,
      les variables d'environnement, les ressources, les communication
      inter-processus, les mmaps, le répertoire de travail du système de
      fichiers, les descripteurs de fichier, le nombre de fichiers ouverts,
      etc.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Vous ne devriez jamais supposer que vous pouvez gérer toutes les
      formes de saisie invalide qu'un utilisateur peut entrer. Votre
      application devrait plutôt utiliser un filtrage positif pour
      seulement permettre un sous-ensemble spécifique que vous jugez
      sain. Une mauvaise validation des entrées a été la cause de beaucoup
      découvertes de bogues, spécialement avec les scripts CGI sur le web.
       Pour les noms de fichier, vous devez être tout particulièrement attentif
      aux chemins ("../", "/"), liens symboliques et caractères d'échappement
      de l'interpréteur de commandes.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Perl possède une caractéristique tès sympathique appelée mode
      "Taint" qui peut être utilisée pour empêcher les scripts d'utiliser
      des données externes au programme par un moyen non sûr. Ce mode vérifiera
      les arguments de la ligne de commandes, les variables d'environnement,
      les informations localisées (propres aux pays), les résultats de certains
      appels système (<function xmlns:xlink="http://www.w3.org/1999/xlink">readdir()</function>,
      <function xmlns:xlink="http://www.w3.org/1999/xlink">readlink()</function>,
      <function xmlns:xlink="http://www.w3.org/1999/xlink">getpwxxx()</function>) et toute entrée de fichier.</para>

      </sect1>

      <sect1 xmlns:xlink="http://www.w3.org/1999/xlink"><title xmlns:xlink="http://www.w3.org/1999/xlink">Les conditions de course</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Une condition de course est un comportement anormal causé par
      une dépendance inattendue sur le séquencement relatif des évènements. En
      d'autres mots, un programmeur a supposé à tort qu'un évènement
      particulier se passerait avant un autre.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Quelques causes habituelles de conditions de course sont les
      signaux, les vérifications d'accès et les fichiers ouverts.
      Les signaux sont des évènements asynchrones par nature aussi un soin
      particulier doit être pris pour les utiliser.
      Vérifier les accès avec <function xmlns:xlink="http://www.w3.org/1999/xlink">access(2)</function> puis
      <function xmlns:xlink="http://www.w3.org/1999/xlink">open(2)</function> n'est clairement pas atomique.
      Les utilisateurs peuvent déplacer des fichiers entre les deux appels.
      Les applications privilégiées devraient plutôt faire un appel à
      <function xmlns:xlink="http://www.w3.org/1999/xlink">seteuid()</function> puis appeler <function xmlns:xlink="http://www.w3.org/1999/xlink">open()</function>
      directement. Dans le même esprit, une application devrait toujours règler
      un umask correct avant un appel à <function xmlns:xlink="http://www.w3.org/1999/xlink">open()</function> pour
      prévenir le besoin d'appels non valides à <function xmlns:xlink="http://www.w3.org/1999/xlink">chmod()</function>.</para>

      </sect1>

     </chapter>


  </part>

  <part xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="kernel">
    <title xmlns:xlink="http://www.w3.org/1999/xlink">Le noyau</title>

    <chapter xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="kernelhistory">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Histoire du noyau Unix</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Un peu d'histoire sur le noyau Unix/BSD, les appels système, comment
        fonctionnent les processus, bloquer, planifier, les threads (noyau),
        le basculement de contexte, les signaux, les interruptions, les modules, etc.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink"/>
    </chapter>

    
<!--
     The FreeBSD Documentation Project
     The FreeBSD French Documentation Project
     The FreeBSD SMP Next Generation Project
     $Id: chapter.xml,v 1.2 2002-12-11 16:31:20 gioria Exp $
     Original revision: 1.3
     $FreeBSD$
-->
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="locking">
  <title xmlns:xlink="http://www.w3.org/1999/xlink">Notes sur le verrouillage</title>

  <para xmlns:xlink="http://www.w3.org/1999/xlink"><emphasis xmlns:xlink="http://www.w3.org/1999/xlink">Ce chapître est maintenu par The FreeBSD SMP Next
    Generation Project. Envoyez leur directement les commentaires et
    les suggestions à <link xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://lists.FreeBSD.org/mailman/listinfo/freebsd-smp">liste de diffusion concernant le traitement symétrique multiprocesseurs (SMP) sous FreeBSD</link>.</emphasis></para>

  <para xmlns:xlink="http://www.w3.org/1999/xlink">Ce document souligne le verrouillage utilisé dans le noyau FreeBSD
    pour permettre d'utiliser du vrai multi-processeur à l'intérieur du noyau.
    Le verrouillage peut être réalisé par différents moyens.
    Les structures de données puvent être protégées par des mutex ou <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">lockmgr</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">9</manvolnum></citerefentry> verrous.
    Quelques variables sont protégées simplement par l'utilisation continuelle d'opérations
    atomiques pour y accéder.
   </para>

  <sect1 xmlns:xlink="http://www.w3.org/1999/xlink">
    <title xmlns:xlink="http://www.w3.org/1999/xlink">Les mutex</title>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Un mutex est simplement un verrou utilisé pour garantir exclusion mutuelle.
      Spécifiquement, un mutex ne peut appartenir qu'à une entité à la fois.
      Si une autre entité désire obtenir un mutex déjà pris
      , elle doit attendre jusqu'à ce que le mutex soit relaché. Dans le noyau
      FreeBSD, les mutex appartiennent aux processus.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Les mutex peuvent être acquis récursivement, mais ils sont conçus
      pour n'être pris que pendant une courte période. Spécifiquement, le détenteur
      ne doit pas se suspendre pendant qu'il retient un mutex. Si vous avez besoin de
      maintenir un verrouillage pendant une suspension, utilisez un <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">lockmgr</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">9</manvolnum></citerefentry> verrou ("lock").</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Chaque mutex a plusieurs intérêts :</para>

    <variablelist xmlns:xlink="http://www.w3.org/1999/xlink">
	<varlistentry xmlns:xlink="http://www.w3.org/1999/xlink">
	<term xmlns:xlink="http://www.w3.org/1999/xlink">Nom de la variable</term>
	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Nom de la variable <type xmlns:xlink="http://www.w3.org/1999/xlink">struct mtx</type> dans
	    le code source du noyau.</para>
	</listitem>
      </varlistentry>

      <varlistentry xmlns:xlink="http://www.w3.org/1999/xlink">
	<term xmlns:xlink="http://www.w3.org/1999/xlink">Nom logique</term>
	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Le nom du mutex lui est assigné par
	    <function xmlns:xlink="http://www.w3.org/1999/xlink">mtx_init</function>. Ce nom est affiché dans
	    les messages de trace KTR, témoigne des erreurs et avertissements et est
	    utilisé pour distinguer les mutex dans les traces.</para>
	</listitem>
      </varlistentry>

      <varlistentry xmlns:xlink="http://www.w3.org/1999/xlink">
	<term xmlns:xlink="http://www.w3.org/1999/xlink">Type</term>
	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Le type du mutex en termes de constantes nommées
	    <constant xmlns:xlink="http://www.w3.org/1999/xlink">MTX_*</constant>.  La signification de chaque
	    constante nommée est documentée dans <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">mutex</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">9</manvolnum></citerefentry>.</para>

	  <variablelist xmlns:xlink="http://www.w3.org/1999/xlink">
	    <varlistentry xmlns:xlink="http://www.w3.org/1999/xlink">
	      <term xmlns:xlink="http://www.w3.org/1999/xlink"><constant xmlns:xlink="http://www.w3.org/1999/xlink">MTX_DEF</constant></term>
	      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
		<para xmlns:xlink="http://www.w3.org/1999/xlink">Un mutex endormi</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry xmlns:xlink="http://www.w3.org/1999/xlink">
	      <term xmlns:xlink="http://www.w3.org/1999/xlink"><constant xmlns:xlink="http://www.w3.org/1999/xlink">MTX_SPIN</constant></term>
	      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
		<para xmlns:xlink="http://www.w3.org/1999/xlink">Un mutex tournant</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry xmlns:xlink="http://www.w3.org/1999/xlink">
	      <term xmlns:xlink="http://www.w3.org/1999/xlink"><constant xmlns:xlink="http://www.w3.org/1999/xlink">MTX_COLD</constant></term>
	      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
		<para xmlns:xlink="http://www.w3.org/1999/xlink">Ce mutex est initialisé très tard.  Toutefois, il
		  doit être déclaré via
		  <function xmlns:xlink="http://www.w3.org/1999/xlink">MUTEX_DECLARE</function>, et la constante nommée
		  <constant xmlns:xlink="http://www.w3.org/1999/xlink">MTX_COLD</constant> doit être passée à
		  <function xmlns:xlink="http://www.w3.org/1999/xlink">mtx_init</function>.</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry xmlns:xlink="http://www.w3.org/1999/xlink">
	      <term xmlns:xlink="http://www.w3.org/1999/xlink"><constant xmlns:xlink="http://www.w3.org/1999/xlink">MTX_TOPHALF</constant></term>
	      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
		<para xmlns:xlink="http://www.w3.org/1999/xlink">Ce mutex tournant ne désactive pas les
		  interruptions.</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry xmlns:xlink="http://www.w3.org/1999/xlink">
	      <term xmlns:xlink="http://www.w3.org/1999/xlink"><constant xmlns:xlink="http://www.w3.org/1999/xlink">MTX_NORECURSE</constant></term>
	      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
		<para xmlns:xlink="http://www.w3.org/1999/xlink">Ce mutex n'a pas la permission d'être recursif.</para>
	      </listitem>
	    </varlistentry>
	  </variablelist>
	</listitem>
      </varlistentry>

      <varlistentry xmlns:xlink="http://www.w3.org/1999/xlink">
	<term xmlns:xlink="http://www.w3.org/1999/xlink">Protégés</term>
	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Une liste de structures de données ou des membres de structure de données
	    que cette entrée protège.  Pour les membres de structures de données,
	    le nom sera de la forme <varname xmlns:xlink="http://www.w3.org/1999/xlink" remap="structname">structure name</varname>.<varname xmlns:xlink="http://www.w3.org/1999/xlink" remap="structfield">member name</varname>.</para>
	</listitem>
      </varlistentry>

      <varlistentry xmlns:xlink="http://www.w3.org/1999/xlink">
	<term xmlns:xlink="http://www.w3.org/1999/xlink">Fonctions dépendantes</term>
	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Les fonctions qui peuvent seulement être appelées si ce mutex est
	    pris.</para>
	</listitem>
      </varlistentry>
    </variablelist>

    <table xmlns:xlink="http://www.w3.org/1999/xlink" frame="all" colsep="1" rowsep="1" pgwide="1">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Liste du mutex</title>

      <tgroup xmlns:xlink="http://www.w3.org/1999/xlink" cols="5">
	<thead xmlns:xlink="http://www.w3.org/1999/xlink">
	  <row xmlns:xlink="http://www.w3.org/1999/xlink">
	    <entry xmlns:xlink="http://www.w3.org/1999/xlink">Nom de la variable</entry>
	    <entry xmlns:xlink="http://www.w3.org/1999/xlink">Nom logique</entry>
	    <entry xmlns:xlink="http://www.w3.org/1999/xlink">Type</entry>
	    <entry xmlns:xlink="http://www.w3.org/1999/xlink">Protégés</entry>
	    <entry xmlns:xlink="http://www.w3.org/1999/xlink">Fonctions dépendantes</entry>
	  </row>
	</thead>

	<!-- The scheduler lock -->
	<tbody xmlns:xlink="http://www.w3.org/1999/xlink">
	  <row xmlns:xlink="http://www.w3.org/1999/xlink">
	    <entry xmlns:xlink="http://www.w3.org/1999/xlink">sched_lock</entry>
	    <entry xmlns:xlink="http://www.w3.org/1999/xlink"><quote xmlns:xlink="http://www.w3.org/1999/xlink">sched lock</quote></entry>
	    <entry xmlns:xlink="http://www.w3.org/1999/xlink">
	      <constant xmlns:xlink="http://www.w3.org/1999/xlink">MTX_SPIN</constant> |
	      <constant xmlns:xlink="http://www.w3.org/1999/xlink">MTX_COLD</constant>
	    </entry>
	    <entry xmlns:xlink="http://www.w3.org/1999/xlink">
	      <varname xmlns:xlink="http://www.w3.org/1999/xlink">_gmonparam</varname>,
	      <varname xmlns:xlink="http://www.w3.org/1999/xlink">cnt.v_swtch</varname>,
	      <varname xmlns:xlink="http://www.w3.org/1999/xlink">cp_time</varname>,
	      <varname xmlns:xlink="http://www.w3.org/1999/xlink">curpriority</varname>,
	      <varname xmlns:xlink="http://www.w3.org/1999/xlink" remap="structname">mtx</varname>.<varname xmlns:xlink="http://www.w3.org/1999/xlink" remap="structfield">mtx_blocked</varname>,
	      <varname xmlns:xlink="http://www.w3.org/1999/xlink" remap="structname">mtx</varname>.<varname xmlns:xlink="http://www.w3.org/1999/xlink" remap="structfield">mtx_contested</varname>,
	      <varname xmlns:xlink="http://www.w3.org/1999/xlink" remap="structname">proc</varname>.<varname xmlns:xlink="http://www.w3.org/1999/xlink" remap="structfield">p_contested</varname>,
	      <varname xmlns:xlink="http://www.w3.org/1999/xlink" remap="structname">proc</varname>.<varname xmlns:xlink="http://www.w3.org/1999/xlink" remap="structfield">p_blocked</varname>,
	      <varname xmlns:xlink="http://www.w3.org/1999/xlink" remap="structname">proc</varname>.<varname xmlns:xlink="http://www.w3.org/1999/xlink" remap="structfield">p_flag</varname>
		(<constant xmlns:xlink="http://www.w3.org/1999/xlink">P_PROFIL</constant> XXX,
		 <constant xmlns:xlink="http://www.w3.org/1999/xlink">P_INMEM</constant>,
	         <constant xmlns:xlink="http://www.w3.org/1999/xlink">P_SINTR</constant>,
	         <constant xmlns:xlink="http://www.w3.org/1999/xlink">P_TIMEOUT</constant>,
	         <constant xmlns:xlink="http://www.w3.org/1999/xlink">P_SWAPINREQ</constant> XXX,
	         <constant xmlns:xlink="http://www.w3.org/1999/xlink">P_INMEN</constant> XXX),
	      <varname xmlns:xlink="http://www.w3.org/1999/xlink" remap="structname">proc</varname>.<varname xmlns:xlink="http://www.w3.org/1999/xlink" remap="structfield">p_nice</varname>,
	      <varname xmlns:xlink="http://www.w3.org/1999/xlink" remap="structname">proc</varname>.<varname xmlns:xlink="http://www.w3.org/1999/xlink" remap="structfield">p_procq</varname>,
	      <varname xmlns:xlink="http://www.w3.org/1999/xlink" remap="structname">proc</varname>.<varname xmlns:xlink="http://www.w3.org/1999/xlink" remap="structfield">p_blocked</varname>,
	      <varname xmlns:xlink="http://www.w3.org/1999/xlink" remap="structname">proc</varname>.<varname xmlns:xlink="http://www.w3.org/1999/xlink" remap="structfield">p_estcpu</varname>,
	      <varname xmlns:xlink="http://www.w3.org/1999/xlink" remap="structname">proc</varname>.<varname xmlns:xlink="http://www.w3.org/1999/xlink" remap="structfield">p_nativepri</varname>,
	      <varname xmlns:xlink="http://www.w3.org/1999/xlink" remap="structname">proc</varname>.<varname xmlns:xlink="http://www.w3.org/1999/xlink" remap="structfield">p_priority</varname>,
	      <varname xmlns:xlink="http://www.w3.org/1999/xlink" remap="structname">proc</varname>.<varname xmlns:xlink="http://www.w3.org/1999/xlink" remap="structfield">p_usrpri</varname>,
	      <varname xmlns:xlink="http://www.w3.org/1999/xlink" remap="structname">proc</varname>.<varname xmlns:xlink="http://www.w3.org/1999/xlink" remap="structfield">p_rtprio</varname>,
	      <varname xmlns:xlink="http://www.w3.org/1999/xlink" remap="structname">proc</varname>.<varname xmlns:xlink="http://www.w3.org/1999/xlink" remap="structfield">p_rqindex</varname>,
	      <varname xmlns:xlink="http://www.w3.org/1999/xlink" remap="structname">proc</varname>.<varname xmlns:xlink="http://www.w3.org/1999/xlink" remap="structfield">p_stats-&gt;p_prof</varname>,
	      <varname xmlns:xlink="http://www.w3.org/1999/xlink" remap="structname">proc</varname>.<varname xmlns:xlink="http://www.w3.org/1999/xlink" remap="structfield">p_stats-&gt;p_ru</varname>,
	      <varname xmlns:xlink="http://www.w3.org/1999/xlink" remap="structname">proc</varname>.<varname xmlns:xlink="http://www.w3.org/1999/xlink" remap="structfield">p_stat</varname>,
	      <varname xmlns:xlink="http://www.w3.org/1999/xlink" remap="structname">proc</varname>.<varname xmlns:xlink="http://www.w3.org/1999/xlink" remap="structfield">p_cpticks</varname>,
	      <varname xmlns:xlink="http://www.w3.org/1999/xlink" remap="structname">proc</varname>.<varname xmlns:xlink="http://www.w3.org/1999/xlink" remap="structfield">p_iticks</varname>,
	      <varname xmlns:xlink="http://www.w3.org/1999/xlink" remap="structname">proc</varname>.<varname xmlns:xlink="http://www.w3.org/1999/xlink" remap="structfield">p_uticks</varname>,
	      <varname xmlns:xlink="http://www.w3.org/1999/xlink" remap="structname">proc</varname>.<varname xmlns:xlink="http://www.w3.org/1999/xlink" remap="structfield">p_sticks</varname>,
	      <varname xmlns:xlink="http://www.w3.org/1999/xlink" remap="structname">proc</varname>.<varname xmlns:xlink="http://www.w3.org/1999/xlink" remap="structfield">p_swtime</varname>,
	      <varname xmlns:xlink="http://www.w3.org/1999/xlink" remap="structname">proc</varname>.<varname xmlns:xlink="http://www.w3.org/1999/xlink" remap="structfield">p_slptime</varname>,
	      <varname xmlns:xlink="http://www.w3.org/1999/xlink" remap="structname">proc</varname>.<varname xmlns:xlink="http://www.w3.org/1999/xlink" remap="structfield">p_runtime</varname>,
	      <varname xmlns:xlink="http://www.w3.org/1999/xlink" remap="structname">proc</varname>.<varname xmlns:xlink="http://www.w3.org/1999/xlink" remap="structfield">p_pctcpu</varname>,
	      <varname xmlns:xlink="http://www.w3.org/1999/xlink" remap="structname">proc</varname>.<varname xmlns:xlink="http://www.w3.org/1999/xlink" remap="structfield">p_oncpu</varname>,
	      <varname xmlns:xlink="http://www.w3.org/1999/xlink" remap="structname">proc</varname>.<varname xmlns:xlink="http://www.w3.org/1999/xlink" remap="structfield">p_asleep</varname>,
	      <varname xmlns:xlink="http://www.w3.org/1999/xlink" remap="structname">proc</varname>.<varname xmlns:xlink="http://www.w3.org/1999/xlink" remap="structfield">p_wchan</varname>,
	      <varname xmlns:xlink="http://www.w3.org/1999/xlink" remap="structname">proc</varname>.<varname xmlns:xlink="http://www.w3.org/1999/xlink" remap="structfield">p_wmesg</varname>,
	      <varname xmlns:xlink="http://www.w3.org/1999/xlink" remap="structname">proc</varname>.<varname xmlns:xlink="http://www.w3.org/1999/xlink" remap="structfield">p_slpq</varname>,
	      <varname xmlns:xlink="http://www.w3.org/1999/xlink" remap="structname">proc</varname>.<varname xmlns:xlink="http://www.w3.org/1999/xlink" remap="structfield">p_vmspace</varname>
		(XXX - in <function xmlns:xlink="http://www.w3.org/1999/xlink">statclock</function>),
	      <varname xmlns:xlink="http://www.w3.org/1999/xlink">pscnt</varname>,
	      <varname xmlns:xlink="http://www.w3.org/1999/xlink">slpque</varname>,
	      <varname xmlns:xlink="http://www.w3.org/1999/xlink">itqueuebits</varname>,
	      <varname xmlns:xlink="http://www.w3.org/1999/xlink">itqueues</varname>,
	      <varname xmlns:xlink="http://www.w3.org/1999/xlink">rtqueuebits</varname>,
	      <varname xmlns:xlink="http://www.w3.org/1999/xlink">rtqueues</varname>,
	      <varname xmlns:xlink="http://www.w3.org/1999/xlink">queuebits</varname>,
	      <varname xmlns:xlink="http://www.w3.org/1999/xlink">queues</varname>,
	      <varname xmlns:xlink="http://www.w3.org/1999/xlink">idqueuebits</varname>,
	      <varname xmlns:xlink="http://www.w3.org/1999/xlink">idqueues</varname>,
	      <varname xmlns:xlink="http://www.w3.org/1999/xlink">switchtime</varname>,
	    </entry>
	    <entry xmlns:xlink="http://www.w3.org/1999/xlink">
	      <function xmlns:xlink="http://www.w3.org/1999/xlink">setrunqueue</function>,
	      <function xmlns:xlink="http://www.w3.org/1999/xlink">remrunqueue</function>,
	      <function xmlns:xlink="http://www.w3.org/1999/xlink">mi_switch</function>,
	      <function xmlns:xlink="http://www.w3.org/1999/xlink">chooseproc</function>,
	      <function xmlns:xlink="http://www.w3.org/1999/xlink">schedclock</function>,
	      <function xmlns:xlink="http://www.w3.org/1999/xlink">resetpriority</function>,
	      <function xmlns:xlink="http://www.w3.org/1999/xlink">updatepri</function>,
	      <function xmlns:xlink="http://www.w3.org/1999/xlink">maybe_resched</function>,
	      <function xmlns:xlink="http://www.w3.org/1999/xlink">cpu_switch</function>,
	      <function xmlns:xlink="http://www.w3.org/1999/xlink">cpu_throw</function>
	    </entry>
	  </row>

	  <!-- The vm86 pcb lock -->
	  <row xmlns:xlink="http://www.w3.org/1999/xlink">
	    <entry xmlns:xlink="http://www.w3.org/1999/xlink">vm86pcb_lock</entry>
	    <entry xmlns:xlink="http://www.w3.org/1999/xlink"><quote xmlns:xlink="http://www.w3.org/1999/xlink">vm86pcb lock</quote></entry>
	    <entry xmlns:xlink="http://www.w3.org/1999/xlink">
	      <constant xmlns:xlink="http://www.w3.org/1999/xlink">MTX_DEF</constant> |
	      <constant xmlns:xlink="http://www.w3.org/1999/xlink">MTX_COLD</constant>
	    </entry>
	    <entry xmlns:xlink="http://www.w3.org/1999/xlink">
	      <varname xmlns:xlink="http://www.w3.org/1999/xlink">vm86pcb</varname>
	    </entry>
	    <entry xmlns:xlink="http://www.w3.org/1999/xlink">
	      <function xmlns:xlink="http://www.w3.org/1999/xlink">vm86_bioscall</function>
	    </entry>
	  </row>

	  <!-- Giant -->
	  <row xmlns:xlink="http://www.w3.org/1999/xlink">
	    <entry xmlns:xlink="http://www.w3.org/1999/xlink">Giant</entry>
	    <entry xmlns:xlink="http://www.w3.org/1999/xlink"><quote xmlns:xlink="http://www.w3.org/1999/xlink">Giant</quote></entry>
	    <entry xmlns:xlink="http://www.w3.org/1999/xlink">
	      <constant xmlns:xlink="http://www.w3.org/1999/xlink">MTX_DEF</constant> |
	      <constant xmlns:xlink="http://www.w3.org/1999/xlink">MTX_COLD</constant>
	    </entry>
	    <entry xmlns:xlink="http://www.w3.org/1999/xlink">nearly everything</entry>
	    <entry xmlns:xlink="http://www.w3.org/1999/xlink">lots</entry>
	  </row>

	  <!-- The callout lock -->
	  <row xmlns:xlink="http://www.w3.org/1999/xlink">
	    <entry xmlns:xlink="http://www.w3.org/1999/xlink">callout_lock</entry>
	    <entry xmlns:xlink="http://www.w3.org/1999/xlink"><quote xmlns:xlink="http://www.w3.org/1999/xlink">callout lock</quote></entry>
	    <entry xmlns:xlink="http://www.w3.org/1999/xlink">
	      <constant xmlns:xlink="http://www.w3.org/1999/xlink">MTX_SPIN</constant>
	    </entry>
	    <entry xmlns:xlink="http://www.w3.org/1999/xlink">
	      <varname xmlns:xlink="http://www.w3.org/1999/xlink">callfree</varname>,
	      <varname xmlns:xlink="http://www.w3.org/1999/xlink">callwheel</varname>,
	      <varname xmlns:xlink="http://www.w3.org/1999/xlink">nextsoftcheck</varname>,
	      <varname xmlns:xlink="http://www.w3.org/1999/xlink" remap="structname">proc</varname>.<varname xmlns:xlink="http://www.w3.org/1999/xlink" remap="structfield">p_itcallout</varname>,
	      <varname xmlns:xlink="http://www.w3.org/1999/xlink" remap="structname">proc</varname>.<varname xmlns:xlink="http://www.w3.org/1999/xlink" remap="structfield">p_slpcallout</varname>,
	      <varname xmlns:xlink="http://www.w3.org/1999/xlink">softticks</varname>,
	      <varname xmlns:xlink="http://www.w3.org/1999/xlink">ticks</varname>
	    </entry>
	    <entry xmlns:xlink="http://www.w3.org/1999/xlink">
	    </entry>
	  </row>
	</tbody>
      </tgroup>
    </table>
  </sect1>

  <sect1 xmlns:xlink="http://www.w3.org/1999/xlink">
    <title xmlns:xlink="http://www.w3.org/1999/xlink">Les verrous du gestionnaire de verrous (Lock Manager)</title>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Les verrous qui sont fournis par l'interface <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">lockmgr</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">9</manvolnum></citerefentry>
      sont les verrous du gestionnaire de verrous. Ces verrous sont des verrous
       lecture-écriture et peuvent être retenus par un process suspendu.
    </para>

    <table xmlns:xlink="http://www.w3.org/1999/xlink">
      <title xmlns:xlink="http://www.w3.org/1999/xlink"><citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">lockmgr</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">9</manvolnum></citerefentry> List de verrou</title>

      <tgroup xmlns:xlink="http://www.w3.org/1999/xlink" cols="4">
	<thead xmlns:xlink="http://www.w3.org/1999/xlink">
	  <row xmlns:xlink="http://www.w3.org/1999/xlink">
	    <entry xmlns:xlink="http://www.w3.org/1999/xlink">Nom de la variable</entry>
	    <entry xmlns:xlink="http://www.w3.org/1999/xlink">Protégés</entry>
	    <entry xmlns:xlink="http://www.w3.org/1999/xlink"/><entry xmlns:xlink="http://www.w3.org/1999/xlink"/>
	  </row>
	</thead>
	<tbody xmlns:xlink="http://www.w3.org/1999/xlink">
	  <row xmlns:xlink="http://www.w3.org/1999/xlink">
	    <entry xmlns:xlink="http://www.w3.org/1999/xlink"><varname xmlns:xlink="http://www.w3.org/1999/xlink">allproc_lock</varname></entry>
	    <entry xmlns:xlink="http://www.w3.org/1999/xlink">
	      <varname xmlns:xlink="http://www.w3.org/1999/xlink">allproc</varname>
	      <varname xmlns:xlink="http://www.w3.org/1999/xlink">zombproc</varname>
	      <varname xmlns:xlink="http://www.w3.org/1999/xlink">pidhashtbl</varname>
	      <varname xmlns:xlink="http://www.w3.org/1999/xlink" remap="structname">proc</varname>.<varname xmlns:xlink="http://www.w3.org/1999/xlink" remap="structfield">p_list</varname>
	      <varname xmlns:xlink="http://www.w3.org/1999/xlink" remap="structname">proc</varname>.<varname xmlns:xlink="http://www.w3.org/1999/xlink" remap="structfield">p_hash</varname>
	      <varname xmlns:xlink="http://www.w3.org/1999/xlink">nextpid</varname>
	    </entry>
	    <entry xmlns:xlink="http://www.w3.org/1999/xlink"><varname xmlns:xlink="http://www.w3.org/1999/xlink">proctree_lock</varname></entry>
	    <entry xmlns:xlink="http://www.w3.org/1999/xlink">
	      <varname xmlns:xlink="http://www.w3.org/1999/xlink" remap="structname">proc</varname>.<varname xmlns:xlink="http://www.w3.org/1999/xlink" remap="structfield">p_children</varname>
	      <varname xmlns:xlink="http://www.w3.org/1999/xlink" remap="structname">proc</varname>.<varname xmlns:xlink="http://www.w3.org/1999/xlink" remap="structfield">p_sibling</varname>
	    </entry>
	  </row>
	</tbody>
      </tgroup>
    </table>
  </sect1>

  <sect1 xmlns:xlink="http://www.w3.org/1999/xlink">
    <title xmlns:xlink="http://www.w3.org/1999/xlink">Variables protégées atomiquement</title>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Une variable protégée atomiquement est une variable spéciale qui
      n'est pas protégé par un verrou explicite. Toutefois, tous les accès de
      données aux variables utilisent des opérations atomiques spéciales
      comme décrit dans <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">atomic</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">9</manvolnum></citerefentry>. Très peu de variables sont traitées
      de cette façon, bien que les autres primitives de synchronisation comme
      les mutex soient implémentées avec des variables protégées atomiquement.</para>

    <itemizedlist xmlns:xlink="http://www.w3.org/1999/xlink">
      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink"><varname xmlns:xlink="http://www.w3.org/1999/xlink">astpending</varname></para>
      </listitem>

      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink"><varname xmlns:xlink="http://www.w3.org/1999/xlink" remap="structname">mtx</varname>.<varname xmlns:xlink="http://www.w3.org/1999/xlink" remap="structfield">mtx_lock</varname></para>
      </listitem>
    </itemizedlist>
  </sect1>
</chapter>


  </part>

  <part xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="memory">
    <title xmlns:xlink="http://www.w3.org/1999/xlink">Mémoire et mémoire virtuelle</title>

    <chapter xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="virtualmemory">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">La mémoire virtuelle</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">MV, gestion par page, gestion sur disque, allouer de la mémoire, tester les
        fuites de mémoires, mmap, vnodes, etc.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink"/>
    </chapter>
  </part>

  <part xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="iosystem">
    <title xmlns:xlink="http://www.w3.org/1999/xlink">Système E/S (Entrées/Sorties)</title>

    <chapter xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="ufs">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">UFS</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">UFS, FFS, Ext2FS, JFS, inodes, mémoire tampon, mettre à jour les données d'un disque,
        verrouillage, metadata, soft-updates, LFS, portalfs, procfs,
        vnodes, partage de mémoire, objets en mémoire, TLBs, mettre en cache</para>

    </chapter>
  </part>

  <part xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="ipc">
    <title xmlns:xlink="http://www.w3.org/1999/xlink">Communication InterProcessus (IPC)</title>

    <chapter xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="signals">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Les signaux</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Signaux, tubes, sémaphores, files de message, segments de mémoire partagée,
        ports, prises, portes</para>

    </chapter>
  </part>

  <part xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="networking">
    <title xmlns:xlink="http://www.w3.org/1999/xlink">Le réseau</title>

    <chapter xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="sockets">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Les prises</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Prises, bpf, IP, TCP, UDP, ICMP, OSI, ponts,
        pare-feux, translation d'adresses (NAT), séparation de réseaux, etc</para>

    </chapter>
  </part>

  <part xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="networkfs">
    <title xmlns:xlink="http://www.w3.org/1999/xlink">Systèmes de fichiers en réseau</title>

    <chapter xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="afs">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">AFS</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">AFS, NFS, SANs etc]</para>

    </chapter>
  </part>

  <part xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="terminal">
    <title xmlns:xlink="http://www.w3.org/1999/xlink">Gestion du terminal</title>

    <chapter xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="syscons">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Syscons</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Syscons, tty, PCVT, console en liaison série, économiseurs d'écran,
        etc</para>

    </chapter>
  </part>

  <part xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="sound">
    <title xmlns:xlink="http://www.w3.org/1999/xlink">Le son</title>

    <chapter xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="oss">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">OSS</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">OSS, formes d'ondes, etc</para>

    </chapter>
  </part>

  <part xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="devicedrivers">
    <title xmlns:xlink="http://www.w3.org/1999/xlink">Pilotes de périphérique</title>

    
<!--
     The FreeBSD Documentation Project
     The FreeBSD French Documentation Project

     $FreeBSD$
     $Id: chapter.xml,v 1.2 2003-01-12 12:16:07 blackend Exp $
     Original revision: 1.5

-->
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="driverbasics">
  <title xmlns:xlink="http://www.w3.org/1999/xlink">Ecrire des pilotes de périphériques pour FreeBSD</title>

  <para xmlns:xlink="http://www.w3.org/1999/xlink">Ce chapitre a été écrit par Murray Stokely avec des sélections
    depuis une variété de codes source inclus dans la page de manuel d'<citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">intro</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">4</manvolnum></citerefentry> de Joerg
    Wunsch.</para>

  <sect1 xmlns:xlink="http://www.w3.org/1999/xlink">
    <title xmlns:xlink="http://www.w3.org/1999/xlink">Introduction</title>
    <para xmlns:xlink="http://www.w3.org/1999/xlink">Ce chapitre fournit une brève introduction sur l'écriture
      de pilotes de périphériques pour FreeBSD.
      Un périphérique, dans ce contexte, est un terme utilisé
      le plus souvent pour tout ce qui est lié au matériel et qui dépend
      du système, comme les disques, imprimantes, ou un écran avec son clavier.
      Un pilote de périphérique est un composant logiciel du système
      d'exploitation qui contrôle un périphérique spécifique.  Il y a aussi
      ce que l'on appelle les pseudo-périphériques (&#8220;pseudo-devices&#8221;) où un pilote
      de périphérique émule le comportement d'un périphérique dans un logiciel sans
      matériel particulier sous-jacent. Les pilotes de périphériques peuvent être compilés
      dans le système statiquement ou chargé à la demande via l'éditeur de liens dynamique du
      noyau &#8220;kld&#8221;.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">La plupart des périphériques dans un système d'exploitation de type Unix
      sont accessibles au travers de fichiers spéciaux de périphérique (device-nodes), appelés parfois
      fichiers spéciaux. Ces fichiers sont habituellement stockés dans le répertoire
      <filename xmlns:xlink="http://www.w3.org/1999/xlink">/dev</filename> de la hiérarchie du système de fichiers. Jusqu'à ce que
      devfs soit totalement intégré dans FreeBSD, chaque fichier spécial de périphérique doit être
      créé statiquement et indépendamment de l'existence du pilote de périphérique associé.
      La plupart des fichiers spéciaux de périphérique du système sont créés en exécutant <command xmlns:xlink="http://www.w3.org/1999/xlink">MAKEDEV</command>.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Les pilotes de périphérique peuvent être en gros séparés en deux catégories;
      les pilotes de périphérique en mode caractère et les pilotes de périphériques réseau.</para>

  </sect1>

  <sect1 xmlns:xlink="http://www.w3.org/1999/xlink">
    <title xmlns:xlink="http://www.w3.org/1999/xlink">L'éditeur de liens dynamiques du noyau - KLD</title>
    <!-- Traduction &agrave; vérifier
    Dynamic Kernel Linker Facility - KLD</title> -->

    <para xmlns:xlink="http://www.w3.org/1999/xlink">L'interface kld permet aux administrateurs système d'ajouter
      et d'enlever dynamiquement une fonctionnalité à un système en marche.
      Cela permet aux développeurs de pilote de périphérique de charger leurs nouveaux changements
      dans le noyau en fonctionnement sans redémarrer constamment pour tester ces derniers.
    </para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">L'interface kld est utilisé au travers des commandes d'administrateur suivantes :

    <itemizedlist xmlns:xlink="http://www.w3.org/1999/xlink">
      <listitem xmlns:xlink="http://www.w3.org/1999/xlink"><simpara xmlns:xlink="http://www.w3.org/1999/xlink"><command xmlns:xlink="http://www.w3.org/1999/xlink">kldload</command> - charge un nouveau module dans le noyau</simpara></listitem>
      <listitem xmlns:xlink="http://www.w3.org/1999/xlink"><simpara xmlns:xlink="http://www.w3.org/1999/xlink"><command xmlns:xlink="http://www.w3.org/1999/xlink">kldunload</command> - décharge un module du noyau</simpara></listitem>
      <listitem xmlns:xlink="http://www.w3.org/1999/xlink"><simpara xmlns:xlink="http://www.w3.org/1999/xlink"><command xmlns:xlink="http://www.w3.org/1999/xlink">kldstat</command> - liste les modules chargés dans le noyau</simpara></listitem>
    </itemizedlist>
    </para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Structure squelettique d'un module de noyau</para>

<programlisting xmlns:xlink="http://www.w3.org/1999/xlink">/*
 * Squelette KLD
 * Inspiré de l'article d'Andrew Reiter paru sur Daemonnews
 */

#include &lt;sys/types.h&gt;
#include &lt;sys/module.h&gt;
#include &lt;sys/systm.h&gt;  /* uprintf */
#include &lt;sys/errno.h&gt;
#include &lt;sys/param.h&gt;  /* defines utilise dans kernel.h */
#include &lt;sys/kernel.h&gt; /* types utilise dans le module d'initialisation */

/*
 * charge le gestionnaire quit traite du chargement et déchargement d'un KLD.
 */

static int
skel_loader(struct module *m, int what, void *arg)
{
  int err = 0;

  switch (what) {
  case MOD_LOAD:                /* kldload */
    <!-- Désolé, les accents n'existent pas dans la console alors je ne les ai pas mis l&agrave; non plus
    -->
    uprintf("Skeleton KLD charge.\n");
    break;
  case MOD_UNLOAD:
    uprintf("Skeleton KLD decharge.\n");
    break;
  default:
    err = EINVAL;
    break;
  }
  return(err);
}

/* Declare ce module au reste du noyau */

DECLARE_MODULE(skeleton, skel_loader, SI_SUB_KLD, SI_ORDER_ANY);</programlisting>


    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Makefile</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">FreeBSD fournit un fichier d'inclusion "makefile" que vous pouvez utiliser pour
	compiler rapidement votre ajout au noyau.</para>

      <programlisting xmlns:xlink="http://www.w3.org/1999/xlink">SRCS=skeleton.c
KMOD=skeleton

.include &lt;bsd.kmod.mk&gt;</programlisting>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Lancer simplement la commande <command xmlns:xlink="http://www.w3.org/1999/xlink">make</command> avec ce fichier Makefile
        créera un fichier <filename xmlns:xlink="http://www.w3.org/1999/xlink">skeleton.ko</filename> qui peut
        être chargé dans votre système en tapant :
<screen xmlns:xlink="http://www.w3.org/1999/xlink"> <prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">#</prompt>
	  kldload -v ./skeleton.ko
</screen>
      </para>
    </sect2>
  </sect1>

  <sect1 xmlns:xlink="http://www.w3.org/1999/xlink">
    <title xmlns:xlink="http://www.w3.org/1999/xlink">Accéder au pilote d'un périphérique</title>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Unix fournit un ensemble d'appels système communs utilisable par
      les applications de l'utilisateur. Les couches supérieures du noyau renvoient
      ces appels au pilote de périphérique correspondant quand un utilisateur
      accède au fichier spécial de périphérique.  Le script <command xmlns:xlink="http://www.w3.org/1999/xlink">/dev/MAKEDEV</command>
      crée la plupart des fichiers spéciaux de périphérique pour votre système mais si vous
      faites votre propre développement de pilote, il peut être nécessaire de créer
      vos propres fichiers spéciaux de périphérique avec la commande <command xmlns:xlink="http://www.w3.org/1999/xlink">mknod</command>
    </para>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Créer des fichiers spéciaux de périphériques statiques</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">La commande <command xmlns:xlink="http://www.w3.org/1999/xlink">mknod</command> nécessite quatre
	arguments pou créer un fichier spécial de périphérique.  Vous devez spécifier le nom
	de ce fichier spécial de périphérique, le type de périphérique, le numéro majeur
	et le numéro mineur du périphérique.</para>
    </sect2>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Les fichiers spéciaux de périphérique dynamiques</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Le périphérique système de fichiers, ou devfs, fournit l'accès à
	l'espace des noms des périphériques du noyau dans l'espace du système de fichiers global.
	Ceci élimine les problèmes de pilote sans fichier spécial statique, ou de fichier spécial sans pilote installé.
	Devfs est toujours un travail en cours mais il fonctionne déjà assez bien.</para>
    </sect2>

  </sect1>

  <sect1 xmlns:xlink="http://www.w3.org/1999/xlink">
    <title xmlns:xlink="http://www.w3.org/1999/xlink">Les périphériques caractères</title>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Un pilote de périphérique caractère est un pilote qui transfère les données
      directement au processus utilisateur ou vers celui-ci. Il s'agit du plus commun
      des types de pilote de périphérique et il y en a plein d'exemples simples dans
      l'arbre des sources.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Cet exemple simple de pseudo-périphérique enregistre toutes les valeurs
      que vous lui avez écrites et peut vous les renvoyer quand vous les lui
      demandez.</para>

<programlisting xmlns:xlink="http://www.w3.org/1999/xlink">/*
 * un simple pseudo-périphérique `echo' KLD
 *
 * Murray Stokely
 */

#define MIN(a,b) (((a) &lt; (b)) ? (a) : (b))

#include &lt;sys/types.h&gt;
#include &lt;sys/module.h&gt;
#include &lt;sys/systm.h&gt; /* uprintf */
#include &lt;sys/errno.h&gt;
#include &lt;sys/param.h&gt;  /* defines utilises dans kernel.h */
#include &lt;sys/kernel.h&gt; /* types utilises dans me module d'initialisation */
#include &lt;sys/conf.h&gt;   /* cdevsw struct */
#include &lt;sys/uio.h&gt;    /* uio struct */
#include &lt;sys/malloc.h&gt;

#define BUFFERSIZE 256

/* Prototypes des fonctions */
d_open_t      echo_open;
d_close_t     echo_close;
d_read_t      echo_read;
d_write_t     echo_write;

/* Points d'entrée du périphérique Caractère */
static struct cdevsw echo_cdevsw = {
  echo_open,
  echo_close,
  echo_read,
  echo_write,
  noioctl,
  nopoll,
  nommap,
  nostrategy,
  "echo",
  33,                   /* reserve pour lkms - /usr/src/sys/conf/majors */
  nodump,
  nopsize,
  D_TTY,
  -1
};

typedef struct s_echo {
  char msg[BUFFERSIZE];
  int len;
} t_echo;

/* variables */
static dev_t sdev;
static int len;
static int count;
static t_echo *echomsg;

MALLOC_DECLARE(M_ECHOBUF);
MALLOC_DEFINE(M_ECHOBUF, "echobuffer", "cache pour le module echo");

/*
 * Cette fonction est appelee par les appels systeme kld[un]load(2) pour
 * determiner quelles actions doivent etre faites quand le
 * module est charge ou decharge
 */

static int
echo_loader(struct module *m, int what, void *arg)
{
  int err = 0;

  switch (what) {
  case MOD_LOAD:                /* kldload */
    sdev = make_dev(<literal xmlns:xlink="http://www.w3.org/1999/xlink">&amp;</literal>echo_cdevsw,
		    0,
		    UID_ROOT,
		    GID_WHEEL,
		    0600,
		    "echo");
    /* aloocation de mémoire noyau pour l'utilisation de ce module */
    /*    malloc(256,M_ECHOBUF,M_WAITOK); */
    MALLOC(echomsg, t_echo *, sizeof(t_echo), M_ECHOBUF, M_WAITOK);
    printf("Peripherique Echo charge.\n");
    break;
  case MOD_UNLOAD:
    destroy_dev(sdev);
    FREE(echomsg,M_ECHOBUF);
    printf("Peripherique Echo decharge.\n");
    break;
  default:
    err = EINVAL;
    break;
  }
  return(err);
}

int
echo_open(dev_t dev, int oflags, int devtype, struct proc *p)
{
  int err = 0;

  uprintf("Peripherique \"echo\" ouvert avec succes.\n");
  return(err);
}

int
echo_close(dev_t dev, int fflag, int devtype, struct proc *p)
{
  uprintf("Fermeture du peripherique \"echo.\"\n");
  return(0);
}

/*
 * La fonction read prend juste comme parametre
 * le cache qui a ete sauve par l'appel à echo_write()
 * et le retourne a l'utilisateur pour acces.
 * uio(9)
 */

int
echo_read(dev_t dev, struct uio *uio, int ioflag)
{
  int err = 0;
  int amt;

  /* De quelle taille est cette operation read ?  Aussi grande que l'utilisateur le veut,
     ou aussi grande que les donnees restantes */
  amt = MIN(uio-&gt;uio_resid, (echomsg-&gt;len - uio-&gt;uio_offset &gt; 0) ? echomsg-&gt;len - uio-&gt;uio_offset : 0);
  if ((err = uiomove(echomsg-&gt;msg + uio-&gt;uio_offset,amt,uio)) != 0) {
    uprintf("uiomove echoue!\n");
  }

  return err;
}

/*
 * echo_write prend un caractere en entree et le sauve
 * dans le cache pour une utilisation ulterieure.
 */

int
echo_write(dev_t dev, struct uio *uio, int ioflag)
{
  int err = 0;

  /* Copie la chaine d'entree de la memoire de l'utilisateur a la memoire du noyau*/
  err = copyin(uio-&gt;uio_iov-&gt;iov_base, echomsg-&gt;msg, MIN(uio-&gt;uio_iov-&gt;iov_len,BUFFERSIZE));

  /* Maintenant nous avons besoin de terminer la chaine par NULL */
  *(echomsg-&gt;msg + MIN(uio-&gt;uio_iov-&gt;iov_len,BUFFERSIZE)) = 0;
  /* Enregistre la taille */
  echomsg-&gt;len = MIN(uio-&gt;uio_iov-&gt;iov_len,BUFFERSIZE);

  if (err != 0) {
    uprintf("Ecriture echouee: mauvaise adresse!\n");
  }

  count++;
  return(err);
}

DEV_MODULE(echo,echo_loader,NULL);</programlisting>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Pour installer ce pilote, vous devrez d'abord créer un fichier spécial dans
      votre système de fichiers avec une commande comme : </para>

<screen xmlns:xlink="http://www.w3.org/1999/xlink">
	<prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">#</prompt> mknod /dev/echo c 33 0
</screen>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Avec ce pilote chargé, vous devriez maintenant être capable de taper
      quelque chose comme :</para>

<screen xmlns:xlink="http://www.w3.org/1999/xlink">
        <prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">#</prompt> echo -n "Test Donnees" &gt; /dev/echo
        <prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">#</prompt> cat /dev/echo
	Test Donnees
</screen>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Périphériques réels dans le chapitre suivant.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Informations additionnelles
    <itemizedlist xmlns:xlink="http://www.w3.org/1999/xlink">
      <listitem xmlns:xlink="http://www.w3.org/1999/xlink"><simpara xmlns:xlink="http://www.w3.org/1999/xlink"><link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://www.daemonnews.org/200010/blueprints.html">Dynamic
	Kernel Linker (KLD) Facility Programming Tutorial</link> -
	<link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://www.daemonnews.org">Daemonnews</link> October 2000</simpara></listitem>
      <listitem xmlns:xlink="http://www.w3.org/1999/xlink"><simpara xmlns:xlink="http://www.w3.org/1999/xlink"><link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://www.daemonnews.org/200007/newbus-intro.html">How
	to Write Kernel Drivers with NEWBUS</link> - <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://www.daemonnews.org">Daemonnews</link> July
	2000</simpara></listitem>
    </itemizedlist>
    </para>
  </sect1>

  <sect1 xmlns:xlink="http://www.w3.org/1999/xlink">
    <title xmlns:xlink="http://www.w3.org/1999/xlink">Pilotes Réseau</title>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Les pilotes pour périphérique réseau n'utilisent pas les fichiers spéciaux pour
      pouvoir être accessibles.  Leur sélection est basée sur d'autres décisions
      faites à l'intérieur du noyau et plutôt que d'appeler open(), l'utilisation
      d'un périphérique réseau se fait généralement en se servant de l'appel système
      <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">socket</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">2</manvolnum></citerefentry>.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">man ifnet(), périphérique "en boucle", drivers de Bill Paul,
      etc..</para>

  </sect1>

</chapter>

    
<!--
     The FreeBSD Documentation Project
     The FreeBSD French Documentation Project

     $Id: chapter.xml,v 1.1 2002-02-14 14:25:02 gioria Exp $
     Original revision: 1.3
     $FreeBSD$
-->
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="pci">
  <title xmlns:xlink="http://www.w3.org/1999/xlink">Les périphériques PCI</title>

  <para xmlns:xlink="http://www.w3.org/1999/xlink">Ce chapître traitera des mécanismes de FreeBSD pour
    écrire un pilote de périphérique pour un périphérique sur
    bus PCI.</para>

  <sect1 xmlns:xlink="http://www.w3.org/1999/xlink">
    <title xmlns:xlink="http://www.w3.org/1999/xlink">Rechercher et rattacher</title>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Informations ici sur comment le code du bus PCI fait un cycle
      sur les périphériques non rattachés et voir si le nouvellement chargé
      pilote de périphérique chargeable dans le noyau (kld)
       sera rattaché à l'un d'eux.</para>

<programlisting xmlns:xlink="http://www.w3.org/1999/xlink">/*
 * Simple KLD pour jouer avec les fonctions PCI.
 *
 * Murray Stokely
 */

#define MIN(a,b) (((a) &lt; (b)) ? (a) : (b))

#include &lt;sys/types.h&gt;
#include &lt;sys/module.h&gt;
#include &lt;sys/systm.h&gt;  /* uprintf */
#include &lt;sys/errno.h&gt;
#include &lt;sys/param.h&gt;  /* defines used in kernel.h */
#include &lt;sys/kernel.h&gt; /* types used in module initialization */
#include &lt;sys/conf.h&gt;   /* cdevsw struct */
#include &lt;sys/uio.h&gt;    /* uio struct */
#include &lt;sys/malloc.h&gt;
#include &lt;sys/bus.h&gt;	/* structs, prototypes for pci bus stuff */

#include &lt;pci/pcivar.h&gt; /* For get_pci macros! */

/* Prototypes des fonctions */
d_open_t      mypci_open;
d_close_t     mypci_close;
d_read_t      mypci_read;
d_write_t     mypci_write;

/* Points d'entrée du pilote de périphérique caractère */

static struct cdevsw mypci_cdevsw = {
  mypci_open,
  mypci_close,
  mypci_read,
  mypci_write,
  noioctl,
  nopoll,
  nommap,
  nostrategy,
  "mypci",
  36,                   /* reserved for lkms - /usr/src/sys/conf/majors */
  nodump,
  nopsize,
  D_TTY,
  -1
};

/* variables */
static dev_t sdev;

/* Nous sommes plus interresses dans la recherche/attachement
que dans l'ouverture/fermeture/lecture/ecriture a ce point */

int
mypci_open(dev_t dev, int oflags, int devtype, struct proc *p)
{
  int err = 0;

  uprintf("Peripherique \"monpci\" ouvert avec succes.\n");
  return(err);
}

int
mypci_close(dev_t dev, int fflag, int devtype, struct proc *p)
{
  int err=0;

  uprintf("Peripherique \"monpci.\ "ferme\n");
  return(err);
}

int
mypci_read(dev_t dev, struct uio *uio, int ioflag)
{
  int err = 0;

  uprintf("lecture dans monpci!\n");
  return err;
}

int
mypci_write(dev_t dev, struct uio *uio, int ioflag)
{
  int err = 0;

  uprintf("Ecriture dans monpci!\n");
  return(err);
}

/* PCI Support Functions */

/*
 * Retourne la chaine d'identification si ce peripherique est le notre
 */
static int
mypci_probe(device_t dev)
{
  uprintf("MonPCI Probe\n"
	  "ID Fabricant: 0x%x\n"
	  "ID Peripherique : 0x%x\n",pci_get_vendor(dev),pci_get_device(dev));

  if (pci_get_vendor(dev) == 0x11c1) {
    uprintf("Nous avons le WinModem, recherche reussi!\n");
    return 0;
  }

  return ENXIO;
}

/* La fonction Attach n'est appelée que si
la recherche est reussie*/

static int
mypci_attach(device_t dev)
{
  uprintf("Rattachement de MonPCI pour: ID Peripherique: 0x%x\n",pci_get_vendor(dev));
  sdev = make_dev(<literal xmlns:xlink="http://www.w3.org/1999/xlink">&amp;</literal>mypci_cdevsw,
		  0,
		  UID_ROOT,
		  GID_WHEEL,
		  0600,
		  "monpci");
  uprintf("Peripherique Monpci charge.\n");
  return ENXIO;
}

/* Detach le peripherique. */

static int
mypci_detach(device_t dev)
{
  uprintf("Monpci detache!\n");
  return 0;
}

/* Appele lors de l'arret du systeme apres sync. */

static int
mypci_shutdown(device_t dev)
{
  uprintf("Monpci arrete!\n");
  return 0;
}

/*
 * routine de suspension du peripherique
 */
static int
mypci_suspend(device_t dev)
{
  uprintf("Monpci suspendu!\n");
  return 0;
}

/*
 * routine de reprise du peripherique
 */

static int
mypci_resume(device_t dev)
{
  uprintf("Monpci resume!\n");
  return 0;
}

static device_method_t mypci_methods[] = {
	/* Interface Peripherique*/
	DEVMETHOD(device_probe,		mypci_probe),
	DEVMETHOD(device_attach,	mypci_attach),
	DEVMETHOD(device_detach,	mypci_detach),
	DEVMETHOD(device_shutdown,	mypci_shutdown),
	DEVMETHOD(device_suspend,	mypci_suspend),
	DEVMETHOD(device_resume,	mypci_resume),

	{ 0, 0 }
};

static driver_t mypci_driver = {
	"monpci",
	mypci_methods,
	0,
	/*	sizeof(struct mypci_softc), */
};

static devclass_t mypci_devclass;

DRIVER_MODULE(mypci, pci, mypci_driver, mypci_devclass, 0, 0);</programlisting>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Informations complémentaires
    <itemizedlist xmlns:xlink="http://www.w3.org/1999/xlink">
      <listitem xmlns:xlink="http://www.w3.org/1999/xlink"><simpara xmlns:xlink="http://www.w3.org/1999/xlink"><link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://www.pcisig.org">PCI
	Special Interest Group</link></simpara></listitem>

      <listitem xmlns:xlink="http://www.w3.org/1999/xlink"><simpara xmlns:xlink="http://www.w3.org/1999/xlink">PCI System Architecture, Fourth Edition by
	Tom Shanley, et al.</simpara></listitem>

    </itemizedlist>
    </para>
  </sect1>

  <sect1 xmlns:xlink="http://www.w3.org/1999/xlink">
    <title xmlns:xlink="http://www.w3.org/1999/xlink">Les ressources du bus</title>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">FreeBSD fournit un mécanisme orienté objet pour demander
      des ressources du bus parent.  Pratiquement tous les périphériques
      seront un fils membre d'un type de bus (PCI, ISA, USB, SCSI, etc)
      et ces périphériques nécessite des ressources issues de leur bus parent
      (comme des segments de mémoire, des interruptions or des canaux DMA).</para>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Registres d'adresse de base</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Pour faire de particulièrement utile avec un périphérique PCI,
      vous aurez besoin d'obtenir les <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">registres d'adresse de base</emphasis>
       (Base Address Registers ou BARs) de l'espace de configuration PCI.
      Les détails spécifiques au PCI sur l'obtention du registre d'adresse de base
      sont masqués dans la fonction <function xmlns:xlink="http://www.w3.org/1999/xlink">bus_alloc_resource()</function>.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Par exemple, un pilote typique aura sa fonction <function xmlns:xlink="http://www.w3.org/1999/xlink">attach()</function>
      similaire à ceci : </para>

<programlisting xmlns:xlink="http://www.w3.org/1999/xlink">    sc-&gt;bar0id = 0x10;
    sc-&gt;bar0res = bus_alloc_resource(dev, SYS_RES_MEMORY, &amp;(sc-&gt;bar0id),
				  0, ~0, 1, RF_ACTIVE);
    if (sc-&gt;bar0res == NULL) {
        uprintf("Allocation memoire du registre PCI de base 0 echouee!\n");
        error = ENXIO;
        goto fail1;
    }

    sc-&gt;bar1id = 0x14;
    sc-&gt;bar1res = bus_alloc_resource(dev, SYS_RES_MEMORY, &amp;(sc-&gt;bar1id),
				  0, ~0, 1, RF_ACTIVE);
    if (sc-&gt;bar1res == NULL) {
        uprintf("Allocation memoire du registre PCI de base 1 echouee!\n");
        error =  ENXIO;
        goto fail2;
    }
    sc-&gt;bar0_bt = rman_get_bustag(sc-&gt;bar0res);
    sc-&gt;bar0_bh = rman_get_bushandle(sc-&gt;bar0res);
    sc-&gt;bar1_bt = rman_get_bustag(sc-&gt;bar1res);
    sc-&gt;bar1_bh = rman_get_bushandle(sc-&gt;bar1res);

</programlisting>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Des références pour chaque registre d'adresse de base sont gardées
      dans la structure <varname xmlns:xlink="http://www.w3.org/1999/xlink" remap="structname">softc</varname> afin qu'elle puisse
      être utilisée pour écrire dans le périphérique plus tard.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Ces références peuvent alors être utilisées pour lire ou écrire
      	dans les registres du périphérique avec les fonctions <function xmlns:xlink="http://www.w3.org/1999/xlink">bus_space_*</function>.
      	Par exemple, un pilote peut contenir une fonction raccourci
        pour lire dans un registre spécifique à une carte comme cela :
        </para>

<programlisting xmlns:xlink="http://www.w3.org/1999/xlink">uint16_t
board_read(struct ni_softc *sc, uint16_t address) {
    return bus_space_read_2(sc-&gt;bar1_bt, sc-&gt;bar1_bh, address);
}
</programlisting>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">De façon similaire, une autre peut écrire dans les registres avec : </para>

<programlisting xmlns:xlink="http://www.w3.org/1999/xlink">void
board_write(struct ni_softc *sc, uint16_t address, uint16_t value) {
    bus_space_write_2(sc-&gt;bar1_bt, sc-&gt;bar1_bh, address, value);
}
</programlisting>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Ces fonctions existent en versions 8bit, 16bit et 32bit
        et vous devriez utiliser
        <function xmlns:xlink="http://www.w3.org/1999/xlink">bus_space_{read|write}_{1|2|4}</function>
        en conséquence.</para>

    </sect2>
    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Les interruptions</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Les interruptions sont alloués à partir du code orienté objet du
         bus de façon similaire aux ressources mémoire. D'abord une ressource
         IRQ doit être allouée à partir du bus parent, et alors le
        gestionnaire d'interruption doit être règlé pour traiter cet IRQ.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">A nouveau, un exemple de fonction
        <function xmlns:xlink="http://www.w3.org/1999/xlink">attach()</function> en dit plusqu'un long discours.</para>

<programlisting xmlns:xlink="http://www.w3.org/1999/xlink">/* Recupere la ressource IRQ */

    sc-&gt;irqid = 0x0;
    sc-&gt;irqres = bus_alloc_resource(dev, SYS_RES_IRQ, &amp;(sc-&gt;irqid),
				  0, ~0, 1, RF_SHAREABLE | RF_ACTIVE);
    if (sc-&gt;irqres == NULL) {
	uprintf("Allocation IRQ echouee!\n");
	error = ENXIO;
	goto fail3;
    }

    /* Maitnenant nous choisissons notre gestionnaire d'interruption */

    error = bus_setup_intr(dev, sc-&gt;irqres, INTR_TYPE_MISC,
			   my_handler, sc, &amp;(sc-&gt;handler));
    if (error) {
	printf("Ne peut regler l'IRQ\n");
	goto fail4;
    }

    sc-&gt;irq_bt = rman_get_bustag(sc-&gt;irqres);
    sc-&gt;irq_bh = rman_get_bushandle(sc-&gt;irqres);
</programlisting>

    </sect2>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">DMA</title>
      <para xmlns:xlink="http://www.w3.org/1999/xlink">Sur les PC, les périphériques qui veulent utiliser la gestion de
      bus DMA doivent travailler avec des adresses physiques. C'est un problème
      puisque FreeBSD utilise une mémoire virtuelle et travaille presque
      exclusivement avec des adresses virtuelles. Heureusement, il y a une
      fonction <function xmlns:xlink="http://www.w3.org/1999/xlink">vtophys()</function> pour nous aider.</para>

<programlisting xmlns:xlink="http://www.w3.org/1999/xlink">#include &lt;vm/vm.h&gt;
#include &lt;vm/pmap.h&gt;

#define vtophys(virtual_address) (...)
</programlisting>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">La solution est toutefois un peu différente sur Alpha, et
        ce que nous voulons réellement est une fonction appelée
        <function xmlns:xlink="http://www.w3.org/1999/xlink">vtobus()</function>.</para>

<programlisting xmlns:xlink="http://www.w3.org/1999/xlink">#if defined(__alpha__)
#define vtobus(va)      alpha_XXX_dmamap((vm_offset_t)va)
#else
#define vtobus(va)      vtophys(va)
#endif
</programlisting>

    </sect2>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Désallouer les resources</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Il est très important de désallouer toutes les ressources
        qui furent allouées pendant <function xmlns:xlink="http://www.w3.org/1999/xlink">attach()</function>.
        Unsoin tout particulier doit être pris pour désallouer
        les bonnes choses même lors d'un échec afin que le système reste
        utilisable lorsque votre driver meurt.</para>
    </sect2>
  </sect1>

</chapter>

    
<!--
     The FreeBSD Documentation Project
     The FreeBSD French Documentation Project

     $Id: chapter.xml,v 1.1 2002-02-14 14:25:02 gioria Exp $
     Original revision: 1.3
     $FreeBSD$
-->
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="scsi">

  <title xmlns:xlink="http://www.w3.org/1999/xlink">Contrôleurs SCSI Common Access Method (CAM) **</title>
  <sect1 xmlns:xlink="http://www.w3.org/1999/xlink"><title xmlns:xlink="http://www.w3.org/1999/xlink">En cours de traduction</title>
  <para xmlns:xlink="http://www.w3.org/1999/xlink">En cours de traduction</para>
  </sect1>
</chapter>

    
<!--
     The FreeBSD Documentation Project
     The FreeBSD French Documentation Project

     $Id: chapter.xml,v 1.1 2002-02-14 14:25:03 gioria Exp $
     Original revision: 1.1
     $FreeBSD$
-->
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="usb">
  <title xmlns:xlink="http://www.w3.org/1999/xlink">Périphériques USB ***</title>

  <para xmlns:xlink="http://www.w3.org/1999/xlink"><emphasis xmlns:xlink="http://www.w3.org/1999/xlink">Ce chapître a été écrit par Nick Hibma. Les modifications pour le
  manuel par Murray Stokely.</emphasis></para>

  <sect1 xmlns:xlink="http://www.w3.org/1999/xlink">
    <title xmlns:xlink="http://www.w3.org/1999/xlink">Introduction</title>
    <para xmlns:xlink="http://www.w3.org/1999/xlink">Chapître à traduire.</para>
  </sect1>

</chapter>


    <chapter xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="newbus">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">NewBus</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Ce chapître traitera de l'architecture NewBus de FreeBSD.</para>
    </chapter>

  </part>

  <part xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="architectures">
    <title xmlns:xlink="http://www.w3.org/1999/xlink">Architectures</title>

    <chapter xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="ia32">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">IA-32</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Traite des spécificités de l'architecture x86 sous FreeBSD.</para>

    </chapter>

    <chapter xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="alpha">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Alpha</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Traite des spécificités de l'architecture Alpha sous FreeBSD.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Explication des erreurs d'alignements, comment les réparer,
      comment les ignorer.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Exemple de code assembleur pour FreeBSD/alpha.</para>
    </chapter>

    <chapter xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="ia64">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">IA-64</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Traite des spécificités de l'architecture IA-64 sous FreeBSD.</para>

    </chapter>
  </part>

  <part xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="debuggingpart">
    <title xmlns:xlink="http://www.w3.org/1999/xlink">Déverminage</title>

    <chapter xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="truss">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Truss</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">diverses descriptions sur les méthodes de déverminage de certains aspects
       du système utilisant truss, ktrace, gdb, kgdb, etc</para>

    </chapter>
  </part>

  <part xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="compatibility">
    <title xmlns:xlink="http://www.w3.org/1999/xlink">Les couches de compatibilité</title>

    <chapter xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="linux">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Linux</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Linux, SVR4, etc</para>

    </chapter>
  </part>

  <part xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="appendices">
    <title xmlns:xlink="http://www.w3.org/1999/xlink">Bibligraphie</title>

      <bibliography xmlns:xlink="http://www.w3.org/1999/xlink">

      <biblioentry xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="COD" xreflabel="1">
        <authorgroup xmlns:xlink="http://www.w3.org/1999/xlink">
          <author xmlns:xlink="http://www.w3.org/1999/xlink"><personname xmlns:xlink="http://www.w3.org/1999/xlink"><firstname xmlns:xlink="http://www.w3.org/1999/xlink">Dave</firstname><othername xmlns:xlink="http://www.w3.org/1999/xlink" role="MI">A</othername><surname xmlns:xlink="http://www.w3.org/1999/xlink">Patterson</surname></personname></author>
          <author xmlns:xlink="http://www.w3.org/1999/xlink"><personname xmlns:xlink="http://www.w3.org/1999/xlink"><firstname xmlns:xlink="http://www.w3.org/1999/xlink">John</firstname><othername xmlns:xlink="http://www.w3.org/1999/xlink" role="MI">L</othername><surname xmlns:xlink="http://www.w3.org/1999/xlink">Hennessy</surname></personname></author>
        </authorgroup>
        <copyright xmlns:xlink="http://www.w3.org/1999/xlink"><year xmlns:xlink="http://www.w3.org/1999/xlink">1998</year><holder xmlns:xlink="http://www.w3.org/1999/xlink">Morgan Kaufmann Publishers,
        Inc.</holder></copyright>
        <biblioid xmlns:xlink="http://www.w3.org/1999/xlink" class="isbn">1-55860-428-6</biblioid>
        <publisher xmlns:xlink="http://www.w3.org/1999/xlink">
          <publishername xmlns:xlink="http://www.w3.org/1999/xlink">Morgan Kaufmann Publishers, Inc.</publishername>
        </publisher>
        <citetitle xmlns:xlink="http://www.w3.org/1999/xlink">Computer Organization and Design</citetitle>
        <subtitle xmlns:xlink="http://www.w3.org/1999/xlink">The Hardware / Software Interface</subtitle>
        <pagenums xmlns:xlink="http://www.w3.org/1999/xlink">1-2</pagenums>
      </biblioentry>

      <biblioentry xmlns:xlink="http://www.w3.org/1999/xlink" xreflabel="2">
        <authorgroup xmlns:xlink="http://www.w3.org/1999/xlink">
          <author xmlns:xlink="http://www.w3.org/1999/xlink"><personname xmlns:xlink="http://www.w3.org/1999/xlink"><firstname xmlns:xlink="http://www.w3.org/1999/xlink">W.</firstname><othername xmlns:xlink="http://www.w3.org/1999/xlink" role="Middle">Richard</othername><surname xmlns:xlink="http://www.w3.org/1999/xlink">Stevens</surname></personname></author>
        </authorgroup>
        <copyright xmlns:xlink="http://www.w3.org/1999/xlink"><year xmlns:xlink="http://www.w3.org/1999/xlink">1993</year><holder xmlns:xlink="http://www.w3.org/1999/xlink">Addison Wesley Longman,
        Inc.</holder></copyright>
        <biblioid xmlns:xlink="http://www.w3.org/1999/xlink" class="isbn">0-201-56317-7</biblioid>
        <publisher xmlns:xlink="http://www.w3.org/1999/xlink">
          <publishername xmlns:xlink="http://www.w3.org/1999/xlink">Addison Wesley Longman, Inc.</publishername>
        </publisher>
        <citetitle xmlns:xlink="http://www.w3.org/1999/xlink">Advanced Programming in the Unix Environment</citetitle>
        <pagenums xmlns:xlink="http://www.w3.org/1999/xlink">1-2</pagenums>
      </biblioentry>

      <biblioentry xmlns:xlink="http://www.w3.org/1999/xlink" xreflabel="3">
        <authorgroup xmlns:xlink="http://www.w3.org/1999/xlink">
          <author xmlns:xlink="http://www.w3.org/1999/xlink"><personname xmlns:xlink="http://www.w3.org/1999/xlink"><firstname xmlns:xlink="http://www.w3.org/1999/xlink">Marshall</firstname><othername xmlns:xlink="http://www.w3.org/1999/xlink" role="Middle">Kirk</othername><surname xmlns:xlink="http://www.w3.org/1999/xlink">McKusick</surname></personname></author>
          <author xmlns:xlink="http://www.w3.org/1999/xlink"><personname xmlns:xlink="http://www.w3.org/1999/xlink"><firstname xmlns:xlink="http://www.w3.org/1999/xlink">Keith</firstname><surname xmlns:xlink="http://www.w3.org/1999/xlink">Bostic</surname></personname></author>
          <author xmlns:xlink="http://www.w3.org/1999/xlink"><personname xmlns:xlink="http://www.w3.org/1999/xlink"><firstname xmlns:xlink="http://www.w3.org/1999/xlink">Michael</firstname><othername xmlns:xlink="http://www.w3.org/1999/xlink" role="MI">J</othername><surname xmlns:xlink="http://www.w3.org/1999/xlink">Karels</surname></personname></author>
          <author xmlns:xlink="http://www.w3.org/1999/xlink"><personname xmlns:xlink="http://www.w3.org/1999/xlink"><firstname xmlns:xlink="http://www.w3.org/1999/xlink">John</firstname><othername xmlns:xlink="http://www.w3.org/1999/xlink" role="MI">S</othername><surname xmlns:xlink="http://www.w3.org/1999/xlink">Quarterman</surname></personname></author>
        </authorgroup>
        <copyright xmlns:xlink="http://www.w3.org/1999/xlink"><year xmlns:xlink="http://www.w3.org/1999/xlink">1996</year><holder xmlns:xlink="http://www.w3.org/1999/xlink">Addison-Wesley Publishing Company,
        Inc.</holder></copyright>
        <biblioid xmlns:xlink="http://www.w3.org/1999/xlink" class="isbn">0-201-54979-4</biblioid>
        <publisher xmlns:xlink="http://www.w3.org/1999/xlink">
          <publishername xmlns:xlink="http://www.w3.org/1999/xlink">Addison-Wesley Publishing Company, Inc.</publishername>
        </publisher>
        <citetitle xmlns:xlink="http://www.w3.org/1999/xlink">The Design and Implementation of the 4.4 BSD Operating System</citetitle>
        <pagenums xmlns:xlink="http://www.w3.org/1999/xlink">1-2</pagenums>
      </biblioentry>

      <biblioentry xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="Phrack" xreflabel="4">
        <authorgroup xmlns:xlink="http://www.w3.org/1999/xlink">
          <author xmlns:xlink="http://www.w3.org/1999/xlink"><personname xmlns:xlink="http://www.w3.org/1999/xlink"><firstname xmlns:xlink="http://www.w3.org/1999/xlink">Aleph</firstname><surname xmlns:xlink="http://www.w3.org/1999/xlink">One</surname></personname></author>
        </authorgroup>
        <citetitle xmlns:xlink="http://www.w3.org/1999/xlink">Phrack 49; "Smashing the Stack for Fun and Profit"</citetitle>
      </biblioentry>

      <biblioentry xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="StackGuard" xreflabel="5">
        <authorgroup xmlns:xlink="http://www.w3.org/1999/xlink">
          <author xmlns:xlink="http://www.w3.org/1999/xlink"><personname xmlns:xlink="http://www.w3.org/1999/xlink"><firstname xmlns:xlink="http://www.w3.org/1999/xlink">Chrispin</firstname><surname xmlns:xlink="http://www.w3.org/1999/xlink">Cowan</surname></personname></author>
          <author xmlns:xlink="http://www.w3.org/1999/xlink"><personname xmlns:xlink="http://www.w3.org/1999/xlink"><firstname xmlns:xlink="http://www.w3.org/1999/xlink">Calton</firstname><surname xmlns:xlink="http://www.w3.org/1999/xlink">Pu</surname></personname></author>
          <author xmlns:xlink="http://www.w3.org/1999/xlink"><personname xmlns:xlink="http://www.w3.org/1999/xlink"><firstname xmlns:xlink="http://www.w3.org/1999/xlink">Dave</firstname><surname xmlns:xlink="http://www.w3.org/1999/xlink">Maier</surname></personname></author>
        </authorgroup>
        <citetitle xmlns:xlink="http://www.w3.org/1999/xlink">StackGuard; Automatic Adaptive Detection and Prevention of
        Buffer-Overflow Attacks</citetitle>
      </biblioentry>

      <biblioentry xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="OpenBSD" xreflabel="6">
        <authorgroup xmlns:xlink="http://www.w3.org/1999/xlink">
	  <author xmlns:xlink="http://www.w3.org/1999/xlink"><personname xmlns:xlink="http://www.w3.org/1999/xlink"><firstname xmlns:xlink="http://www.w3.org/1999/xlink">Todd</firstname><surname xmlns:xlink="http://www.w3.org/1999/xlink">Miller</surname></personname></author>
	  <author xmlns:xlink="http://www.w3.org/1999/xlink"><personname xmlns:xlink="http://www.w3.org/1999/xlink"><firstname xmlns:xlink="http://www.w3.org/1999/xlink">Theo</firstname><surname xmlns:xlink="http://www.w3.org/1999/xlink">de Raadt</surname></personname></author>
	</authorgroup>
	<citetitle xmlns:xlink="http://www.w3.org/1999/xlink">strlcpy and strlcat -- consistent, safe string copy and
	concatenation.</citetitle>
      </biblioentry>

      </bibliography>

  </part>

</book>
