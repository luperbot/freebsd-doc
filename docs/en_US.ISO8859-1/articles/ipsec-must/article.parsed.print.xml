<?xml version="1.0" encoding="iso-8859-1"?>
<!--
    The FreeBSD Documentation Project

    $FreeBSD$
-->
<article xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:lang="en">
  <info><title xmlns:xlink="http://www.w3.org/1999/xlink">Independent Verification of IPsec Functionality in FreeBSD</title>
    

    <author xmlns:xlink="http://www.w3.org/1999/xlink"><personname xmlns:xlink="http://www.w3.org/1999/xlink"><firstname xmlns:xlink="http://www.w3.org/1999/xlink">David</firstname><surname xmlns:xlink="http://www.w3.org/1999/xlink">Honig</surname></personname><affiliation xmlns:xlink="http://www.w3.org/1999/xlink">
        <address xmlns:xlink="http://www.w3.org/1999/xlink"><email xmlns:xlink="http://www.w3.org/1999/xlink">honig@sprynet.com</email></address>
      </affiliation></author>

    <pubdate xmlns:xlink="http://www.w3.org/1999/xlink">1999-05-03</pubdate>

    <legalnotice xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="trademarks" role="trademarks">
      <para xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">FreeBSD is a registered trademark of
  the FreeBSD Foundation.</para>
      <para xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">Motif, OSF/1, and UNIX are
  registered trademarks and IT DialTone and The Open Group are
  trademarks of The Open Group in the United States and other
  countries.</para>
      <para xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">Many of the designations used by
  manufacturers and sellers to distinguish their products are claimed
  as trademarks.  Where those designations appear in this document,
  and the FreeBSD Project was aware of the trademark claim, the
  designations have been followed by the <quote xmlns:xlink="http://www.w3.org/1999/xlink">&#8482;</quote> or the
  <quote xmlns:xlink="http://www.w3.org/1999/xlink">®</quote> symbol.</para>
    </legalnotice>

    <releaseinfo xmlns:xlink="http://www.w3.org/1999/xlink">$FreeBSD$</releaseinfo>

    <abstract xmlns:xlink="http://www.w3.org/1999/xlink">
      <para xmlns:xlink="http://www.w3.org/1999/xlink">You installed IPsec and it seems to be working. How do you
        know?  I describe a method for experimentally verifying that IPsec is
        working.</para>
    </abstract>
  </info>

  <sect1 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="problem">
    <title xmlns:xlink="http://www.w3.org/1999/xlink">The Problem</title>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">First, lets assume you have <link xmlns:xlink="http://www.w3.org/1999/xlink" linkend="ipsec-install">
      installed <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">IPsec</emphasis></link>.  How do you know
      it is <link xmlns:xlink="http://www.w3.org/1999/xlink" linkend="caveat">working</link>?  Sure, your
      connection will not work if it is misconfigured, and it will work
      when you finally get it right.  <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">netstat</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">1</manvolnum></citerefentry> will list it.
      But can you independently confirm it?</para>
  </sect1>

  <sect1 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="solution">
    <title xmlns:xlink="http://www.w3.org/1999/xlink">The Solution</title>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">First, some crypto-relevant info theory:</para>

    <orderedlist xmlns:xlink="http://www.w3.org/1999/xlink">
      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Encrypted data is uniformly distributed, i.e., has maximal
	  entropy per symbol;</para>
      </listitem>

      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Raw, uncompressed data is typically redundant, i.e., has
	  sub-maximal entropy.</para>
      </listitem>
    </orderedlist>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Suppose you could measure the entropy of the data to- and
      from- your network interface.  Then you could see the difference
      between unencrypted data and encrypted data.  This would be true
      even if some of the data in <quote xmlns:xlink="http://www.w3.org/1999/xlink">encrypted mode</quote> was
      not encrypted---as the outermost IP header must be if the
      packet is to be routable.</para>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="MUST">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">MUST</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Ueli Maurer's <quote xmlns:xlink="http://www.w3.org/1999/xlink">Universal Statistical Test for Random
	Bit Generators</quote>(<link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://www.geocities.com/SiliconValley/Code/4704/universal.pdf">
	<acronym xmlns:xlink="http://www.w3.org/1999/xlink">MUST</acronym></link>) quickly measures the entropy
	of a sample.  It uses a compression-like algorithm.  <link xmlns:xlink="http://www.w3.org/1999/xlink" linkend="code">The code is given below</link> for a variant
	which measures successive (~quarter megabyte) chunks of a
	file.</para>
    </sect2>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="tcpdump">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Tcpdump</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">We also need a way to capture the raw network data.  A
	program called <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">tcpdump</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">1</manvolnum></citerefentry> lets you do this, if you have
	enabled the <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">Berkeley Packet Filter</emphasis>
	interface in your <link xmlns:xlink="http://www.w3.org/1999/xlink" linkend="kernel">kernel's config
	file</link>.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">The command:</para>

      <screen xmlns:xlink="http://www.w3.org/1999/xlink"><userinput xmlns:xlink="http://www.w3.org/1999/xlink">tcpdump -c 4000 -s 10000 -w <replaceable xmlns:xlink="http://www.w3.org/1999/xlink">dumpfile.bin</replaceable></userinput></screen>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">will capture 4000 raw packets to
      <replaceable xmlns:xlink="http://www.w3.org/1999/xlink">dumpfile.bin</replaceable>.  Up to 10,000 bytes per
      packet will be captured in this example.</para>
    </sect2>
  </sect1>

  <sect1 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="experiment">
    <title xmlns:xlink="http://www.w3.org/1999/xlink">The Experiment</title>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Here is the experiment:</para>

    <procedure xmlns:xlink="http://www.w3.org/1999/xlink">
      <step xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Open a window to an IPsec host and another window to an
	  insecure host.</para>
      </step>

      <step xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Now start <link xmlns:xlink="http://www.w3.org/1999/xlink" linkend="tcpdump">capturing
	  packets</link>.</para>
      </step>

      <step xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">In the <quote xmlns:xlink="http://www.w3.org/1999/xlink">secure</quote> window, run the <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark>
	  command <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">yes</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">1</manvolnum></citerefentry>, which will stream the <literal xmlns:xlink="http://www.w3.org/1999/xlink">y</literal>
	  character.  After a while, stop this.  Switch to the
	  insecure window, and repeat.  After a while, stop.</para>
      </step>

      <step xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Now run <link xmlns:xlink="http://www.w3.org/1999/xlink" linkend="code">MUST</link> on the
	  captured packets.  You should see something like the
	  following.  The important thing to note is that the secure
	  connection has 93% (6.7) of the expected value (7.18), and
	  the <quote xmlns:xlink="http://www.w3.org/1999/xlink">normal</quote> connection has 29% (2.1) of the
	  expected value.</para>

    <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">tcpdump -c 4000 -s 10000 -w <replaceable xmlns:xlink="http://www.w3.org/1999/xlink">ipsecdemo.bin</replaceable></userinput>
<prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">uliscan <replaceable xmlns:xlink="http://www.w3.org/1999/xlink">ipsecdemo.bin</replaceable></userinput>

Uliscan 21 Dec 98
L=8 256 258560
Measuring file ipsecdemo.bin
Init done
Expected value for L=8 is 7.1836656
6.9396 --------------------------------------------------------
6.6177 -----------------------------------------------------
6.4100 ---------------------------------------------------
2.1101 -----------------
2.0838 -----------------
2.0983 -----------------</screen>
      </step>
    </procedure>
  </sect1>

    <sect1 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="caveat">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Caveat</title>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">This experiment shows that IPsec <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">does</emphasis>
      seem to be distributing the payload data
      <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">uniformly</emphasis>, as encryption should.  However,
      the experiment described here <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">cannot</emphasis>
      detect many possible flaws in a system (none of which do I have
      any evidence for).  These include poor key generation or
      exchange, data or keys being visible to others, use of weak
      algorithms, kernel subversion, etc.  Study the source; know the
      code.</para>
  </sect1>

  <sect1 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="IPsec">
    <title xmlns:xlink="http://www.w3.org/1999/xlink">IPsec---Definition</title>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Internet Protocol security extensions to IPv4; required for
      IPv6.  A protocol for negotiating encryption and authentication
      at the IP (host-to-host) level.  SSL secures only one application
      socket; <application xmlns:xlink="http://www.w3.org/1999/xlink">SSH</application> secures only a login;
      <application xmlns:xlink="http://www.w3.org/1999/xlink">PGP</application> secures only a specified file or
      message.  IPsec encrypts everything between two hosts.</para>
  </sect1>

  <sect1 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="ipsec-install">
    <title xmlns:xlink="http://www.w3.org/1999/xlink">Installing IPsec</title>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Most of the modern versions of FreeBSD have IPsec support
      in their base source.  So you will need to include the
      <option xmlns:xlink="http://www.w3.org/1999/xlink">IPSEC</option> option in your kernel config and, after
      kernel rebuild and reinstall, configure IPsec connections using
      <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">setkey</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">8</manvolnum></citerefentry> command.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">A comprehensive guide on running IPsec on FreeBSD is
      provided in <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://www.FreeBSD.org/doc/en_US.ISO8859-1/books/handbook/ipsec.html">FreeBSD
      Handbook</link>.</para>
  </sect1>

  <sect1 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="kernel">
    <title xmlns:xlink="http://www.w3.org/1999/xlink">src/sys/i386/conf/KERNELNAME</title>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">This needs to be present in the kernel config file in order
      to capture network data with <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">tcpdump</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">1</manvolnum></citerefentry>.  Be sure
      to run <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">config</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">8</manvolnum></citerefentry> after adding this, and rebuild and
      reinstall.</para>

    <programlisting xmlns:xlink="http://www.w3.org/1999/xlink">device	bpf</programlisting>
  </sect1>

    <sect1 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="code">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Maurer's Universal Statistical Test (for block size=8
        bits)</title>

        <para xmlns:xlink="http://www.w3.org/1999/xlink">You can find the same code at <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://www.geocities.com/SiliconValley/Code/4704/uliscanc.txt">
          this link</link>.</para>

<programlisting xmlns:xlink="http://www.w3.org/1999/xlink">/*
  ULISCAN.c   ---blocksize of 8

  1 Oct 98
  1 Dec 98
  21 Dec 98       uliscan.c derived from ueli8.c

  This version has // comments removed for Sun cc

  This implements Ueli M Maurer's "Universal Statistical Test for Random
  Bit Generators" using L=8

  Accepts a filename on the command line; writes its results, with other
  info, to stdout.

  Handles input file exhaustion gracefully.

  Ref: J. Cryptology v 5 no 2, 1992 pp 89-105
  also on the web somewhere, which is where I found it.

  -David Honig
  honig@sprynet.com

  Usage:
  ULISCAN filename
  outputs to stdout
*/

#define L 8
#define V (1&lt;&lt;L)
#define Q (10*V)
#define K (100   *Q)
#define MAXSAMP (Q + K)

#include &lt;stdio.h&gt;
#include &lt;math.h&gt;

int main(argc, argv)
int argc;
char **argv;
{
  FILE *fptr;
  int i,j;
  int b, c;
  int table[V];
  double sum = 0.0;
  int iproduct = 1;
  int run;

  extern double   log(/* double x */);

  printf("Uliscan 21 Dec 98 \nL=%d %d %d \n", L, V, MAXSAMP);

  if (argc &lt; 2) {
    printf("Usage: Uliscan filename\n");
    exit(-1);
  } else {
    printf("Measuring file %s\n", argv[1]);
  }

  fptr = fopen(argv[1],"rb");

  if (fptr == NULL) {
    printf("Can't find %s\n", argv[1]);
    exit(-1);
  }

  for (i = 0; i &lt; V; i++) {
    table[i] = 0;
  }

  for (i = 0; i &lt; Q; i++) {
    b = fgetc(fptr);
    table[b] = i;
  }

  printf("Init done\n");

  printf("Expected value for L=8 is 7.1836656\n");

  run = 1;

  while (run) {
    sum = 0.0;
    iproduct = 1;

    if (run)
      for (i = Q; run &amp;&amp; i &lt; Q + K; i++) {
        j = i;
        b = fgetc(fptr);

        if (b &lt; 0)
          run = 0;

        if (run) {
          if (table[b] &gt; j)
            j += K;

          sum += log((double)(j-table[b]));

          table[b] = i;
        }
      }

    if (!run)
      printf("Premature end of file; read %d blocks.\n", i - Q);

    sum = (sum/((double)(i - Q))) /  log(2.0);
    printf("%4.4f ", sum);

    for (i = 0; i &lt; (int)(sum*8.0 + 0.50); i++)
      printf("-");

    printf("\n");

    /* refill initial table */
    if (0) {
      for (i = 0; i &lt; Q; i++) {
        b = fgetc(fptr);
        if (b &lt; 0) {
          run = 0;
        } else {
          table[b] = i;
        }
      }
    }
  }
}</programlisting>
  </sect1>
</article>
