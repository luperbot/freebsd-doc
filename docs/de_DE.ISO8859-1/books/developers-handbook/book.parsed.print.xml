<?xml version="1.0" encoding="iso-8859-1"?>
<!--
     The FreeBSD Documentation Project
     The FreeBSD German Documentation Project

     $FreeBSD$
     $FreeBSDde: de-docproj/books/developers-handbook/book.xml,v 1.15 2010/12/18 13:28:29 jkois Exp $
     basiert auf: 1.58
-->
<book xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:lang="de">
  <info><title xmlns:xlink="http://www.w3.org/1999/xlink">FreeBSD Developers' Handbook</title>
    

    <author xmlns:xlink="http://www.w3.org/1999/xlink"><orgname xmlns:xlink="http://www.w3.org/1999/xlink">The FreeBSD Documentation Project</orgname></author>

    <pubdate xmlns:xlink="http://www.w3.org/1999/xlink">August 2000</pubdate>

    <copyright xmlns:xlink="http://www.w3.org/1999/xlink">
      <year xmlns:xlink="http://www.w3.org/1999/xlink">2000</year>
      <year xmlns:xlink="http://www.w3.org/1999/xlink">2001</year>
      <year xmlns:xlink="http://www.w3.org/1999/xlink">2002</year>
      <year xmlns:xlink="http://www.w3.org/1999/xlink">2003</year>
      <year xmlns:xlink="http://www.w3.org/1999/xlink">2004</year>
      <year xmlns:xlink="http://www.w3.org/1999/xlink">2005</year>
      <year xmlns:xlink="http://www.w3.org/1999/xlink">2006</year>
      <year xmlns:xlink="http://www.w3.org/1999/xlink">2007</year>
      <year xmlns:xlink="http://www.w3.org/1999/xlink">2008</year>
      <year xmlns:xlink="http://www.w3.org/1999/xlink">2009</year>
      <year xmlns:xlink="http://www.w3.org/1999/xlink">2010</year>
      <holder xmlns:xlink="http://www.w3.org/1999/xlink">The FreeBSD Documentation Project</holder>
    </copyright>

    <copyright xmlns:xlink="http://www.w3.org/1999/xlink">
      <year xmlns:xlink="http://www.w3.org/1999/xlink">2008</year>
      <year xmlns:xlink="http://www.w3.org/1999/xlink">2009</year>
      <year xmlns:xlink="http://www.w3.org/1999/xlink">2010</year>
      <holder xmlns:xlink="http://www.w3.org/1999/xlink">The FreeBSD German Documentation Project</holder>
    </copyright>

    
<legalnotice xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="legalnotice">
  <para xmlns:xlink="http://www.w3.org/1999/xlink">Redistribution and use in source (SGML DocBook) and 'compiled'
    forms (SGML, HTML, PDF, PostScript, RTF and so forth) with or without
    modification, are permitted provided that the following conditions are
    met:</para>

  <orderedlist xmlns:xlink="http://www.w3.org/1999/xlink">
    <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
      <para xmlns:xlink="http://www.w3.org/1999/xlink">Redistributions of source code (SGML DocBook) must retain the
        above copyright notice, this list of conditions and the following
        disclaimer as the first lines of this file unmodified.</para>
    </listitem>

    <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
      <para xmlns:xlink="http://www.w3.org/1999/xlink">Redistributions in compiled form (transformed to other DTDs,
        converted to PDF, PostScript, RTF and other formats) must
        reproduce the above copyright notice, this list of conditions and
        the following disclaimer in the documentation and/or other
        materials provided with the distribution.</para>
    </listitem>
  </orderedlist>

  <important xmlns:xlink="http://www.w3.org/1999/xlink">
    <para xmlns:xlink="http://www.w3.org/1999/xlink">THIS DOCUMENTATION IS PROVIDED BY THE FREEBSD DOCUMENTATION
      PROJECT "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING,
      BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
      FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL
      THE FREEBSD DOCUMENTATION PROJECT BE LIABLE FOR ANY DIRECT, INDIRECT,
      INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
      BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
      OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
      ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
      TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
      USE OF THIS DOCUMENTATION, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
      DAMAGE.</para>
  </important>
</legalnotice>


    <legalnotice xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="trademarks" role="trademarks">
      <para xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">FreeBSD ist ein eingetragenes
  Warenzeichen der FreeBSD Foundation.</para>
      <para xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">Apple, FireWire, Mac, Macintosh, Mac OS,
  Quicktime und TrueType sind eingetragene Warenzeichen von
  Apple Computer, Inc., in den Vereinigten Staaten und anderen
  Ländern.</para>
      <para xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">IBM, AIX, OS/2,
  PowerPC, PS/2, S/390 und ThinkPad
  sind Warenzeichen der International Business Machines Corporation
  in den Vereinigten Staaten, anderen Ländern oder beiden.</para>
      <para xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">IEEE, POSIX und 802 sind eingetragene
  Warenzeichen vom Institute of Electrical and Electronics Engineers,
  Inc. in den Vereinigten Staaten.</para>
      <para xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">Intel, Celeron, EtherExpress, i386,
  i486, Itanium, Pentium und Xeon sind Warenzeichen oder eingetragene
  Warenzeichen der Intel Corporation oder ihrer Gesellschaften
  in den Vereinigten Staaten und in anderen Ländern.</para>
      <para xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">Linux ist ein eingetragenes Warenzeichen
  von Linus Torvalds.</para>
      <para xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">Microsoft, MS-DOS,
  Outlook, Windows, Windows Media und Windows NT sind entweder
  eingetragene Warenzeichen oder Warenzeichen der Microsoft Corporation
  in den Vereinigten Staaten und/oder in anderen Ländern.</para>
      <para xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">Motif, OSF/1 und UNIX sind
  eingetragene Warenzeichen und IT DialTone und The Open Group
  sind Warenzeichen der The Open Group in den Vereinigten Staaten
  und in anderen Ländern.</para>
      <para xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">Sun, Sun Microsystems, Java,
  Java Virtual Machine, JDK, JSP, JVM, Netra,
  Solaris, StarOffice
  und SunOS sind Warenzeichen oder eingetragene Warenzeichen von
  Sun Microsystems, Inc. in den Vereinigten Staaten und in anderen
  Ländern.</para>
      <para xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">Viele Produktbezeichnungen von
  Herstellern und Verkäufern sind Warenzeichen.  Soweit dem
  FreeBSD Project das Warenzeichen bekannt ist, werden die in diesem
  Dokument vorkommenden Bezeichnungen mit dem Symbol
  <quote xmlns:xlink="http://www.w3.org/1999/xlink">&#8482;</quote> oder dem Symbol <quote xmlns:xlink="http://www.w3.org/1999/xlink">®</quote>
  gekennzeichnet.</para>
    </legalnotice>

    <releaseinfo xmlns:xlink="http://www.w3.org/1999/xlink">$FreeBSD$</releaseinfo>

    <abstract xmlns:xlink="http://www.w3.org/1999/xlink">
      <para xmlns:xlink="http://www.w3.org/1999/xlink">Willkommen zum Entwickler-Handbuch. Dieses Handbuch ist
	<emphasis xmlns:xlink="http://www.w3.org/1999/xlink">jederzeit unter Bearbeitung</emphasis> und das
	Ergebnis der Arbeit vieler Einzelpersonen. Dies kann dazu
	führen, dass bestimmte Bereiche nicht mehr aktuell sind
	und auf den neuesten Stand gebracht werden müssen. Bei
	Unklarheiten empfiehlt es sich daher stets, auch die <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://www.FreeBSD.org/doc/en_US.ISO8859-1/books/developers-handbook/index.html">
	englische Originalversion</link> des Handbuchs zu
	lesen.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Wenn Sie bei der Übersetzung dieses Handbuchs
	mithelfen möchten, senden Sie bitte eine E-Mail an die
	Mailingliste 'FreeBSD German Documentation Project'
  <email xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">de-bsd-translators@de.FreeBSD.org</email>.</para>

     <para xmlns:xlink="http://www.w3.org/1999/xlink">Die aktuelle Version dieses Handbuchs ist immer auf dem
	<link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://www.FreeBSD.org/">FreeBSD-Webserver</link>
	verfügbar und kann in verschiedenen Formaten und in
	komprimierter Form vom <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ftp://ftp.FreeBSD.org/pub/FreeBSD/doc">FreeBSD-FTP-Server</link>
	oder einem der zahlreichen <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://www.FreeBSD.org/doc/de_DE.ISO8859-1/books/handbook/mirrors-ftp.html">Spiegel</link>
	heruntergeladen werden (ältere Versionen finden Sie
	hingegen unter <uri xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://docs.FreeBSD.org/doc/">http://docs.FreeBSD.org/doc/</uri>).</para>
    </abstract>
  </info>

  <part xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="Basics">
    <title xmlns:xlink="http://www.w3.org/1999/xlink">Grundlagen</title>

    
<!--
     The FreeBSD Documentation Project
     The FreeBSD German Documentation Project

     $FreeBSD$
     $FreeBSDde: de-docproj/books/developers-handbook/introduction/chapter.xml,v 1.12 2012/04/22 20:07:16 bcr Exp $
     basiert auf: 1.21
-->
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="introduction">
  <info><title xmlns:xlink="http://www.w3.org/1999/xlink">Einführung</title>
    <authorgroup xmlns:xlink="http://www.w3.org/1999/xlink">
      <author xmlns:xlink="http://www.w3.org/1999/xlink"><personname xmlns:xlink="http://www.w3.org/1999/xlink"><firstname xmlns:xlink="http://www.w3.org/1999/xlink">Murray</firstname><surname xmlns:xlink="http://www.w3.org/1999/xlink">Stokely</surname></personname><contrib xmlns:xlink="http://www.w3.org/1999/xlink">Beigetragen von </contrib></author>
      <author xmlns:xlink="http://www.w3.org/1999/xlink"><personname xmlns:xlink="http://www.w3.org/1999/xlink"><firstname xmlns:xlink="http://www.w3.org/1999/xlink">Jeroen</firstname><surname xmlns:xlink="http://www.w3.org/1999/xlink">Ruigrok van der Werven</surname></personname></author>
    </authorgroup>
    <authorgroup xmlns:xlink="http://www.w3.org/1999/xlink">
      <author xmlns:xlink="http://www.w3.org/1999/xlink"><personname xmlns:xlink="http://www.w3.org/1999/xlink"><firstname xmlns:xlink="http://www.w3.org/1999/xlink">Fabian</firstname><surname xmlns:xlink="http://www.w3.org/1999/xlink">Borschel</surname></personname><contrib xmlns:xlink="http://www.w3.org/1999/xlink">Übersetzt von </contrib></author>
    </authorgroup>
  </info>

  

  <sect1 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="introduction-devel">
    <title xmlns:xlink="http://www.w3.org/1999/xlink">Unter FreeBSD entwickeln</title>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Hier sind wir also. Ihr System ist vollständig
      installiert und Sie wollen mit dem Programmieren beginnen.
      Aber womit sollen Sie anfangen? Was bietet Ihnen FreeBSD?
      Was kann es für einen Programmierer tun?</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Dies sind einige der Fragen, welche dieses Handbuch
      zu beantworten versucht. Natürlich gibt es, analog zu
      anderen Berufen, auch bei Programmierern unterschiedliche
      Leistungsniveaus. Für die einen ist es ein Hobby,
      für die anderen ist es der Beruf. Die Informationen
      in diesem Kapitel dürften eher für den
      Programmieranfänger geeignet sein; allerdings könnte
      es auch für Programmierer, die bisher nichts mit der
      FreeBSD-Plattform zu tun hatten, interessante Informationen
      enthalten.</para>
  </sect1>

  <sect1 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="introduction-bsdvision">
    <title xmlns:xlink="http://www.w3.org/1999/xlink">Die Vision von BSD</title>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Ziel ist es, das bestmögliche <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark>-artige
      Betriebssystempaket zu erstellen, mit dem gebührenden
      Respekt gegenüber der Ideologie der ursprünglichen
      Software, sowie der Bedienbarkeit, Leistungsfähigkeit und
      Stabilität.</para>
  </sect1>

  <sect1 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="introduction-archguide">
    <title xmlns:xlink="http://www.w3.org/1999/xlink">Grundlegende Richtlinien</title>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Unsere Ideologie kann durch die folgenden Leitfäden
      beschrieben werden.</para>

    <itemizedlist xmlns:xlink="http://www.w3.org/1999/xlink">
      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Füge keine neue Funktionalität hinzu, solange
	  ein Programmierer diese nicht zur Fertigstellung einer
	  realen Anwendung benötigt.</para>
      </listitem>

      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Zu entscheiden, was ein System ist, ist genauso
	  wichtig wie zu entscheiden, was ein System nicht ist.
	  Versuchen Sie nicht, alle möglichen Wünsche zu
	  erfüllen; machen Sie lieber das System erweiterbar, so
	  dass zusätzliche Bedürfnisse in einer
	  aufwärtskompatiblen Weise bedient werden
	  können.</para>
      </listitem>

      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Das Einzige, das schlimmer ist, als von einem Beispiel
	  auf die Allgemeinheit zu schließen, ist, von
	  überhaupt keinem Beispiel auf die Allgemeinheit zu
	  schließen.</para>
      </listitem>

      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Solange ein Problem nicht vollständig verstanden
	  wurde, ist es besser, keine Lösung
	  bereitzustellen.</para>
      </listitem>

      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Wenn Sie 90% des gewünschten Effektes bei nur 10%
	  des Aufwands erreichen können, sollten Sie besser die
	  einfachere Lösung verwenden.</para>
      </listitem>

      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Grenzen Sie Komplexität so gut wie möglich
	  ein.</para>
      </listitem>

      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Stellen Sie Mechanismen anstelle von Strategien bereit.
	  Überlassen Sie insbesondere Strategien für die
	  Benutzerschnittstelle dem Benutzerprogramm.</para>
      </listitem>
     </itemizedlist>

     <para xmlns:xlink="http://www.w3.org/1999/xlink">Aus Scheifler &amp; Gettys: "X Window System"</para>
  </sect1>

  <sect1 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="introduction-layout">
    <title xmlns:xlink="http://www.w3.org/1999/xlink">Der Aufbau von
      <filename xmlns:xlink="http://www.w3.org/1999/xlink">/usr/src</filename></title>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Der vollständige Quelltext von FreeBSD ist über
      unser öffentliches Repository verfügbar. Der
      Quelltext wird normalerweise in <filename xmlns:xlink="http://www.w3.org/1999/xlink">/usr/src</filename> abgelegt und enthält
      die folgenden Unterverzeichnisse:</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">
      <informaltable xmlns:xlink="http://www.w3.org/1999/xlink" frame="none" pgwide="1">
        <tgroup xmlns:xlink="http://www.w3.org/1999/xlink" cols="2">
	  <thead xmlns:xlink="http://www.w3.org/1999/xlink">
	    <row xmlns:xlink="http://www.w3.org/1999/xlink">
	      <entry xmlns:xlink="http://www.w3.org/1999/xlink">Verzeichnis</entry>
	      <entry xmlns:xlink="http://www.w3.org/1999/xlink">Beschreibung</entry>
	    </row>
	  </thead>

	  <tbody xmlns:xlink="http://www.w3.org/1999/xlink">
	    <row xmlns:xlink="http://www.w3.org/1999/xlink">
	      <entry xmlns:xlink="http://www.w3.org/1999/xlink"><filename xmlns:xlink="http://www.w3.org/1999/xlink">bin/</filename></entry>
	      <entry xmlns:xlink="http://www.w3.org/1999/xlink">Quelldateien für Dateien in
		<filename xmlns:xlink="http://www.w3.org/1999/xlink">/bin</filename></entry>
	    </row>

	    <row xmlns:xlink="http://www.w3.org/1999/xlink">
	      <entry xmlns:xlink="http://www.w3.org/1999/xlink"><filename xmlns:xlink="http://www.w3.org/1999/xlink">cddl/</filename></entry>
	      <entry xmlns:xlink="http://www.w3.org/1999/xlink">Quelldateien für Programme, die unter
		der Common Development and Distribution License
		stehen</entry>
	    </row>

	    <row xmlns:xlink="http://www.w3.org/1999/xlink">
	      <entry xmlns:xlink="http://www.w3.org/1999/xlink"><filename xmlns:xlink="http://www.w3.org/1999/xlink">contrib/</filename></entry>
	      <entry xmlns:xlink="http://www.w3.org/1999/xlink">Quelldateien für Dateien von beigesteuerter
		Software</entry>
	    </row>

	    <row xmlns:xlink="http://www.w3.org/1999/xlink">
	      <entry xmlns:xlink="http://www.w3.org/1999/xlink"><filename xmlns:xlink="http://www.w3.org/1999/xlink">crypto/</filename></entry>
	      <entry xmlns:xlink="http://www.w3.org/1999/xlink">Quelldateien für die Kryptographie</entry>
	    </row>

	    <row xmlns:xlink="http://www.w3.org/1999/xlink">
	      <entry xmlns:xlink="http://www.w3.org/1999/xlink"><filename xmlns:xlink="http://www.w3.org/1999/xlink">etc/</filename></entry>
	      <entry xmlns:xlink="http://www.w3.org/1999/xlink">Quelldateien für Dateien in <filename xmlns:xlink="http://www.w3.org/1999/xlink">/etc</filename></entry>
	    </row>

	    <row xmlns:xlink="http://www.w3.org/1999/xlink">
	      <entry xmlns:xlink="http://www.w3.org/1999/xlink"><filename xmlns:xlink="http://www.w3.org/1999/xlink">games/</filename></entry>
	      <entry xmlns:xlink="http://www.w3.org/1999/xlink">Quelldateien für Dateien in <filename xmlns:xlink="http://www.w3.org/1999/xlink">/usr/games</filename></entry>
	    </row>

	    <row xmlns:xlink="http://www.w3.org/1999/xlink">
	      <entry xmlns:xlink="http://www.w3.org/1999/xlink"><filename xmlns:xlink="http://www.w3.org/1999/xlink">gnu/</filename></entry>
	      <entry xmlns:xlink="http://www.w3.org/1999/xlink">Programme, die unter der GNU Public License
		stehen</entry>
	    </row>

	    <row xmlns:xlink="http://www.w3.org/1999/xlink">
	      <entry xmlns:xlink="http://www.w3.org/1999/xlink"><filename xmlns:xlink="http://www.w3.org/1999/xlink">include/</filename></entry>
	      <entry xmlns:xlink="http://www.w3.org/1999/xlink">Quelldateien für Dateien in <filename xmlns:xlink="http://www.w3.org/1999/xlink">/usr/include</filename></entry>
	    </row>

	    <row xmlns:xlink="http://www.w3.org/1999/xlink">
	      <entry xmlns:xlink="http://www.w3.org/1999/xlink"><filename xmlns:xlink="http://www.w3.org/1999/xlink">kerberos5/</filename></entry>
	      <entry xmlns:xlink="http://www.w3.org/1999/xlink">Quelldateien für Kerberos Version 5</entry>
	    </row>

	    <row xmlns:xlink="http://www.w3.org/1999/xlink">
	      <entry xmlns:xlink="http://www.w3.org/1999/xlink"><filename xmlns:xlink="http://www.w3.org/1999/xlink">lib/</filename></entry>
	      <entry xmlns:xlink="http://www.w3.org/1999/xlink">Quelldateien für Dateien in <filename xmlns:xlink="http://www.w3.org/1999/xlink">/usr/lib</filename></entry>
	    </row>

	    <row xmlns:xlink="http://www.w3.org/1999/xlink">
	      <entry xmlns:xlink="http://www.w3.org/1999/xlink"><filename xmlns:xlink="http://www.w3.org/1999/xlink">libexec/</filename></entry>
	      <entry xmlns:xlink="http://www.w3.org/1999/xlink">Quelldateien für Dateien in <filename xmlns:xlink="http://www.w3.org/1999/xlink">/usr/libexec</filename></entry>
	    </row>

	    <row xmlns:xlink="http://www.w3.org/1999/xlink">
	      <entry xmlns:xlink="http://www.w3.org/1999/xlink"><filename xmlns:xlink="http://www.w3.org/1999/xlink">release/</filename></entry>
	      <entry xmlns:xlink="http://www.w3.org/1999/xlink">Dateien, die für die Erstellung eines
		FreeBSD-Releases nötig sind</entry>
	    </row>

	    <row xmlns:xlink="http://www.w3.org/1999/xlink">
	      <entry xmlns:xlink="http://www.w3.org/1999/xlink"><filename xmlns:xlink="http://www.w3.org/1999/xlink">rescue/</filename></entry>
	      <entry xmlns:xlink="http://www.w3.org/1999/xlink">Bausystem für die <filename xmlns:xlink="http://www.w3.org/1999/xlink">/rescue</filename>-Programme</entry>
	    </row>

	    <row xmlns:xlink="http://www.w3.org/1999/xlink">
	      <entry xmlns:xlink="http://www.w3.org/1999/xlink"><filename xmlns:xlink="http://www.w3.org/1999/xlink">sbin/</filename></entry>
	      <entry xmlns:xlink="http://www.w3.org/1999/xlink">Quelldateien für Dateien in <filename xmlns:xlink="http://www.w3.org/1999/xlink">/sbin</filename></entry>
	    </row>

	    <row xmlns:xlink="http://www.w3.org/1999/xlink">
	      <entry xmlns:xlink="http://www.w3.org/1999/xlink"><filename xmlns:xlink="http://www.w3.org/1999/xlink">secure/</filename></entry>
	      <entry xmlns:xlink="http://www.w3.org/1999/xlink">Quelldateien für FreeSec</entry>
	    </row>

	    <row xmlns:xlink="http://www.w3.org/1999/xlink">
	      <entry xmlns:xlink="http://www.w3.org/1999/xlink"><filename xmlns:xlink="http://www.w3.org/1999/xlink">share/</filename></entry>
	      <entry xmlns:xlink="http://www.w3.org/1999/xlink">Quelldateien für Dateien in <filename xmlns:xlink="http://www.w3.org/1999/xlink">/usr/share</filename></entry>
	    </row>

	    <row xmlns:xlink="http://www.w3.org/1999/xlink">
	      <entry xmlns:xlink="http://www.w3.org/1999/xlink"><filename xmlns:xlink="http://www.w3.org/1999/xlink">sys/</filename></entry>
	      <entry xmlns:xlink="http://www.w3.org/1999/xlink">Kernel-Quelldateien</entry>
	    </row>

	    <row xmlns:xlink="http://www.w3.org/1999/xlink">
	      <entry xmlns:xlink="http://www.w3.org/1999/xlink"><filename xmlns:xlink="http://www.w3.org/1999/xlink">tools/</filename></entry>
	      <entry xmlns:xlink="http://www.w3.org/1999/xlink">Programme zum Verwalten und Testen von
		FreeBSD</entry>
	    </row>

	    <row xmlns:xlink="http://www.w3.org/1999/xlink">
	      <entry xmlns:xlink="http://www.w3.org/1999/xlink"><filename xmlns:xlink="http://www.w3.org/1999/xlink">usr.bin/</filename></entry>
	      <entry xmlns:xlink="http://www.w3.org/1999/xlink">Quelldateien für Dateien in <filename xmlns:xlink="http://www.w3.org/1999/xlink">/usr/bin</filename></entry>
            </row>

	    <row xmlns:xlink="http://www.w3.org/1999/xlink">
	      <entry xmlns:xlink="http://www.w3.org/1999/xlink"><filename xmlns:xlink="http://www.w3.org/1999/xlink">usr.sbin/</filename></entry>
	      <entry xmlns:xlink="http://www.w3.org/1999/xlink">Quelldateien für Dateien in <filename xmlns:xlink="http://www.w3.org/1999/xlink">/usr/sbin</filename></entry>
            </row>
          </tbody>
	</tgroup>
      </informaltable>
    </para>
  </sect1>
</chapter>

    
<!--
     The FreeBSD Documentation Project
     The FreeBSD German Documentation Project

     $FreeBSD$
     $FreeBSDde: de-docproj/books/developers-handbook/tools/chapter.xml,v 1.11 2011/05/12 17:36:17 bcr Exp $
     basiert auf: 1.52
-->
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="tools">
  <info><title xmlns:xlink="http://www.w3.org/1999/xlink">Werkzeuge zur Programmierung</title>
    <authorgroup xmlns:xlink="http://www.w3.org/1999/xlink">
      <author xmlns:xlink="http://www.w3.org/1999/xlink"><personname xmlns:xlink="http://www.w3.org/1999/xlink"><firstname xmlns:xlink="http://www.w3.org/1999/xlink">James</firstname><surname xmlns:xlink="http://www.w3.org/1999/xlink">Raynard</surname></personname><contrib xmlns:xlink="http://www.w3.org/1999/xlink">Contributed by </contrib></author>
      <author xmlns:xlink="http://www.w3.org/1999/xlink"><personname xmlns:xlink="http://www.w3.org/1999/xlink"><firstname xmlns:xlink="http://www.w3.org/1999/xlink">Murray</firstname><surname xmlns:xlink="http://www.w3.org/1999/xlink">Stokely</surname></personname></author>
    </authorgroup>
    <authorgroup xmlns:xlink="http://www.w3.org/1999/xlink">
      <author xmlns:xlink="http://www.w3.org/1999/xlink"><personname xmlns:xlink="http://www.w3.org/1999/xlink"><firstname xmlns:xlink="http://www.w3.org/1999/xlink">Dirk</firstname><surname xmlns:xlink="http://www.w3.org/1999/xlink">Arlt</surname></personname><contrib xmlns:xlink="http://www.w3.org/1999/xlink">Übersetzt von </contrib></author>
      <author xmlns:xlink="http://www.w3.org/1999/xlink"><personname xmlns:xlink="http://www.w3.org/1999/xlink"><firstname xmlns:xlink="http://www.w3.org/1999/xlink">Fabian</firstname><surname xmlns:xlink="http://www.w3.org/1999/xlink">Borschel</surname></personname></author>
    </authorgroup>
  </info>

  

  <sect1 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="tools-synopsis">
    <title xmlns:xlink="http://www.w3.org/1999/xlink">Überblick</title>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Dieses Kapitel ist eine Einführung in die Benutzung
      einiger der Werkzeuge zur Programmierung die mit FreeBSD
      ausgeliefert werden. Trotzdem ist vieles auch auf verschiedene
      andere Versionen von <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark> übertragbar. Dieses Kapitel
      soll <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">kein</emphasis> Versuch sein Programmierung
      detailliert zu beschreiben. Der größte Teil dieses
      Kapitels setzt wenige oder gar keine Programmierkenntnisse
      voraus, dennoch sollten die meisten Programmierer etwas
      Sinnvolles darin finden.</para>
  </sect1>

  <sect1 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="tools-intro">
    <title xmlns:xlink="http://www.w3.org/1999/xlink">Zusammenfassung</title>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">FreeBSD bietet eine exzellente Entwicklungsumgebung.
      Compiler für C und C++, sowie ein Assembler sind im
      Basissystem enthalten. Natürlich finden
      sich auch klassische <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark>-Werkzeuge wie <command xmlns:xlink="http://www.w3.org/1999/xlink">sed</command>
      und <command xmlns:xlink="http://www.w3.org/1999/xlink">awk</command>.  Sollte das nicht genug sein, finden sich
      zahlreiche weitere Compiler und Interpreter in der Ports-Sammlung.
      Der folgende Abschnitt, <link xmlns:xlink="http://www.w3.org/1999/xlink" linkend="tools-programming">Einführung in die Programmierung</link>,
      zählt ein paar der verfügbaren Optionen auf.  FreeBSD ist
      kompatibel zu vielen Standards wie <acronym xmlns:xlink="http://www.w3.org/1999/xlink"><trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">POSIX</trademark></acronym>
      und <acronym xmlns:xlink="http://www.w3.org/1999/xlink">ANSI</acronym> C, sowie zu seinem eigenen BSD Erbe. So
      ist es möglich Anwendungen zu schreiben, welche ohne oder
      zumindest ohne wesentliche Änderungen auf einer
      großen Zahl an Plattformen kompilieren und laufen
      werden.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Allerdings können all diese Möglichkeiten
      anfangs etwas überwältigend sein, wenn Sie vorher nie
      Programme auf einem <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark>-System geschrieben haben. Dieses
      Dokument hat die Zielsetzung ihnen beim Einstieg zu helfen ohne
      allzu weit in fortgeschrittene Themen vorzudringen. Die
      Intention ist, daß dieses Dokument ihnen ausreichend
      Basiswissen vermittelt und die weitergehende Dokumentation
      sinnvoll nutzen zu können.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Der größte Teil dieses Dokuments erfordert wenige
      oder gar keine Kenntnisse in der Programmierung, es werden
      trotzdem Basiswissen im Umgang mit <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark> und die Bereitschaft
      zu lernen vorausgesetzt!</para>
  </sect1>

  <sect1 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="tools-programming">
    <title xmlns:xlink="http://www.w3.org/1999/xlink">Einführung in die Programmierung</title>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Ein Programm ist eine Zusammenstellung von Anweisungen, die
      den Computer auffordern verschiedenste Dinge zu tun. Dieser
      Abschnitt gibt ihnen einen Überblick über die beiden
      wesentlichen Methoden diese Anweisungen oder
      <quote xmlns:xlink="http://www.w3.org/1999/xlink">Befehle</quote>, wie man diese Anweisungen
      üblicherweise nennt, zu geben. Die eine Methode nutzt einen
      <firstterm xmlns:xlink="http://www.w3.org/1999/xlink">Interpreter</firstterm>, die andere einen
      <firstterm xmlns:xlink="http://www.w3.org/1999/xlink">Compiler</firstterm>. Da menschliche Sprachen
      für einen Computer nicht unmissverständlich sind,
      werden diese Befehle in einer Sprache geschrieben die speziell
      für diesen Zweck gedacht ist.</para>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Interpreter</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Mit einem Interpreter ist die Sprache vielmehr eine
	Umgebung, in der Sie ein Kommando an der Kommandozeile
	eingeben welches dann von der Umgebung ausgeführt wird.
	Für kompliziertere Programme können Sie die Befehle
	in eine Datei schreiben und den Interpreter dazu bringen diese
	Datei zu laden und die enthaltenen Befehle auszuführen.
	Falls etwas schief geht werden viele Interpreter Sie an einen
	Debugger weiterleiten.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Der Vorteil hierbei ist, das Sie das Ergebnis ihres
	Befehls direkt sehen und Fehler sofort korrigiert werden
	können. Der größte Nachteil bei dieser Methode
	entsteht, wenn Sie ihr Programm mit jemandem teilen wollen.
	Diese Person muss den selben Interpreter nutzen wie Sie es tun
	und Sie muss wissen wie dieser zu bedienen ist.
	Zudem werden Benutzer es nicht begrüßen sich in
	einem Debugger wiederzufinden, wenn Sie einmal die falsche
	Taste drücken! Bei einem Blick auf die
	Leistungsfähigkeit brauchen Interpreter oftmals viel
	Speicher und erzeugen den Code nicht so effizient wie
	Compiler.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Meiner Meinung nach sind interpretierte Sprachen der beste
	Anfang, wenn Sie bisher noch nicht programmiert haben. Diese
	Art von Umgebung findet man typischerweise bei Sprachen wie
	Lisp, Smalltalk, Perl und Basic. Man könnte auch sagen,
	dass die <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark> Shell (<command xmlns:xlink="http://www.w3.org/1999/xlink">sh</command>,
	<command xmlns:xlink="http://www.w3.org/1999/xlink">csh</command>) für sich bereits einen
	Interpreter darstellt und viele Leute schreiben
	tatsächlich Shell <quote xmlns:xlink="http://www.w3.org/1999/xlink">Scripten</quote> um sich bei
	einigen <quote xmlns:xlink="http://www.w3.org/1999/xlink">Haushaltsaufgaben</quote> auf ihren Maschinen
	helfen zu lassen. Tatsächlich war es ein wesentlicher
	Teil der originalen <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark> Philosophie eine große Zahl
	an kleinen Hilfsprogrammen zur Verfügung zu stellen,
	welche mittels eines Shellskripts miteinander kombiniert werden
	um bestimmte Aufgaben zu übernehmen.</para>
    </sect2>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Für FreeBSD verfügbare Interpreter</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Im folgenden eine Liste der über die FreeBSD
	Ports-Sammlung verfügbaren Interpreter
	einschließlich einer kurzen Erörterung der
	populären interpretierten Sprachen.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Anleitungen wie man Anwendungen aus der Ports-Sammlung
	erhält und installiert können Sie dem Kapitel <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://www.FreeBSD.org/doc/de_DE.ISO8859-1/books/handbook/ports-using.html">Benutzen der
	Ports-Sammlung</link> aus dem FreeBSD Handbuch
	entnehmen.</para>

      <variablelist xmlns:xlink="http://www.w3.org/1999/xlink">
	<varlistentry xmlns:xlink="http://www.w3.org/1999/xlink">
	  <term xmlns:xlink="http://www.w3.org/1999/xlink"><acronym xmlns:xlink="http://www.w3.org/1999/xlink">BASIC</acronym></term>

	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Kurz für Beginner's All-purpose Symbolic
	      Instruction Code. Entwickelt in den 50er Jahren um
	      Studenten in Programmierung zu unterrichten, wurde
	      <acronym xmlns:xlink="http://www.w3.org/1999/xlink">BASIC</acronym> in den 80er Jahren mit jedem
	      anständigen Personal Computer ausgeliefert und war
	      für viele Programmierer die erste
	      Programmiersprache. <acronym xmlns:xlink="http://www.w3.org/1999/xlink">BASIC</acronym> ist auch
	      die Grundlage für Visual Basic.</para>

	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Der Bywater Basic Interpreter findet sich in der
	      Ports-Sammlung unter <package xmlns:xlink="http://www.w3.org/1999/xlink">lang/bwbasic</package> und Phil
	      Cockroft's Basic Interpreter (auch bekannt als Rabbit
	      Basic) findet sich unter <package xmlns:xlink="http://www.w3.org/1999/xlink">lang/pbasic</package>.</para>
	  </listitem>
	</varlistentry>

	<varlistentry xmlns:xlink="http://www.w3.org/1999/xlink">
	  <term xmlns:xlink="http://www.w3.org/1999/xlink">Lisp</term>

	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Diese Sprache wurde in den späten 50er Jahren
	      als Alternative zu den, zu dieser Zeit populären,
	      <quote xmlns:xlink="http://www.w3.org/1999/xlink">zahlenverarbeitenden</quote> Sprachen entwickelt.
	      Anstelle auf Zahlen basiert Lisp auf Listen;
	      tatsächlich ist der Name Lisp eine Kurzform
	      für <quote xmlns:xlink="http://www.w3.org/1999/xlink">List Processing</quote> (Listen
	      abarbeiten). Sehr populär fü
	      <acronym xmlns:xlink="http://www.w3.org/1999/xlink">AI</acronym> (Artificial Intelligence/
	      künstliche Intelligez) (Fach-) Kreisen.</para>

	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Lisp ist eine extrem kraftvolle und durchdachte
	      Sprache, kann aber auch recht groß und unhandlich
	      sein.</para>

	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Zahlreiche Ausformungen von Lisp, die auf <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark>
	      Systemen laufen sind über die Ports-Sammlung
	      verfügbar. GNU Common Lisp befindet sich in
	      <package xmlns:xlink="http://www.w3.org/1999/xlink">lang/gcl</package>. CLISP von
	      Bruno Haible und Michael Stoll ist in <package xmlns:xlink="http://www.w3.org/1999/xlink">lang/clisp</package> zu finden. Für
	      CMUCL, welches auch einen hoch-optimierten Compiler
	      enthält, oder einfachere Ausformungen wie SLisp,
	      das die meisten gängigen Lisp Konstrukte in wenigen
	      hundert Zeilen C Code enthält sind in <package xmlns:xlink="http://www.w3.org/1999/xlink">lang/cmucl</package> und <package xmlns:xlink="http://www.w3.org/1999/xlink">lang/slisp</package> ebenfalls
	      enthalten.</para>
	  </listitem>
	</varlistentry>

	<varlistentry xmlns:xlink="http://www.w3.org/1999/xlink">
	  <term xmlns:xlink="http://www.w3.org/1999/xlink">Perl</term>

	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Unter Systemadministratoren zum Schreiben von
	      Skripten sehr beliebt; wird häufig auch auf World
	      Wide Web Servern verwendet, um
	      <acronym xmlns:xlink="http://www.w3.org/1999/xlink">CGI</acronym>-Skripte zu schreiben.</para>

	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Perl ist in der Ports-Sammlung unter <package xmlns:xlink="http://www.w3.org/1999/xlink">lang/perl5.8</package> für alle
	      FreeBSD-Versionen verfügbar, und wird im Basissystem
	      von 4.x als <command xmlns:xlink="http://www.w3.org/1999/xlink">/usr/bin/perl</command>
	      installiert.</para>
	  </listitem>
	</varlistentry>

	<varlistentry xmlns:xlink="http://www.w3.org/1999/xlink">
	  <term xmlns:xlink="http://www.w3.org/1999/xlink">Scheme</term>

	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Ein Dialekt von Lisp, der kompakter und sauberer
	      als Common Lisp ist. Dieser Dialekt ist an
	      Universitäten sehr beliebt, da er zum einen
	      für den Unterricht im Grundstudium einfach genug
	      ist, und zum anderen ein ausreichend hohes
	      Abstraktionsniveau für den Einsatz in der Forschung
	      bietet.</para>

	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Scheme ist in der Ports-Sammlung in Form des Elk
	      Scheme Interpreters als <package xmlns:xlink="http://www.w3.org/1999/xlink">lang/elk</package> verfügbar. Den
	      MIT Scheme Interpreter findet man unter <package xmlns:xlink="http://www.w3.org/1999/xlink">lang/mit-scheme</package>, und den SCM
	      Scheme Interpreter unter <package xmlns:xlink="http://www.w3.org/1999/xlink">lang/scm</package>.</para>
	  </listitem>
	</varlistentry>

	<varlistentry xmlns:xlink="http://www.w3.org/1999/xlink">
	  <term xmlns:xlink="http://www.w3.org/1999/xlink">Icon</term>

	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Icon ist eine Hochsprache mit ausgereiften
	      Möglichkeiten zur Verarbeitung von Zeichenketten
	      und Strukturen. Die unter FreeBSD verfügbare Version
	      von Icon steht in der Ports-Sammlung unter <package xmlns:xlink="http://www.w3.org/1999/xlink">lang/icon</package> zur
	      Verfügung.</para>
	  </listitem>
	</varlistentry>

	<varlistentry xmlns:xlink="http://www.w3.org/1999/xlink">
	  <term xmlns:xlink="http://www.w3.org/1999/xlink">Logo</term>

	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Logo ist eine leicht zu erlernende
	      Programmiersprache, welche in vielen Kursen als
	      einführende Programmiersprache gewählt wird.
	      Sie ist ein ideales Arbeitswerkzeug beim Unterricht mit
	      jungen Menschen, da mit ihr die Erstellung komplizierter
	      geometrischer Oberflächen selbst für kleine
	      Kinder einfach ist.</para>

	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Die für FreeBSD aktuellste, verfügbare
	      Version findet man in der Ports-Sammlung unter <package xmlns:xlink="http://www.w3.org/1999/xlink">lang/logo</package>.</para>
	  </listitem>
	</varlistentry>

	<varlistentry xmlns:xlink="http://www.w3.org/1999/xlink">
	  <term xmlns:xlink="http://www.w3.org/1999/xlink">Python</term>

	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Python ist eine objektorientierte, interpretierte
	      Programmiersprache. Die Verfechter von Python
	      argumentieren, daß sie eine der besten
	      Programmiersprachen für Programmieranfänger
	      sei, da sie einfach zu erlernen ist, und anderen
	      populären interpretierten Programmiersprachen,
	      welche zur Entwicklung großer und komplexer
	      Anwendungen verwendet werden, in nichts nachsteht (Perl
	      und Tcl sind zwei solcher bekannten
	      Programmiersprachen).</para>

	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Die aktuellste Version von Python ist in der
	      Ports-Sammlung unter <package xmlns:xlink="http://www.w3.org/1999/xlink">lang/python</package>
	      verfügbar.</para>
	  </listitem>
	</varlistentry>

	<varlistentry xmlns:xlink="http://www.w3.org/1999/xlink">
	  <term xmlns:xlink="http://www.w3.org/1999/xlink">Ruby</term>

	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Ruby ist eine interpretierte und rein
	      objektorientierte Programmiersprache. Sie wurde wegen
	      ihrer leicht verständlichen Syntax, ihrer
	      Flexibilität und der Möglichkeit, große und
	      komplexe Programme einfach zu entwickeln und zu pflegen,
	      populär.</para>

	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Ruby ist in der Ports-Sammlung unter <package xmlns:xlink="http://www.w3.org/1999/xlink">lang/ruby18</package>
	      verfügbar.</para>
	  </listitem>
	</varlistentry>

	<varlistentry xmlns:xlink="http://www.w3.org/1999/xlink">
	  <term xmlns:xlink="http://www.w3.org/1999/xlink">Tcl und Tk</term>

	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Tcl ist eine einbettbare, interpretierte
	      Programmiersprache, welche aufgrund ihrer Portierbarkeit
	      auf viele unterschiedliche Plattformen eine weite
	      Verbreitung erfahren hat. Sie kann sowohl für die
	      schnelle Entwicklung kleinerer Prototypen, als auch (in
	      Verbindung mit Tk, einem GUI Toolkit) vollwertiger,
	      ausgereifter Programme verwendet werden.</para>

	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Es sind mehrere Versionen von Tcl als Ports
	      für FreeBSD verfügbar. Die aktuellste Version,
	      Tcl 8.5, ist unter <package xmlns:xlink="http://www.w3.org/1999/xlink">lang/tcl85</package>
	      verfügbar.</para>
	  </listitem>
	</varlistentry>
      </variablelist>
    </sect2>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Compiler</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Compiler sind eher anders. Zuerst schreibt man seinen
	Code unter Verwendung eines Editors in eine Datei (oder
	mehrere Dateien). Anschließend ruft man den Compiler auf
	um zu sehen, ob dieser das Programm annimmt. Wenn das Programm
	nicht kompiliert werden konnte, muß man die Zähne
	zusammenbeissen und wieder zum Editor zurückkehren; falls
	das Programm kompiliert und eine ausführbare Anwendung
	erzeugt wurde, kann man diese über eine
	Eingabeaufforderung oder über einen Debugger aufrufen um
	zu sehen, ob sie auch funktioniert.

	<footnote xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Wenn die Anwendung über eine Eingabeaufforderung
	    gestartet wird könnte bei Auftreten eines
	    Programmfehlers dieses abgebrochen und ein Speicherabbild
	    erzeugt werden.</para>
	</footnote>
      </para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Offensichtlich ist diese Art der Programmierung nicht
	so direkt wie die Verwendung eines Interpreters. Jedoch sind
	auf diese Weise viele Dinge möglich, die mit einem
	Interpreter nur sehr schwer oder überhaupt nicht
	realisierbar wären, wie z.B. das Schreiben von Code, der
	sehr eng mit dem Betriebsystem zusammen arbeitet&#8212;oder
	das Schreiben eines eigenen Betriebsystems selbst! Des
	weiteren ist so das Erzeugen von sehr effizientem Code
	möglich, da sich der Compiler für die Optimierung
	Zeit nehmen kann, was bei einem Interpreter inakzeptabel
	wäre. Ferner ist das Verbreiten von Programmen, welche
	für einen Compiler geschrieben wurden, einfacher als
	welche, die für einen Interpreter geschrieben
	wurden&#8212;man muss in ersterem Fall nur die
	ausführbare Datei verbreiten, vorausgesetzt, daß das
	gleiche Betriebssystem verwendet wird.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Programmiersprachen, die kompiliert werden, sind unter
	anderem Pascal, C und C++. C und C++ sind eher unbarmherzige
	Programmiersprachen und daher eher für erfahrene
	Programmierer gedacht; Pascal auf der anderen Seite wurde zu
	Ausbildungszwecken entworfen, und stellt daher eine
	einsteigerfreundliche Programmiersprache dar. FreeBSD
	beinhaltet im Basissystem keine Unterstützung für
	Pascal, stellt jedoch über die Ports-Sammlung den
	Free Pascal Compiler unter <package xmlns:xlink="http://www.w3.org/1999/xlink">lang/fpc</package> zur Verfügung.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Da der editier-kompilier-ausführ-debug-Kreislauf
	unter Verwendung mehrerer Programme eher mühsam ist haben
	viele Hersteller von Compilern integrierte
	Entwicklungsumgebungen (Integrated Development Environment;
	auch kurz <acronym xmlns:xlink="http://www.w3.org/1999/xlink">IDE</acronym>) entwickelt. FreeBSD bietet
	zwar im Basissystem keine IDE an, stellt jedoch über die
	Ports-Sammlung IDEs wie <package xmlns:xlink="http://www.w3.org/1999/xlink">devel/kdevelop</package> oder
	<application xmlns:xlink="http://www.w3.org/1999/xlink">Emacs</application> zur Verfügung, wobei
	letztere weit verbreitet ist. Die Verwendung von
	<application xmlns:xlink="http://www.w3.org/1999/xlink">Emacs</application> als IDE wird unter <xref xmlns:xlink="http://www.w3.org/1999/xlink" linkend="emacs"/> diskutiert.</para>
    </sect2>
  </sect1>

  <sect1 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="tools-compiling">
    <title xmlns:xlink="http://www.w3.org/1999/xlink">Kompilieren mit dem <command xmlns:xlink="http://www.w3.org/1999/xlink">cc</command></title>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Dieser Abschnitt behandelt ausschließlich den GNU
      Compiler für C und C++, da dieser bereits im Basissystem
      von FreeBSD enthalten ist. Er kann mittels <command xmlns:xlink="http://www.w3.org/1999/xlink">cc</command>
      oder <command xmlns:xlink="http://www.w3.org/1999/xlink">gcc</command> aufgerufen werden. Die Details zur
      Erstellung einer Anwendung mit einem Interpreter variieren
      zwischen verschiedenen Interpretern mehr oder weniger stark, und
      werden meist ausführlich in der zugehörigen
      Dokumentation oder Online-Hilfe beschrieben.</para> <para xmlns:xlink="http://www.w3.org/1999/xlink">Sobald
      Sie Ihr Meisterwerk fertig geschrieben haben besteht der
      nächste Schritt darin, dieses (hoffentlich!) unter FreeBSD
      zum Laufen zu bekommen. Dies beinhaltet üblicherweise
      mehrere Schritte, wobei jeder einzelne Schritt von einem
      separaten Programm durchgeführt wird.</para>

    <procedure xmlns:xlink="http://www.w3.org/1999/xlink">
      <step xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Aufbereiten Ihres Quelltextes durch Entfernen von
	  Kommentaren, sowie weiteren Tricks wie das Ersetzen von
	  Macros in C.</para>
      </step>

      <step xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Überprüfen der Syntax Ihres Quelltextes, um
	  die Einhaltung der Sprachregeln sicherzustellen. Wenn Sie
	  diese verletzt haben werden entsprechende Fehlermeldungen
	  Ihnen dies mitteilen!</para>
      </step>

      <step xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Übersetzen des Quelltextes in Assemblersprache
	  &#8212;diese ist dem eigentlichen Maschinencode schon sehr
	  nahe, jedoch immer noch für Menschen lesbar.
	  Angeblich.

	  <footnote xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Um genau zu sein übersetzt der
	      <command xmlns:xlink="http://www.w3.org/1999/xlink">cc</command> den Quelltext an dieser Stelle
	      nicht in Assemblersprache, sondern in seine eigene,
	      maschinenunabhängige Sprache namens
	      <firstterm xmlns:xlink="http://www.w3.org/1999/xlink">p-code</firstterm>.</para>
	  </footnote>
	</para>
      </step>

      <step xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Übersetzen der Assemblersprache in
	  Maschinencode&#8212;genau, wir sprechen hier von Bits und
	  Bytes, Einsen und Nullen.</para>
      </step>

      <step xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Überprüfen, ob Sie Dinge wie Funktionen und
	  globale Variablen in einheitlicher Weise verwendet haben.
	  Wenn Sie z.B. eine nicht existierende Funktion aufgerufen
	  haben, wird eine entsprechende Fehlermeldung Ihnen dies
	  mitteilen.</para>
      </step>

      <step xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Wenn aus mehreren Quelltextdateien eine
	  ausführbare Datei erstellt werden soll wird
	  herausgefunden, wie die einzelnen Codeteile
	  zusammengefügt werden müssen.</para>
      </step>

      <step xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Ausarbeiten, wie das Programm aussehen muss, damit
	  der Lader zur Laufzeit des Systems dieses in den Speicher
	  laden und ausführen kann.</para>
      </step>

      <step xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Endgültiges Schreiben der ausführbaren Datei
	  in das Dateisystem.</para>
      </step>
    </procedure>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Das Wort <firstterm xmlns:xlink="http://www.w3.org/1999/xlink">kompilieren</firstterm> wird häufig
      für die Schritte 1 bis 4 verwendet&#8212;die anderen werden
      mit dem Wort <firstterm xmlns:xlink="http://www.w3.org/1999/xlink">verlinken</firstterm> zusammengefasst.
      Manchmal wird Schritt 1 auch als
      <firstterm xmlns:xlink="http://www.w3.org/1999/xlink">Pre-Processing</firstterm> und die Schritte 3-4 als
      <firstterm xmlns:xlink="http://www.w3.org/1999/xlink">assemblieren</firstterm> bezeichnet.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Glücklicherweise werden alle diese Details vor Ihnen
      verborgen, da <command xmlns:xlink="http://www.w3.org/1999/xlink">cc</command> ein Frontend ist, welches
      sich um die Ausführung all dieser Programme mit den
      richtigen Argumenten für Sie kümmert; einfaches
      eingeben von</para>

    <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">cc foobar.c</userinput></screen>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">führt zur Übersetzung von
      <filename xmlns:xlink="http://www.w3.org/1999/xlink">foobar.c</filename> durch alle bereits erwähnten
      Schritte. Wenn Sie mehr als eine Datei übersetzen wollen
      müssen Sie etwas wie folgt eingeben</para>

    <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">cc foo.c bar.c</userinput></screen>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Beachten Sie, daß die Überprüfung der Syntax
      genau dies tut&#8212;das reine Überprüfen der Syntax.
      Es findet keine Überprüfung bzgl. logischer Fehler
      statt, die Sie vielleicht gemacht haben, wie z.B. das Programm
      in eine Endlosschleife zu versetzen, oder Bubble Sort zu
      verwenden, wenn Sie eigentlich Binary Sort benutzen wollten.

      <footnote xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Falls Sie es nicht wußten, Binary Sort ist, im
	  Gegensatz zu Bubble Sort, eine effektive Möglichkeit,
	  Dinge zu sortieren.</para>
      </footnote>
    </para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Es gibt haufenweise Optionen für <command xmlns:xlink="http://www.w3.org/1999/xlink">cc</command>,
      die alle in der zugehörigen Manualpage beschrieben werden.
      Im Folgenden werden ein paar der wichtigsten Optionen mit
      Beispielen ihrer Anwendung gezeigt.</para>

    <variablelist xmlns:xlink="http://www.w3.org/1999/xlink">
      <varlistentry xmlns:xlink="http://www.w3.org/1999/xlink">
	<term xmlns:xlink="http://www.w3.org/1999/xlink"><option xmlns:xlink="http://www.w3.org/1999/xlink">-o <replaceable xmlns:xlink="http://www.w3.org/1999/xlink">filename</replaceable></option></term>

	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Die Name der Ausgabedatei. Wenn Sie diese Option nicht
	    verwenden erstellt <command xmlns:xlink="http://www.w3.org/1999/xlink">cc</command> eine Datei mit
	    dem Namen <filename xmlns:xlink="http://www.w3.org/1999/xlink">a.out</filename>.

	    <footnote xmlns:xlink="http://www.w3.org/1999/xlink">
	      <para xmlns:xlink="http://www.w3.org/1999/xlink">Der Grund dafür ist im Haufen der Geschichte
		begraben.</para>
	    </footnote>
	  </para>

	  <informalexample xmlns:xlink="http://www.w3.org/1999/xlink">
	    <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">cc foobar.c</userinput>               <lineannotation xmlns:xlink="http://www.w3.org/1999/xlink">executable is a.out</lineannotation>
<prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">cc -o foobar foobar.c</userinput>     <lineannotation xmlns:xlink="http://www.w3.org/1999/xlink">executable is foobar</lineannotation>
	    </screen>
	  </informalexample>
	</listitem>
      </varlistentry>

      <varlistentry xmlns:xlink="http://www.w3.org/1999/xlink">
	<term xmlns:xlink="http://www.w3.org/1999/xlink"><option xmlns:xlink="http://www.w3.org/1999/xlink">-c</option></term>

	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Dies kompiliert die Datei nur, verlinkt sie jedoch
	    nicht. Nützlich für Spielereien, um die Syntax
	    auf Korrektheit zu überprüfen, oder falls Sie
	    ein <filename xmlns:xlink="http://www.w3.org/1999/xlink">Makefile</filename> verwenden.</para>

	  <informalexample xmlns:xlink="http://www.w3.org/1999/xlink">
	    <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">cc -c foobar.c</userinput>
	    </screen>
	  </informalexample>

	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Dieser Befehl erzeugt eine
	    <firstterm xmlns:xlink="http://www.w3.org/1999/xlink">Objektdatei</firstterm> (nicht ausführbar)
	    mit den Namen <filename xmlns:xlink="http://www.w3.org/1999/xlink">foobar.o</filename>. Diese kann
	    mit anderen Objektdateien zusammen zu einer
	    ausführbaren Datei verlinkt werden.</para>
	</listitem>
      </varlistentry>

      <varlistentry xmlns:xlink="http://www.w3.org/1999/xlink">
	<term xmlns:xlink="http://www.w3.org/1999/xlink"><option xmlns:xlink="http://www.w3.org/1999/xlink">-g</option></term>

	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Diese Option erzeugt die Debug-Version einer
	    ausführbaren Datei. Dabei fügt der Compiler
	    zusätzliche Informationen darüber, welcher
	    Funktionsaufruf zu welcher Zeile im Quelltext gehört,
	    der ausführbaren Datei hinzu. Ein Debugger kann Ihnen
	    mit Hilfe dieser Information den zugehörigen
	    Quelltext anzeigen, während Sie den Programmverlauf
	    schrittweise verfolgen, was <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">sehr</emphasis>
	    hilfreich sein kann; der Nachteil dabei ist, daß
	    durch die zusätzlichen Informationen das Programm
	    viel größer wird. Normalerweise verwendet man
	    die Option <option xmlns:xlink="http://www.w3.org/1999/xlink">-g</option> während der
	    Entwicklung eines Programms, und für die
	    <quote xmlns:xlink="http://www.w3.org/1999/xlink">Release-Version</quote>, wenn man von der
	    Korrektheit des Programms überzeugt ist, kompiliert
	    man das Programm dann ohne diese Option.</para>

	  <informalexample xmlns:xlink="http://www.w3.org/1999/xlink">
	    <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">cc -g foobar.c</userinput>
	    </screen>
	  </informalexample>

	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Mit diesem Befehl wird eine Debug-Version des
	    Programms erzeugt.

	    <footnote xmlns:xlink="http://www.w3.org/1999/xlink">
	      <para xmlns:xlink="http://www.w3.org/1999/xlink">Beachten Sie, daß an dieser Stelle die
		Option <option xmlns:xlink="http://www.w3.org/1999/xlink">-o</option> zum Festlegen des Namens
		der ausführbaren Datei nicht verwendet wurde,
		weswegen an dieser Stelle die erzeugte Datei
		<filename xmlns:xlink="http://www.w3.org/1999/xlink">a.out</filename> heißt. Die Erzeugung
		einer Debug-Version namens <filename xmlns:xlink="http://www.w3.org/1999/xlink">foobar</filename>
		ist als Übung dem Leser überlassen!</para>
	    </footnote>
	  </para>
	</listitem>
      </varlistentry>

      <varlistentry xmlns:xlink="http://www.w3.org/1999/xlink">
	<term xmlns:xlink="http://www.w3.org/1999/xlink"><option xmlns:xlink="http://www.w3.org/1999/xlink">-O</option></term>

	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Diese Option erzeugt eine optimierte Version der
	    ausführbaren Datei. Der Compiler verwendet einige
	    clevere Tricks, um das erzeugte Programm schneller zu
	    machen. Sie können hinter der Option
	    <option xmlns:xlink="http://www.w3.org/1999/xlink">-O</option> eine Zahl angeben, um eine
	    höheres Level der Optimierung festzulegen. Dadurch
	    wird jedoch häufig eine fehlerhafte Optimierung
	    seitens des Compilers aufgedeckt. Zum Beispiel erzeugte
	    die Version des <command xmlns:xlink="http://www.w3.org/1999/xlink">cc</command>, welche mit dem
	    FreeBSD Release 2.1.0 mitgeliefert wurde, bei Verwendung
	    der Option <option xmlns:xlink="http://www.w3.org/1999/xlink">-O2</option> unter bestimmten
	    Umständen falschen Code.</para>

	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Optimierungen werden normalerweise nur beim
	    Kompilieren von Release-Versionen aktiviert.</para>

	  <informalexample xmlns:xlink="http://www.w3.org/1999/xlink">
	    <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">cc -O -o foobar foobar.c</userinput>
	    </screen>
	  </informalexample>

	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Durch diesen Befehl wird eine optimierte Version von
	    <filename xmlns:xlink="http://www.w3.org/1999/xlink">foobar</filename> erzeugt.</para>
	</listitem>
      </varlistentry>
    </variablelist>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Die folgenden drei Flags zwingen den <command xmlns:xlink="http://www.w3.org/1999/xlink">cc</command>
      dazu, Ihren Code auf die Einhaltung der internationalen
      Standards hin zu überprüfen, welche häufig als
      <acronym xmlns:xlink="http://www.w3.org/1999/xlink">ANSI</acronym> Standards bezeichnet werden, obwohl sie
      streng genommen zum <acronym xmlns:xlink="http://www.w3.org/1999/xlink">ISO</acronym> Standard
      gehören.</para>

    <variablelist xmlns:xlink="http://www.w3.org/1999/xlink">
      <varlistentry xmlns:xlink="http://www.w3.org/1999/xlink">
	<term xmlns:xlink="http://www.w3.org/1999/xlink"><option xmlns:xlink="http://www.w3.org/1999/xlink">-Wall</option></term>

	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Aktivieren aller Warnmeldungen, die die Autoren des
	    <command xmlns:xlink="http://www.w3.org/1999/xlink">cc</command> für wichtig halten. Trotz des
	    Namens dieser Option werden dadurch nicht sämtliche
	    Warnungen ausgegeben, die der <command xmlns:xlink="http://www.w3.org/1999/xlink">cc</command>
	    ausgeben könnte.</para>
	</listitem>
      </varlistentry>

      <varlistentry xmlns:xlink="http://www.w3.org/1999/xlink">
	<term xmlns:xlink="http://www.w3.org/1999/xlink"><option xmlns:xlink="http://www.w3.org/1999/xlink">-ansi</option></term>

	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Deaktivieren der meisten, jedoch nicht aller,
	    nicht-<acronym xmlns:xlink="http://www.w3.org/1999/xlink">ANSI</acronym> C Eigenschaften, die
	    der <command xmlns:xlink="http://www.w3.org/1999/xlink">cc</command> bietet. Trotz des Namens ist
	    durch diese Option nicht sichergestellt, daß Ihr
	    Code diese Standards auch vollständig
	    einhält.</para>
	</listitem>
      </varlistentry>

      <varlistentry xmlns:xlink="http://www.w3.org/1999/xlink">
	<term xmlns:xlink="http://www.w3.org/1999/xlink"><option xmlns:xlink="http://www.w3.org/1999/xlink">-pedantic</option></term>

	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Deaktivieren <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">aller</emphasis> Eigenschaften
	    des <command xmlns:xlink="http://www.w3.org/1999/xlink">cc</command>, welche nicht konform zu
	    <acronym xmlns:xlink="http://www.w3.org/1999/xlink">ANSI</acronym> C sind.</para>
	</listitem>
      </varlistentry>
    </variablelist>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Ohne diese Flags wird Ihnen der <command xmlns:xlink="http://www.w3.org/1999/xlink">cc</command> die
      Verwendung eigener Erweiterungen des Standards erlauben. Einige
      dieser Erweiterungen sind zwar sehr nützlich, werden jedoch
      nicht von anderen Compilern unterstützt&#8212;eigentlich
      ist eines der Hauptziele des Standards, das Leute Code so
      schreiben können, daß dieser mit jedem Compiler auf
      beliebigen Systemen funktioniert. Dies wird häufig als
      <firstterm xmlns:xlink="http://www.w3.org/1999/xlink">portabler Code</firstterm> bezeichnet.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Im Allgemeinen sollten Sie versuchen, Ihren Code so portabel
      wie möglich zu schreiben, da Sie ansonsten eventuell das
      gesamte Programm noch einmal neu schreiben müssen, falls
      dieser in einer anderen Umgebung laufen soll&#8212;und wer
      weiß schon was er in ein paar Jahren verwenden
      wird?</para>

    <informalexample xmlns:xlink="http://www.w3.org/1999/xlink">
      <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">cc -Wall -ansi -pedantic -o foobar foobar.c</userinput></screen>
    </informalexample>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Durch diesen Befehl wird eine ausführbare Datei namens
      <filename xmlns:xlink="http://www.w3.org/1999/xlink">foobar</filename> erzeugt, nachdem
      <filename xmlns:xlink="http://www.w3.org/1999/xlink">foobar.c</filename> auf die Einhaltung der Standards
      überprüft wurde.</para>

    <variablelist xmlns:xlink="http://www.w3.org/1999/xlink">
      <varlistentry xmlns:xlink="http://www.w3.org/1999/xlink">
	<term xmlns:xlink="http://www.w3.org/1999/xlink"><option xmlns:xlink="http://www.w3.org/1999/xlink">-l<replaceable xmlns:xlink="http://www.w3.org/1999/xlink">library</replaceable></option></term>

	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Mit dieser Option kann eine Bibliothek mit Funktionen
	    angegeben werden, die während des Verlinkens
	    verwendet wird.</para>

	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Das am häufigsten auftretende Beispiel dieser
	    Option ist die Übersetzung eines Programmes, welches
	    einige der mathematischen Funktionen in C verwendet. Im
	    Gegensatz zu den meisten anderen Plattformen befinden sich
	    diese Funktionen in einer separaten Bibliothek, deren
	    Verwendung Sie dem Compiler explizit mitteilen
	    müssen.</para>

	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Angenommen eine Bibliothek heißt
	    <filename xmlns:xlink="http://www.w3.org/1999/xlink">libirgendwas.a</filename>,
	    dann müssen Sie dem <command xmlns:xlink="http://www.w3.org/1999/xlink">cc</command> als
	    Argument
	    <option xmlns:xlink="http://www.w3.org/1999/xlink">-l<replaceable xmlns:xlink="http://www.w3.org/1999/xlink">irgendwas</replaceable></option>
	    übergeben. Zum Beispiel heißt die
	    Mathematik-Bibliothek <filename xmlns:xlink="http://www.w3.org/1999/xlink">libm.a</filename>, und
	    daher müssen Sie dem <command xmlns:xlink="http://www.w3.org/1999/xlink">cc</command> als
	    Argument <option xmlns:xlink="http://www.w3.org/1999/xlink">-lm</option> übergeben. Ein
	    typisches <quote xmlns:xlink="http://www.w3.org/1999/xlink">Manko</quote> der Mathematik-Bibliothek
	    ist, daß diese immer die letzte Bibliothek auf der
	    Kommandozeile sein muß.</para>

	  <informalexample xmlns:xlink="http://www.w3.org/1999/xlink">
	    <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">cc -o foobar foobar.c -lm</userinput>
	    </screen>
	  </informalexample>

	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Durch diesen Befehl werden die Funktionen aus der
	    Mathematik-Bibliothek in <filename xmlns:xlink="http://www.w3.org/1999/xlink">foobar</filename>
	    gelinkt.</para>

	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Wenn Sie C++-Code kompilieren wollen, müssen Sie
	    <option xmlns:xlink="http://www.w3.org/1999/xlink">-lg++</option>, bzw. <option xmlns:xlink="http://www.w3.org/1999/xlink">-lstdc++</option>
	    falls Sie FreeBSD 2.2 oder neuer verwenden, zu Ihrer
	    Kommandozeile hinzufügen, um Ihr Programm gegen die
	    Funktionen der C++ Bibliothek zu linken. Alternativ
	    können Sie anstatt <command xmlns:xlink="http://www.w3.org/1999/xlink">cc</command> auch
	    <command xmlns:xlink="http://www.w3.org/1999/xlink">c++</command> aufrufen, welcher dies für Sie
	    erledigt. <command xmlns:xlink="http://www.w3.org/1999/xlink">c++</command> kann unter FreeBSD auch
	    als <command xmlns:xlink="http://www.w3.org/1999/xlink">g++</command> aufgerufen werden.</para>

	  <informalexample xmlns:xlink="http://www.w3.org/1999/xlink">
	    <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">cc -o foobar foobar.cc -lg++</userinput>     <lineannotation xmlns:xlink="http://www.w3.org/1999/xlink">Bei FreeBSD 2.1.6 oder älter</lineannotation>
<prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">cc -o foobar foobar.cc -lstdc++</userinput>  <lineannotation xmlns:xlink="http://www.w3.org/1999/xlink">Bei FreeBSD 2.2 und neuer</lineannotation>
<prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">c++ -o foobar foobar.cc</userinput>
	    </screen>
	  </informalexample>

	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Beide Varianten erzeugen eine ausführbare
	    <filename xmlns:xlink="http://www.w3.org/1999/xlink">foobar</filename> aus der C++ Quelltextdatei
	    <filename xmlns:xlink="http://www.w3.org/1999/xlink">foobar.cc</filename>. Beachten Sie bitte,
	    daß auf <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark> Systemen C++ Quelltextdateien
	    üblicherweise auf <filename xmlns:xlink="http://www.w3.org/1999/xlink">.C</filename>,
	    <filename xmlns:xlink="http://www.w3.org/1999/xlink">.cxx</filename> oder <filename xmlns:xlink="http://www.w3.org/1999/xlink">.cc</filename>
	    enden, und nicht wie bei <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">MS-DOS</trademark> auf
	    <filename xmlns:xlink="http://www.w3.org/1999/xlink">.cpp</filename> (welche schon anderweitig
	    benutzt wurde). Der <command xmlns:xlink="http://www.w3.org/1999/xlink">gcc</command> hat
	    normalerweise anhand dieser Information entschieden,
	    welcher Compiler für die Quelltextdatei zum Einsatz
	    kommen soll; allerdings gilt diese Einschränkung
	    jetzt nicht mehr, und Sie können Ihre C++-Dateien
	    ungestraft auf <filename xmlns:xlink="http://www.w3.org/1999/xlink">.cpp</filename> enden
	    lassen!</para>
	</listitem>
      </varlistentry>
    </variablelist>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Häufig auftretende <command xmlns:xlink="http://www.w3.org/1999/xlink">cc</command>-Fragen und
	-Probleme</title>

      <qandaset xmlns:xlink="http://www.w3.org/1999/xlink">
	<qandaentry xmlns:xlink="http://www.w3.org/1999/xlink">
	  <question xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Ich versuche ein Programm zu schreiben, welches die
	      Funktion <function xmlns:xlink="http://www.w3.org/1999/xlink">sin()</function> verwendet, erhalte
	      jedoch eine Fehlermeldung. Was bedeutet diese?</para>

	    <informalexample xmlns:xlink="http://www.w3.org/1999/xlink">
	      <screen xmlns:xlink="http://www.w3.org/1999/xlink">/var/tmp/cc0143941.o: Undefined symbol `_sin' referenced from text segment
	      </screen>
	    </informalexample>
	  </question>

	  <answer xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Wenn Sie mathematische Funktionen wie
	      <function xmlns:xlink="http://www.w3.org/1999/xlink">sin()</function> verwenden wollen, müssen
	      Sie den <command xmlns:xlink="http://www.w3.org/1999/xlink">cc</command> anweisen, die
	      Mathematik-Bibliothek wie folgt zu verlinken:</para>

	    <informalexample xmlns:xlink="http://www.w3.org/1999/xlink">
	      <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">cc -o foobar foobar.c -lm</userinput>
	      </screen>
	    </informalexample>
	  </answer>
	</qandaentry>

	<qandaentry xmlns:xlink="http://www.w3.org/1999/xlink">
	  <question xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">So, ich habe jetzt dieses einfache Programm als
	      Übung für <option xmlns:xlink="http://www.w3.org/1999/xlink">-lm</option> geschrieben.
	      Alles was es macht ist, 2.1 hoch 6 zu berechnen.</para>

	    <informalexample xmlns:xlink="http://www.w3.org/1999/xlink">
	      <programlisting xmlns:xlink="http://www.w3.org/1999/xlink">#include &lt;stdio.h&gt;

int main() {
	float f;

	f = pow(2.1, 6);
	printf("2.1 ^ 6 = %f\n", f);
	return 0;
}
	      </programlisting>
	    </informalexample>

	    <para xmlns:xlink="http://www.w3.org/1999/xlink">und ich habe es wie folgt kompiliert:</para>

	    <informalexample xmlns:xlink="http://www.w3.org/1999/xlink">
	      <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">cc temp.c -lm</userinput>
	      </screen>
	    </informalexample>

	    <para xmlns:xlink="http://www.w3.org/1999/xlink">wie mir gesagt wurde. Allerdings bekomme ich jetzt
	      bei der Ausführung die folgende Ausgabe:</para>

	    <informalexample xmlns:xlink="http://www.w3.org/1999/xlink">
	      <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">./a.out</userinput>
2.1 ^ 6 = 1023.000000
	      </screen>
	    </informalexample>

	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Das ist <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">nicht</emphasis> die richtige
	      Antwort! Was ist hier los?</para>
	  </question>

	  <answer xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Wenn der Compiler Ihren Funktionsaufruf sieht,
	      überprüft er, ob er schon einmal einen
	      Prototypen für diese gesehen hat. Wenn nicht nimmt
	      er als Rückgabewert den Typ <type xmlns:xlink="http://www.w3.org/1999/xlink">int</type> an,
	      was sicherlich nicht das ist, was Sie an dieser Stelle
	      wollen.</para>
	  </answer>
	</qandaentry>

	<qandaentry xmlns:xlink="http://www.w3.org/1999/xlink">
	  <question xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Wie kann ich das korrigieren?</para>
	  </question>

	  <answer xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Die Prototypen der mathematischen Funktionen
	      befinden sich in der Datei <filename xmlns:xlink="http://www.w3.org/1999/xlink">math.h</filename>.
	      Wenn Sie diese Datei in Ihrem Quelltext includen ist der
	      Compiler in der Lage, den Prototypen zu finden, und wird
	      aufhören, seltsame Dinge mit Ihrer Berechnung zu
	      machen!</para>

	    <informalexample xmlns:xlink="http://www.w3.org/1999/xlink">
	      <programlisting xmlns:xlink="http://www.w3.org/1999/xlink">#include &lt;math.h&gt;
#include &lt;stdio.h&gt;

int main() {
...
	      </programlisting>
	    </informalexample>

	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Nach erneutem Compilieren sollte das Folgende bei
	      der Ausführung ausgegeben werden:</para>

	    <informalexample xmlns:xlink="http://www.w3.org/1999/xlink">
	      <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">./a.out</userinput>
2.1 ^ 6 = 85.766121
	      </screen>
	    </informalexample>

	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Wenn Sie irgendwelche mathematischen Funktionen
	      verwenden sollten Sie <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">immer</emphasis> die
	      Datei <filename xmlns:xlink="http://www.w3.org/1999/xlink">math.h</filename> includen und nicht
	      vergessen, Ihr Programm gegen die Mathematik-Bibliothek
	      zu verlinken.</para>
	  </answer>
	</qandaentry>

	<qandaentry xmlns:xlink="http://www.w3.org/1999/xlink">
	  <question xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Ich habe eine Datei mit dem Namen
	      <filename xmlns:xlink="http://www.w3.org/1999/xlink">foobar.c</filename> kompiliert, kann jedoch
	      nirgends eine ausführbare Datei namens
	      <filename xmlns:xlink="http://www.w3.org/1999/xlink">foobar</filename> finden. Wo befindet sich
	      diese?</para>
	  </question>

	  <answer xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Denken Sie daran, daß der
	      <command xmlns:xlink="http://www.w3.org/1999/xlink">cc</command> die ausführbare Datei
	      <filename xmlns:xlink="http://www.w3.org/1999/xlink">a.out</filename> nennt, wenn Sie nicht
	      explizit einen Namen angeben. Verwenden Sie in solch
	      einem Fall die Option
	      <option xmlns:xlink="http://www.w3.org/1999/xlink">-o <replaceable xmlns:xlink="http://www.w3.org/1999/xlink">filename</replaceable></option>:</para>

	    <informalexample xmlns:xlink="http://www.w3.org/1999/xlink">
	      <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">cc -o foobar foobar.c</userinput>
	      </screen>
	    </informalexample>
	  </answer>
	</qandaentry>

	<qandaentry xmlns:xlink="http://www.w3.org/1999/xlink">
	  <question xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">OK, ich habe eine ausführbare Datei namens
	      <filename xmlns:xlink="http://www.w3.org/1999/xlink">foobar</filename>, ich kann sie sehen, wenn
	      ich <command xmlns:xlink="http://www.w3.org/1999/xlink">ls</command> aufrufe. Gebe ich jedoch
	      <command xmlns:xlink="http://www.w3.org/1999/xlink">foobar</command> in die Kommandozeile ein wird
	      mir gesagt, daß eine Datei mit diesem Namen nicht
	      existiert. Warum kann die Datei nicht gefunden
	      werden?</para>
	  </question>

	  <answer xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Im Gegensatz zu <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">MS-DOS</trademark> sucht <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark> nicht im
	      aktuellen Verzeichnis nach einem ausführbaren
	      Programm, das Sie versuchen auszuführen, solange
	      Sie dies nicht explizit mit angeben. Sie können
	      entweder <command xmlns:xlink="http://www.w3.org/1999/xlink">./foobar</command> eingeben, was
	      soviel bedeutet wie <quote xmlns:xlink="http://www.w3.org/1999/xlink">führe eine Datei namens
	      <filename xmlns:xlink="http://www.w3.org/1999/xlink">foobar</filename> im aktuellen Verzeichnis
	      aus</quote>, oder Sie können Ihre Umgebungsvariable
	      <envar xmlns:xlink="http://www.w3.org/1999/xlink">PATH</envar> so erweitern, daß sie
	      ähnlich wie folgt aussieht</para>

	    <informalexample xmlns:xlink="http://www.w3.org/1999/xlink">
	      <screen xmlns:xlink="http://www.w3.org/1999/xlink">bin:/usr/bin:/usr/local/bin:.
	      </screen>
	    </informalexample>

	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Der Punkt am Ende bedeutet <quote xmlns:xlink="http://www.w3.org/1999/xlink">siehe im aktuellen
	      Verzeichnis nach, wenn es in keinem der anderen zu
	      finden war</quote>.</para>
	  </answer>
	</qandaentry>

	<qandaentry xmlns:xlink="http://www.w3.org/1999/xlink">
	  <question xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Ich habe meine ausführbare Datei
	      <filename xmlns:xlink="http://www.w3.org/1999/xlink">test</filename> genannt, allerdings passiert
	      nichts wenn ich diese aufrufe. Was ist hier los?</para>
	  </question>

	  <answer xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Bei den meisten <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark>-Systeme existiert bereits
	      ein Programm mit dem Namen <command xmlns:xlink="http://www.w3.org/1999/xlink">test</command> im
	      Verzeichnis <filename xmlns:xlink="http://www.w3.org/1999/xlink">/usr/bin</filename>, und die Shell
	      nimmt dieses, bevor sie im aktuellen Verzeichnis
	      nachsieht. Sie können entweder den folgenden Befehl
	      eingeben:</para>

	    <informalexample xmlns:xlink="http://www.w3.org/1999/xlink">
	      <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">./test</userinput>
	      </screen>
	    </informalexample>

	    <para xmlns:xlink="http://www.w3.org/1999/xlink">oder Sie können einen geeigneteren Namen
	      für Ihr Programm wählen!</para>
	  </answer>
	</qandaentry>

	<qandaentry xmlns:xlink="http://www.w3.org/1999/xlink">
	  <question xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Ich habe mein Programm kompiliert und bei dessen
	      Aufruf sah zuerst alles gut aus. Jedoch gab es dann eine
	      Fehlermeldung, welche irgendetwas mit <errorname xmlns:xlink="http://www.w3.org/1999/xlink">core
	      dumped</errorname> lautete. Was bedeutet das?</para>
	  </question>

	  <answer xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Der Name <firstterm xmlns:xlink="http://www.w3.org/1999/xlink">core dump</firstterm> stammt
	      noch aus sehr frühen Zeiten von <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark>, als die
	      Maschinen noch Kernspeicher zum Speichern von Daten
	      verwendeten. Einfach ausgedrückt, wenn bei einem
	      Programm unter bestimmen Bedingungen ein Fehler auftrat,
	      hat das System den Inhalt des Kernspeichers auf der
	      Festplatte in eine Datei namens
	      <filename xmlns:xlink="http://www.w3.org/1999/xlink">core</filename> geschrieben, welche der
	      Programmierer dann näher untersuchen konnte, um die
	      Ursache des Fehlers herauszufinden.</para>
	  </answer>
	</qandaentry>

	<qandaentry xmlns:xlink="http://www.w3.org/1999/xlink">
	  <question xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Faszinierendes Zeugs, aber was soll ich jetzt
	      machen?</para>
	  </question>

	  <answer xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Verwenden Sie den <command xmlns:xlink="http://www.w3.org/1999/xlink">gdb</command>, um das
	      Speicherabbild zu untersuchen (siehe <xref xmlns:xlink="http://www.w3.org/1999/xlink" linkend="debugging"/>).</para>
	  </answer>
	</qandaentry>

	<qandaentry xmlns:xlink="http://www.w3.org/1999/xlink">
	  <question xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Als mein Programm den core dump erzeugt hat, sagte
	      es etwas von einem <errorname xmlns:xlink="http://www.w3.org/1999/xlink">segmentation
	      fault</errorname>. Was ist das?</para>
	  </question>

	  <answer xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Diese Meldung heißt im Prinzip, daß Ihr
	      Programm eine illegale Operation mit dem Speicher
	      durchführen wollte; <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark> wurde so entworfen,
	      daß es das andere Programme und das Betriebssystem
	      selbst vor wildgewordenen Programmen
	      schützt.</para>

	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Häufige Ursachen hierfür sind:</para>

	    <itemizedlist xmlns:xlink="http://www.w3.org/1999/xlink">
	      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
		<para xmlns:xlink="http://www.w3.org/1999/xlink">Der Versuch, einen <symbol xmlns:xlink="http://www.w3.org/1999/xlink">NULL</symbol>-Zeiger
		  zu beschreiben, z.B.</para>

		<programlisting xmlns:xlink="http://www.w3.org/1999/xlink">char *foo = NULL;
strcpy(foo, "bang!");
		</programlisting>
	      </listitem>

	      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
		<para xmlns:xlink="http://www.w3.org/1999/xlink">Einen Zeiger zu verwenden, welcher noch nicht
		  initialisiert wurde, z.B.</para>

		<programlisting xmlns:xlink="http://www.w3.org/1999/xlink">char *foo;
strcpy(foo, "bang!");
		</programlisting>

		<para xmlns:xlink="http://www.w3.org/1999/xlink">Der Zeiger hat einen zufälligen Wert,
		  welcher mit etwas Glück in einen Bereich des
		  Speichers zeigt, der für Ihr Programm nicht
		  verfügbar ist, und der Kernel bricht Ihr
		  Programm ab, bevor es irgendwelchen Schaden
		  anrichten kann. Wenn Sie Pech haben zeigt der Zeiger
		  irgendwo mitten in Ihr eigenes Programm, und
		  verändert dort ihre eigenen Datenstrukturen,
		  was zu sehr seltsamen Fehlern Ihres Programmes
		  führt.</para>
	      </listitem>

	      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
		<para xmlns:xlink="http://www.w3.org/1999/xlink">Der Versuch, auf Daten außerhalb eines
		  Arrays zuzugreifen, z.B.</para>

		<programlisting xmlns:xlink="http://www.w3.org/1999/xlink">int bar[20];
bar[27] = 6;
		</programlisting>
	      </listitem>

	      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
		<para xmlns:xlink="http://www.w3.org/1999/xlink">Der Versuch, Daten in eine Speicherbereich zu
		  schreiben, der nur lesbar ist, z.B.</para>

		<programlisting xmlns:xlink="http://www.w3.org/1999/xlink">char *foo = "My string";
strcpy(foo, "bang!");
		</programlisting>

		<para xmlns:xlink="http://www.w3.org/1999/xlink"><trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark>-Compiler speichern häufig feste
		  Zeichenketten wie <literal xmlns:xlink="http://www.w3.org/1999/xlink">"My string"</literal> in
		  nur lesbaren Speicherbereichen ab.</para>
	      </listitem>

	      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
		<para xmlns:xlink="http://www.w3.org/1999/xlink">Wenn man unerlaubte Operationen mit
		  <function xmlns:xlink="http://www.w3.org/1999/xlink">malloc()</function> und
		  <function xmlns:xlink="http://www.w3.org/1999/xlink">free()</function> ausführt,
		  z.B.</para>

		<programlisting xmlns:xlink="http://www.w3.org/1999/xlink">char bar[80];
free(bar);
		</programlisting>

		<para xmlns:xlink="http://www.w3.org/1999/xlink">oder</para>

		<programlisting xmlns:xlink="http://www.w3.org/1999/xlink">char *foo = malloc(27);
free(foo);
free(foo);
		</programlisting>
	      </listitem>
	    </itemizedlist>

	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Einzelne solcher Fehler führen zwar nicht
	      immer zu einem Fehlverhalten des Programms, stellen
	      jedoch immer eine falsche Verwendung dar. Manche Systeme
	      und Compiler sind toleranter als andere, weshalb
	      Programme auf dem einen System einwandfrei laufen, auf
	      dem anderen System jedoch abstürzen.</para>
	  </answer>
	</qandaentry>

	<qandaentry xmlns:xlink="http://www.w3.org/1999/xlink">
	  <question xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Wenn ich einen core dump erhalte erscheint
	      manchmal die Meldung <errorname xmlns:xlink="http://www.w3.org/1999/xlink">bus error</errorname>.
	      In meinem <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark>-Buch steht, daß die Ursache ein
	      Hardwareproblem sei. Der Computer scheint aber weiterhin
	      zu funktionieren. Ist dies wahr?</para>
	  </question>

	  <answer xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Nein, glücklicherweise nicht (es sei denn Sie
	      haben wirklich ein Hardwareproblem&#8230;).
	      Üblicherweise ist dies ein Weg Ihnen mitzuteilen,
	      daß Sie auf Speicher in einer Weise zugegriffen
	      haben, in der Sie dies nicht tun sollten.</para>
	  </answer>
	</qandaentry>

	<qandaentry xmlns:xlink="http://www.w3.org/1999/xlink">
	  <question xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Diese Sache mit den core dumps hört sich sehr
	      nützlich an, wenn ich so etwas selber an beliebiger
	      Stelle bewirken könnte. Kann ich das tun, oder
	      muß ich warten bis ein Fehler auftritt?</para>
	  </question>

	  <answer xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Ja, nehmen sie einfach eine andere Konsole oder
	      XTerm und führen Sie</para>

	    <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">ps</userinput>
	    </screen>

	    <para xmlns:xlink="http://www.w3.org/1999/xlink">aus, um die Prozess-ID Ihres Programms
	      herauszufinden. Führen Sie
	      anschließend</para>

	    <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">kill -ABRT pid</userinput>
	    </screen>

	    <para xmlns:xlink="http://www.w3.org/1999/xlink">aus, wobei
	      <parameter xmlns:xlink="http://www.w3.org/1999/xlink"><replaceable xmlns:xlink="http://www.w3.org/1999/xlink">pid</replaceable></parameter>
	      die Prozess-ID ist, die Sie vorher ermittelt
	      haben.</para>

	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Dies ist nützlich, wenn sich Ihr Programm z.B.
	      in einer Endlosschleife verfangen hat. Sollte Ihr
	      Programm das Signal <symbol xmlns:xlink="http://www.w3.org/1999/xlink">SIGABRT</symbol> abfangen,
	      gibt es noch andere Möglichkeiten, die denselben
	      Effekt haben.</para>

	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Alternativ können Sie einen core dump aus
	      Ihrem Programm heraus erstellen, indem Sie die Funktion
	      <function xmlns:xlink="http://www.w3.org/1999/xlink">abort()</function> aufrufen. Weitere
	      Informationen darüber können Sie in der
	      Manualpage <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">abort</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">3</manvolnum></citerefentry> nachlesen.</para>

	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Wenn Sie einen core dump von außerhalb Ihres
	      Programms erzeugen wollen, ohne dabei den Prozess
	      abzubrechen, können Sie das Programm
	      <command xmlns:xlink="http://www.w3.org/1999/xlink">gcore</command> verwenden. Weitere
	      Informationen dazu finden Sie in der zugehörigen
	      Manualpage <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">gcore</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">1</manvolnum></citerefentry>.</para>

	  </answer>
	</qandaentry>
      </qandaset>
    </sect2>
  </sect1>

  <sect1 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="tools-make">
    <title xmlns:xlink="http://www.w3.org/1999/xlink">Make</title>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Was ist <command xmlns:xlink="http://www.w3.org/1999/xlink">make</command>?</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Wenn Sie an einem einfachen Programm mit nur einer oder
	zwei Quelltextdateien arbeiten, ist die Eingabe von</para>

      <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">cc file1.c file2.c</userinput></screen>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">zwar nicht aufwendig, wird aber mit zunehmender Anzahl
	der Quelltextdateien sehr lästig&#8212;und auch das
	Kompilieren kann eine Weile dauern.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Eine Möglichkeit dies zu umgehen besteht in der
	Verwendung von Objektdateien, wobei man nur die
	Quelltextdateien neu kompiliert, die verändert wurden. So
	könnten wir etwa folgendes erhalten:</para>

      <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">cc file1.o file2.o</userinput> &#8230; <userinput xmlns:xlink="http://www.w3.org/1999/xlink">file37.c</userinput> &#8230;</screen>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">falls wir seit dem letzten Kompiliervorgang nur die Datei
	<filename xmlns:xlink="http://www.w3.org/1999/xlink">file37.c</filename> verändert haben. Dadurch
	könnte der Kompiliervorgang um einiges beschleunigt
	werden, es muß jedoch immer noch alles von Hand
	eingegeben werden.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Oder wir könnten uns ein Shell Skript schreiben.
	Dieses würde jedoch alles immer wieder neu kompilieren,
	was bei einem großen Projekt sehr ineffizient
	wäre.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Was ist, wenn wir hunderte von Quelltextdateien
	hätten? Was ist, wenn wir in einem Team mit anderen
	Leuten arbeiten würden, die vergessen uns Bescheid zu
	sagen, falls sie eine der Quelltextdateien verändert
	haben, die wir ebenfalls benutzen?</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Vielleicht könnten wir beide Lösungen
	kombinieren und etwas wie ein Shell Skript schreiben, welches
	eine Art magische Regel enthalten würde, die feststellt,
	welche Quelltextdateien neu kompiliert werden müssten.
	Alles was wir bräuchten wäre ein Programm, das diese
	Regeln verstehen könnte, da diese Aufgabe etwas zu
	kompliziert für eine Shell ist.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Dieses Programm heißt <command xmlns:xlink="http://www.w3.org/1999/xlink">make</command>. Es
	liest eine Datei namens <firstterm xmlns:xlink="http://www.w3.org/1999/xlink">makefile</firstterm>,
	welche ihm sagt, wie unterschiedliche Dateien voneinander
	abhängen, und berechnet, welche Dateien neu kompiliert
	werden müssen und welche nicht. Zum Beispiel könnte
	eine Regel etwas sagen wie <quote xmlns:xlink="http://www.w3.org/1999/xlink">wenn
	<filename xmlns:xlink="http://www.w3.org/1999/xlink">fromboz.o</filename> älter als
	<filename xmlns:xlink="http://www.w3.org/1999/xlink">fromboz.c</filename> ist, bedeutet dies, daß
	jemand die Datei <filename xmlns:xlink="http://www.w3.org/1999/xlink">fromboz.c</filename> verändert
	haben muß, und diese daher neu kompiliert werden
	muß.</quote> Das makefile enthält außerdem
	Regeln die make sagen, <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">wie</emphasis> die
	Quelltextdatei neu kompiliert werden muß, was dieses
	Tool noch sehr viel mächtiger macht.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Makefiles werden normalerweise im selben Verzeichnis
	wie die Quelltextdateien abgelegt, zu denen sie gehören,
	und kann <filename xmlns:xlink="http://www.w3.org/1999/xlink">makefile</filename>,
	<filename xmlns:xlink="http://www.w3.org/1999/xlink">Makefile</filename> oder
	<filename xmlns:xlink="http://www.w3.org/1999/xlink">MAKEFILE</filename> heißen. Die meisten
	Programmierer verwenden den Namen
	<filename xmlns:xlink="http://www.w3.org/1999/xlink">Makefile</filename>, da diese Schreibweise
	dafür sorgt, daß die Datei gut lesbar ganz oben in
	der Verzeichnisliste aufgeführt wird.

	<footnote xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Verwenden Sie nicht <filename xmlns:xlink="http://www.w3.org/1999/xlink">MAKEFILE</filename> mit
	    lauter Großbuchstaben, da diese Schreibweise
	    häufig für Dokumentationsdateien wie
	    <filename xmlns:xlink="http://www.w3.org/1999/xlink">README</filename> benutzt wird.</para>
	</footnote>
      </para>
    </sect2>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Beispielhafte Verwendung von <command xmlns:xlink="http://www.w3.org/1999/xlink">make</command></title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Hier ist eine sehr einfache make Datei:</para>

      <programlisting xmlns:xlink="http://www.w3.org/1999/xlink">foo: foo.c
	cc -o foo foo.c</programlisting>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Sie besteht aus zwei Zeilen, einer
	Abhängigkeitszeile und einer Erzeugungszeile.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Die Abhängigkeitszeile hier besteht aus dem Namen
	des Programms (auch <firstterm xmlns:xlink="http://www.w3.org/1999/xlink">Ziel</firstterm> genannt),
	gefolgt von einem Doppelpunkt und einem Leerzeichen, und
	anschließend dem Namen der Quelltextdatei. Wenn
	<command xmlns:xlink="http://www.w3.org/1999/xlink">make</command> diese Zeile liest überprüft
	es die Existenz von <filename xmlns:xlink="http://www.w3.org/1999/xlink">foo</filename>; falls diese
	Datei existiert vergleicht es das Datum der letzten
	Änderung von <filename xmlns:xlink="http://www.w3.org/1999/xlink">foo</filename> mit der von
	<filename xmlns:xlink="http://www.w3.org/1999/xlink">foo.c</filename>. Falls <filename xmlns:xlink="http://www.w3.org/1999/xlink">foo</filename>
	nicht existiert, oder älter als
	<filename xmlns:xlink="http://www.w3.org/1999/xlink">foo.c</filename> ist, liest es die Erzeugungszeile
	um herauszufinden, was zu tun ist. Mit anderen Worten, dies
	ist die Regel die festlegt, wann <filename xmlns:xlink="http://www.w3.org/1999/xlink">foo.c</filename>
	neu kompiliert werden muß.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Die Erzeugungszeile beginnt mit einem <token xmlns:xlink="http://www.w3.org/1999/xlink">tab</token>
	(drücken Sie dazu die <keycap xmlns:xlink="http://www.w3.org/1999/xlink">tab</keycap>-Taste) gefolgt
	von dem Befehl, mit dem Sie <filename xmlns:xlink="http://www.w3.org/1999/xlink">foo</filename> manuell
	erzeugen würden. Wenn <filename xmlns:xlink="http://www.w3.org/1999/xlink">foo</filename> veraltet
	ist, oder nicht existiert, führt <command xmlns:xlink="http://www.w3.org/1999/xlink">make</command>
	diesen Befehl aus, um die Datei zu erzeugen. Mit anderen
	Worten, dies ist die Regel die make sagt, wie
	<filename xmlns:xlink="http://www.w3.org/1999/xlink">foo.c</filename> kompiliert werden muß.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Wenn Sie also <userinput xmlns:xlink="http://www.w3.org/1999/xlink">make</userinput> eingeben wird
	dieses sicherstellen, daß <filename xmlns:xlink="http://www.w3.org/1999/xlink">foo</filename> bzgl.
	Ihrer letzten Änderungen an <filename xmlns:xlink="http://www.w3.org/1999/xlink">foo.c</filename>
	auf dem neuesten Stand ist. Dieses Prinzip kann auf
	<filename xmlns:xlink="http://www.w3.org/1999/xlink">Makefile</filename>s mit hunderten von
	Zielen&#8212;es ist bei FreeBSD praktisch möglich, das
	gesamte Betriebssystem zu kompilieren, indem man nur
	<userinput xmlns:xlink="http://www.w3.org/1999/xlink">make world</userinput> im richtigen Verzeichnis
	eingibt!</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Eine weitere nützliche Eigenschaft der makefiles
	ist, daß die Ziele keine Programme sein müssen. Wir
	könnten zum Beispiel eine make Datei haben, die wie folgt
	aussieht:</para>

      <programlisting xmlns:xlink="http://www.w3.org/1999/xlink">foo: foo.c
	cc -o foo foo.c

install:
	cp foo /home/me</programlisting>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Wir können make sagen welches Ziel wir erzeugt haben
	wollen, indem wir etwas wie folgt eingeben:</para>

      <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">make target</userinput></screen>

      <para xmlns:xlink="http://www.w3.org/1999/xlink"><command xmlns:xlink="http://www.w3.org/1999/xlink">make</command> wird dann nur dieses Ziel
	beachten und alle anderen ignorieren. Wenn wir zum Beispiel
	<userinput xmlns:xlink="http://www.w3.org/1999/xlink">make foo</userinput> mit dem obigen makefile
	eingeben, dann wird make das Ziel
	<buildtarget>install</buildtarget> ignorieren.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Wenn wir nur <userinput xmlns:xlink="http://www.w3.org/1999/xlink">make</userinput> eingeben wird
	make immer nur nach dem ersten Ziel suchen und danach mit dem
	Suchen aufhören. Wenn wir hier also nur
	<userinput xmlns:xlink="http://www.w3.org/1999/xlink">make</userinput> eingegeben hätten, würde
	es nur zu dem Ziel <buildtarget>foo</buildtarget> gehen,
	gegebenenfalls <filename xmlns:xlink="http://www.w3.org/1999/xlink">foo</filename> neu kompilieren, und
	danach einfach aufhören, ohne das Ziel
	<buildtarget>install</buildtarget> zu beachten.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Beachten Sie, daß das <buildtarget>install</buildtarget>-Ziel
	von nichts anderem abhängt! Dies bedeutet, daß der
	Befehl in der nachfolgenden Zeile immer ausgeführt wird,
	wenn wir dieses Ziel mittels <userinput xmlns:xlink="http://www.w3.org/1999/xlink">make
	install</userinput> aufrufen. In diesem Fall wird die Datei
	<filename xmlns:xlink="http://www.w3.org/1999/xlink">foo</filename> in das Heimatverzeichnis des
	Benutzers kopiert. Diese Vorgehensweise wird häufig bei
	makefiles von Anwendungen benutzt, damit die Anwendung nach
	erfolgreicher Kompilierung in das richtige Verzeichnis
	installiert werden kann.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Dieser Teil ist etwas schwierig zu erklären. Wenn
	Sie immer noch nicht so richtig verstanden haben, wie
	<command xmlns:xlink="http://www.w3.org/1999/xlink">make</command> funktioniert, wäre es das Beste,
	sie erstellen sich selber ein einfaches Programm wie
	<quote xmlns:xlink="http://www.w3.org/1999/xlink">hello world</quote> und eine make Datei wie die weiter
	oben angegebene, und experimentieren damit selber ein bißchen
	herum. Als nächstes könnten Sie mehrere
	Quelltextdateien verwenden, oder in Ihrer Quelltextdatei eine
	Header-Datei includen. Der Befehl <command xmlns:xlink="http://www.w3.org/1999/xlink">touch</command> ist
	an dieser Stelle ganz hilfreich&#8212;er verändert das
	Datum einer Datei, ohne das Sie diese extra editieren
	müssen.</para>
    </sect2>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Make und include-Dateien</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">C-Code beginnt häufig mit einer Liste von Dateien,
	die included werden sollen, zum Beispiel stdio.h. Manche
	dieser Dateien sind include-Dateien des Systems, andere
	gehören zum aktuellen Projekt, an dem Sie gerade
	arbeiten:</para>

      <programlisting xmlns:xlink="http://www.w3.org/1999/xlink">#include &lt;stdio.h&gt;
#include "foo.h"

int main(....</programlisting>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Um sicherzustellen, daß diese Datei neu kompiliert
	wird, wenn <filename xmlns:xlink="http://www.w3.org/1999/xlink">foo.h</filename> verändert wurde,
	müssen Sie diese Datei Ihrem
	<filename xmlns:xlink="http://www.w3.org/1999/xlink">Makefile</filename> hinzufügen:</para>

      <programlisting xmlns:xlink="http://www.w3.org/1999/xlink">foo: foo.c foo.h</programlisting>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Sobald Ihr Projekt größer wird und Sie mehr
	und mehr eigene include-Dateien verwalten müssen wird es
	nur noch sehr schwer möglich sein, die Übersicht
	über alle include-Dateien und Dateien, die von diesen
	abhängen, beizubehalten. Falls Sie eine include-Datei
	verändern, jedoch das erneute Kompilieren aller Dateien,
	die von dieser Datei abhängen, vergessen, werden die
	Folgen verheerend sein. Der <command xmlns:xlink="http://www.w3.org/1999/xlink">gcc</command> besitzt
	eine Option, bei der er Ihre Dateien analysiert und eine Liste
	aller include-Dateien und deren Abhängigkeiten erstellt:
	<option xmlns:xlink="http://www.w3.org/1999/xlink">-MM</option>.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Wenn Sie das Folgende zu Ihrem Makefile
	hinzufügen:</para>

      <programlisting xmlns:xlink="http://www.w3.org/1999/xlink">depend:
	gcc -E -MM *.c &gt; .depend</programlisting>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">und <userinput xmlns:xlink="http://www.w3.org/1999/xlink">make depend</userinput> ausführen,
	wird die Datei <filename xmlns:xlink="http://www.w3.org/1999/xlink">.depend</filename> mit einer Liste
	von Objekt-Dateien, C-Dateien und den include-Dateien
	auftauchen:</para>

      <programlisting xmlns:xlink="http://www.w3.org/1999/xlink">foo.o: foo.c foo.h</programlisting>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Falls Sie <filename xmlns:xlink="http://www.w3.org/1999/xlink">foo.h</filename> verändern
	werden beim nächsten Aufruf von <command xmlns:xlink="http://www.w3.org/1999/xlink">make</command>
	alle Dateien, die von <filename xmlns:xlink="http://www.w3.org/1999/xlink">foo.h</filename>
	abhängen, neu kompiliert.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Vergessen Sie nicht jedes mal
	<command xmlns:xlink="http://www.w3.org/1999/xlink">make depend</command> aufzurufen, wenn Sie eine
	include-Datei zu einer Ihrer Dateien hinzugefügt
	haben.</para>
    </sect2>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">FreeBSD Makefiles</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Makefiles können eher schwierig zu schreiben sein.
	Glücklicherweise kommen BSD-basierende Systeme wie
	FreeBSD mit einigen sehr mächtigen solcher Dateien als
	Teil des Systems daher. Ein sehr gutes Beispiel dafür ist
	das FreeBSD Portssystem. Hier ist der grundlegende Teil eines
	typischen <filename xmlns:xlink="http://www.w3.org/1999/xlink">Makefile</filename>s des
	Portssystems:</para>

      <programlisting xmlns:xlink="http://www.w3.org/1999/xlink">MASTER_SITES=   ftp://freefall.cdrom.com/pub/FreeBSD/LOCAL_PORTS/
DISTFILES=      scheme-microcode+dist-7.3-freebsd.tgz

.include &lt;bsd.port.mk&gt;</programlisting>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Wenn wir jetzt in das Verzeichnis dieses Ports wechseln
	und <userinput xmlns:xlink="http://www.w3.org/1999/xlink">make</userinput> aufrufen, passiert das
	Folgende:</para>

      <procedure xmlns:xlink="http://www.w3.org/1999/xlink">
	<step xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Es wird überprüft, ob sich der Quelltext
	    für diesen Port bereits auf Ihrem System
	    befindet.</para>
	</step>

	<step xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Falls dies nicht der Fall ist wird eine
	    FTP-Verbindung zu der URL in <symbol xmlns:xlink="http://www.w3.org/1999/xlink">MASTER_SITES</symbol>
	    aufgebaut und der Quelltext heruntergeladen.</para>
	</step>

	<step xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Die Checksumme für den Quelltext wird berechnet
	    und mit der schon bekannten und für sicher und gut
	    empfundenen verglichen. Damit wird sichergestellt,
	    daß der Quelltext bei der Übertragung nicht
	    beschädigt wurde.</para>
	</step>

	<step xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Sämtliche Anpassungen, die nötig sind,
	    damit der Quelltext unter FreeBSD funktioniert, werden
	    vorgenommen&#8212;dieser Vorgang wird auch
	    <firstterm xmlns:xlink="http://www.w3.org/1999/xlink">patchen</firstterm> genannt.</para>
	</step>

	<step xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Alle speziellen Konfigurationen, die am Quelltext
	    nötig sind, werden vorgenommen. (Viele <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark>
	    Programmdistributionen versuchen herauszufinden, auf
	    welcher <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark>-Version sie kompiliert werden sollen und
	    welche optionalen <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark>-Features vorhanden sind&#8212;an
	    dieser Stelle erhalten sie die Informationen im FreeBSD
	    Ports Szenario).</para>
	</step>

	<step xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Der Quelltext für das Programm wird kompiliert.
	    Im Endeffekt wechseln wir in das Verzeichnis, in das der
	    Quelltext entpackt wurde, und rufen
	    <command xmlns:xlink="http://www.w3.org/1999/xlink">make</command> auf&#8212;die eigene make-Datei
	    des Programms besitzt die nötigen Informationen um
	    dieses zu bauen.</para>
	</step>

	<step xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Wir haben jetzt eine kompilierte Version des
	    Programmes. Wenn wir wollen können wir dieses jetzt
	    testen; wenn wir überzeugt vom Programm sind,
	    können wir <userinput xmlns:xlink="http://www.w3.org/1999/xlink">make install</userinput>
	    eingeben. Dadurch werden das Programm sowie alle
	    zugehörigen Dateien an die richtige Stelle kopiert;
	    es wird auch ein Eintrag in der
	    <database xmlns:xlink="http://www.w3.org/1999/xlink">Paketdatenbank</database> erzeugt, sodaß
	    der Port sehr einfach wieder deinstalliert werden kann,
	    falls wir unsere Meinung über dieses geändert
	    haben.</para>
	</step>
      </procedure>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Ich glaube jetzt werden Sie mit mir übereinstimmen,
	daß dies ziemlich eindrucksvoll für ein Skript mit
	vier Zeilen ist!</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Das Geheimnis liegt in der letzten Zeile, die
	<command xmlns:xlink="http://www.w3.org/1999/xlink">make</command> anweist, in das makefile des Systems
	mit dem Namen <filename xmlns:xlink="http://www.w3.org/1999/xlink">bsd.port.mk</filename> zu sehen. Man
	kann diese Zeile zwar leicht übersehen, aber hierher
	kommt all das klevere Zeugs&#8212;jemand hat ein makefile
	geschrieben, welches <command xmlns:xlink="http://www.w3.org/1999/xlink">make</command> anweist, alle
	weiter oben beschriebenen Schritte durchzuführen (neben
	vielen weiteren Dingen, die ich nicht angesprochen habe,
	einschließlich der Behandlung sämtlicher Fehler,
	die auftreten könnten) und jeder kann darauf
	zurückgreifen, indem er eine einzige Zeile in seine
	eigene make-Datei einfügt!</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Falls Sie einen Blick in die makefiles des Systems werfen
	möchten, finden Sie diese in
	<filename xmlns:xlink="http://www.w3.org/1999/xlink">/usr/share/mk</filename>. Es ist aber wahrscheinlich
	besser, wenn Sie damit noch warten, bis Sie ein bißchen mehr
	Praxiserfahrung mit makefiles gesammelt haben, da die dortigen
	makefiles sehr kompliziert sind (und wenn Sie sich diese
	ansehen sollten Sie besser eine Kanne starken Kaffee
	griffbereit haben!)</para>
    </sect2>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Fortgeschrittene Verwendung von
	<command xmlns:xlink="http://www.w3.org/1999/xlink">make</command></title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink"><command xmlns:xlink="http://www.w3.org/1999/xlink">Make</command> ist ein sehr mächtiges
	Werkzeug und kann noch sehr viel mehr als die gezeigten
	einfachen Beispiele weiter oben. Bedauerlicherweise gibt es
	mehrere verschiedene Versionen von <command xmlns:xlink="http://www.w3.org/1999/xlink">make</command>,
	und sie alle unterscheiden sich beträchtlich voneinander.
	Der beste Weg herauszufinden was sie können ist
	wahrscheinlich deren Dokumentation zu lesen&#8212;hoffentlich
	hat diese Einführung Ihnen genügend Grundkenntnisse
	vermitteln können, damit Sie dies tun können.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Die Version von make, die in FreeBSD enthalten ist, ist
	<application xmlns:xlink="http://www.w3.org/1999/xlink">Berkeley make</application>; es gibt eine
	Anleitung dazu in
	<filename xmlns:xlink="http://www.w3.org/1999/xlink">/usr/share/doc/psd/12.make</filename>. Um sich diese
	anzusehen, müssen Sie</para>

      <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">zmore paper.ascii.gz</userinput></screen>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">in diesem Verzeichnis ausführen.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Viele Anwendungen in den Ports verwenden
	<application xmlns:xlink="http://www.w3.org/1999/xlink">GNU make</application>, welches einen sehr guten
	Satz an <quote xmlns:xlink="http://www.w3.org/1999/xlink">info</quote>-Seiten mitbringt. Falls Sie
	irgendeinen dieser Ports installiert haben wurde
	<application xmlns:xlink="http://www.w3.org/1999/xlink">GNU make</application> automatisch als
	<command xmlns:xlink="http://www.w3.org/1999/xlink">gmake</command> mit installiert. Es ist auch als
	eigenständiger Port und Paket verfügbar.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Um sich die Info-Seiten für
	<application xmlns:xlink="http://www.w3.org/1999/xlink">GNU make</application> anzusehen müssen Sie
	die Datei <filename xmlns:xlink="http://www.w3.org/1999/xlink">dir</filename> in
	<filename xmlns:xlink="http://www.w3.org/1999/xlink">/usr/local/info</filename> um einen entsprechenden
	Eintrag erweitern. Dies beinhaltet das Einfügen einer
	Zeile wie</para>

      <programlisting xmlns:xlink="http://www.w3.org/1999/xlink"> * Make: (make).                 The GNU Make utility.</programlisting>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">in die Datei. Nachdem Sie dies getan haben können
	Sie <userinput xmlns:xlink="http://www.w3.org/1999/xlink">info</userinput> eingeben und dann den
	Menüeintrag <guimenuitem xmlns:xlink="http://www.w3.org/1999/xlink">make</guimenuitem>
	auswählen (oder Sie können in
	<application xmlns:xlink="http://www.w3.org/1999/xlink">Emacs</application> die Tastenkombination
	<userinput xmlns:xlink="http://www.w3.org/1999/xlink">C-h i</userinput> verwenden).</para>
    </sect2>
  </sect1>

  <sect1 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="debugging">
    <title xmlns:xlink="http://www.w3.org/1999/xlink">Debuggen</title>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Der Debugger</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Der Debugger bei FreeBSD heißt
	<command xmlns:xlink="http://www.w3.org/1999/xlink">gdb</command> (<application xmlns:xlink="http://www.w3.org/1999/xlink">GNU
	debugger</application>). Sie können Ihn durch die Eingabe
	von</para>

      <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">gdb progname</userinput></screen>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">starten, wobei viele Leute ihn vorzugsweise
	innerhalb von <application xmlns:xlink="http://www.w3.org/1999/xlink">Emacs</application> aufrufen. Sie
	erreichen dies durch die Eingabe von:</para>

      <screen xmlns:xlink="http://www.w3.org/1999/xlink"><userinput xmlns:xlink="http://www.w3.org/1999/xlink">M-x gdb RET progname RET</userinput></screen>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Die Verwendung eines Debuggers erlaubt Ihnen Ihr
	Programm unter kontrollierteren Bedingungen ausführen zu
	können. Typischerweise können Sie so Zeile für
	Zeile durch Ihr Programm gehen, die Werte von Variablen
	untersuchen, diese verändern, dem Debugger sagen er soll
	das Programm bis zu einem bestimmten Punkt ausführen und
	dann anhalten, und so weiter und so fort. Sie können
	damit sogar ein schon laufendes Programm untersuchen, oder
	eine Datei mit einem Kernspeicherabbild laden um
	herauszufinden, warum das Programm abgestürzt ist. Es ist
	sogar möglich damit den Kernel zu debuggen, wobei dies
	etwas trickreicher als bei den Benutzeranwendungen ist, welche
	wir in diesem Abschnitt behandeln werden.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Der <command xmlns:xlink="http://www.w3.org/1999/xlink">gdb</command> besitzt eine recht gute
	Online-Hilfe, sowie einen Satz von Info-Seiten, weshalb sich
	dieser Abschnitt auf ein paar grundlegende Befehle
	beschränken wird.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Falls Sie den textbasierten Kommandozeilen-Stil
	abstoßend finden gibt es ein graphisches Front-End
	dafür (<package xmlns:xlink="http://www.w3.org/1999/xlink">devel/xxgdb</package>) in der Ports-Sammlung.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Dieser Abschnitt ist als Einführung in die
	Verwendung des <command xmlns:xlink="http://www.w3.org/1999/xlink">gdb</command> gedacht und beinhaltet
	nicht spezielle Themen wie das Debuggen des Kernels.</para>
    </sect2>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Ein Programm im Debugger ausführen</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Sie müssen das Programm mit der Option
	<option xmlns:xlink="http://www.w3.org/1999/xlink">-g</option> kompiliert haben um den
	<command xmlns:xlink="http://www.w3.org/1999/xlink">gdb</command> effektiv einsetzen zu können. Es
	geht auch ohne diese Option, allerdings werden Sie dann nur
	den Namen der Funktion sehen, in der Sie sich gerade befinden,
	anstatt direkt den zugehörigen Quelltext. Falls Sie eine
	Meldung wie die folgende sehen:</para>

      <screen xmlns:xlink="http://www.w3.org/1999/xlink">&#8230; (no debugging symbols found) &#8230;</screen>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">wenn der <command xmlns:xlink="http://www.w3.org/1999/xlink">gdb</command> gestartet wird, dann
	wissen Sie, daß das Programm nicht mit der Option
	<option xmlns:xlink="http://www.w3.org/1999/xlink">-g</option> kompiliert wurde.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Geben Sie in der Eingabeaufforderung des
	<command xmlns:xlink="http://www.w3.org/1999/xlink">gdb</command> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">break main</userinput> ein.
	Dies weist den Debugger an, dass Sie nicht daran interessiert sind,
	den einleitenden Schritten beim Programmstart zuzusehen und dass
	am Anfang Ihres Codes die Ausführung beginnen soll.  Geben Sie
	nun <userinput xmlns:xlink="http://www.w3.org/1999/xlink">run</userinput> ein, um das Programm zu starten -
	es wird starten und beim Aufruf von <function xmlns:xlink="http://www.w3.org/1999/xlink">main()</function> vom
	Debugger angehalten werden. (Falls Sie sich jemals gewundert haben von
	welcher Stelle <function xmlns:xlink="http://www.w3.org/1999/xlink">main()</function> aufgerufen wird, dann
	wissen Sie es jetzt!).</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Sie können nun Schritt für Schritt durch Ihr
	Programm gehen, indem Sie <command xmlns:xlink="http://www.w3.org/1999/xlink">n</command> drücken.
	Wenn Sie zu einem Funktionsaufruf kommen können Sie diese
	Funktion durch drücken von <command xmlns:xlink="http://www.w3.org/1999/xlink">s</command> betreten.
	Sobald Sie sich in einem Funktionsaufruf befinden können
	Sie diesen durch drücken von <command xmlns:xlink="http://www.w3.org/1999/xlink">f</command> wieder
	verlassen. Sie können auch <command xmlns:xlink="http://www.w3.org/1999/xlink">up</command> und
	<command xmlns:xlink="http://www.w3.org/1999/xlink">down</command> verwenden, um sich schnell den
	Aufrufer einer Funktion anzusehen.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Hier ist ein einfaches Beispiel, wie man mit Hilfe des
	<command xmlns:xlink="http://www.w3.org/1999/xlink">gdb</command> einen Fehler in einem Programm findet.
	Dies ist unser eigenes Programm (mit einem absichtlich
	eingebauten Fehler):</para>

      <programlisting xmlns:xlink="http://www.w3.org/1999/xlink">#include &lt;stdio.h&gt;

int bazz(int anint);

main() {
	int i;

	printf("This is my program\n");
	bazz(i);
	return 0;
}

int bazz(int anint) {
	printf("You gave me %d\n", anint);
	return anint;
}</programlisting>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Dieses Programm setzt <symbol xmlns:xlink="http://www.w3.org/1999/xlink">i</symbol> auf den Wert
	<literal xmlns:xlink="http://www.w3.org/1999/xlink">5</literal> und übergibt dies einer Funktion
	<function xmlns:xlink="http://www.w3.org/1999/xlink">bazz()</function>, welche den Wert ausgibt, den Sie
	von uns erhalten hat.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Wenn wir das Programm kompilieren und ausführen
	erhalten wir</para>

      <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">cc -g -o temp temp.c</userinput>
<prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">./temp</userinput>
This is my program
anint = 4231</screen>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Das ist nicht was wir erwartet hatten! Es ist Zeit,
	daß wir sehen was hier passiert!</para>

      <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">gdb temp</userinput>
GDB is free software and you are welcome to distribute copies of it
 under certain conditions; type "show copying" to see the conditions.
There is absolutely no warranty for GDB; type "show warranty" for details.
GDB 4.13 (i386-unknown-freebsd), Copyright 1994 Free Software Foundation, Inc.
(gdb) <userinput xmlns:xlink="http://www.w3.org/1999/xlink">break main</userinput>				<lineannotation xmlns:xlink="http://www.w3.org/1999/xlink">Skip the set-up code</lineannotation>
Breakpoint 1 at 0x160f: file temp.c, line 9.	<lineannotation xmlns:xlink="http://www.w3.org/1999/xlink">gdb puts breakpoint at main()</lineannotation>
(gdb) <userinput xmlns:xlink="http://www.w3.org/1999/xlink">run</userinput>					<lineannotation xmlns:xlink="http://www.w3.org/1999/xlink">Run as far as main()</lineannotation>
Starting program: /home/james/tmp/temp		<lineannotation xmlns:xlink="http://www.w3.org/1999/xlink">Program starts running</lineannotation>

Breakpoint 1, main () at temp.c:9		<lineannotation xmlns:xlink="http://www.w3.org/1999/xlink">gdb stops at main()</lineannotation>
(gdb) <userinput xmlns:xlink="http://www.w3.org/1999/xlink">n</userinput>						<lineannotation xmlns:xlink="http://www.w3.org/1999/xlink">Go to next line</lineannotation>
This is my program				<lineannotation xmlns:xlink="http://www.w3.org/1999/xlink">Program prints out</lineannotation>
(gdb) <userinput xmlns:xlink="http://www.w3.org/1999/xlink">s</userinput>						<lineannotation xmlns:xlink="http://www.w3.org/1999/xlink">step into bazz()</lineannotation>
bazz (anint=4231) at temp.c:17			<lineannotation xmlns:xlink="http://www.w3.org/1999/xlink">gdb displays stack frame</lineannotation>
(gdb)</screen>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Halt mal! Wieso hat denn <symbol xmlns:xlink="http://www.w3.org/1999/xlink">anint</symbol> den Wert
	<literal xmlns:xlink="http://www.w3.org/1999/xlink">4231</literal>? Haben wir dieser Variablen nicht in
	<function xmlns:xlink="http://www.w3.org/1999/xlink">main()</function> den Wert <literal xmlns:xlink="http://www.w3.org/1999/xlink">5</literal>
	zugewiesen? Gehen wir mal zurück zu
	<function xmlns:xlink="http://www.w3.org/1999/xlink">main()</function> und schauen dort nach.</para>

      <screen xmlns:xlink="http://www.w3.org/1999/xlink">(gdb) <userinput xmlns:xlink="http://www.w3.org/1999/xlink">up</userinput>					<lineannotation xmlns:xlink="http://www.w3.org/1999/xlink">Move up call stack</lineannotation>
#1  0x1625 in main () at temp.c:11		<lineannotation xmlns:xlink="http://www.w3.org/1999/xlink">gdb displays stack frame</lineannotation>
(gdb) <userinput xmlns:xlink="http://www.w3.org/1999/xlink">p i</userinput>					<lineannotation xmlns:xlink="http://www.w3.org/1999/xlink">Show us the value of i</lineannotation>
$1 = 4231					<lineannotation xmlns:xlink="http://www.w3.org/1999/xlink">gdb displays 4231</lineannotation></screen>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Oh! Anscheinend haben wir vergessen <symbol xmlns:xlink="http://www.w3.org/1999/xlink">i</symbol> zu
	initialisieren. Wir wollten eigentlich</para>

      <programlisting xmlns:xlink="http://www.w3.org/1999/xlink"><lineannotation xmlns:xlink="http://www.w3.org/1999/xlink">&#8230;</lineannotation>
main() {
	int i;

	i = 5;
	printf("This is my program\n");
<lineannotation xmlns:xlink="http://www.w3.org/1999/xlink">&#8230;</lineannotation></programlisting>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">schreiben, haben aber die Zeile mit
	<literal xmlns:xlink="http://www.w3.org/1999/xlink">i=5;</literal> vergessen. Da wir <symbol xmlns:xlink="http://www.w3.org/1999/xlink">i</symbol>
	nicht initialisiert haben hatte diese Variable gerade den
	Wert, der in dem ihr zugewiesenen Speicherbereich stand als
	wir das Programm gestartet haben, welcher in diesem Fall
	<literal xmlns:xlink="http://www.w3.org/1999/xlink">4231</literal> war.</para>

      <note xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Der <command xmlns:xlink="http://www.w3.org/1999/xlink">gdb</command> zeigt jedes mal, wenn wir
	  eine Funktion betreten oder verlassen, den Inhalt des
	  Stack-Rahmens an, selbst wenn wir uns mit
	  <command xmlns:xlink="http://www.w3.org/1999/xlink">up</command> und <command xmlns:xlink="http://www.w3.org/1999/xlink">down</command> im
	  Aufruf-Stack umher bewegen. Dabei wird der Name der Funktion
	  sowie der übergebenen Argumente angezeigt, was uns
	  dabei hilft, die Übersicht zu behalten. (Der Stack ist
	  ein Speicherbereich, in dem ein Programm Informationen
	  über die an eine Funktion übergebenen Argumente
	  ablegt, sowie die Rücksprungadresse eines
	  Funktionsaufrufes).</para>
      </note>
    </sect2>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Eine Kernspeicherdatei untersuchen</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Eine Kernspeicherdatei ist im Prinzip eine Datei, die den
	vollständigen Zustand eines Prozesses enthält, als
	dieses abgestürzt ist. In <quote xmlns:xlink="http://www.w3.org/1999/xlink">den guten alten
	Zeiten</quote> mußten Programmierer hexadezimale Listen
	der Kernspeicherdatei ausdrucken und über
	Maschinencodehandbüchern schwitzen, aber heutzutage ist
	das Leben etwas einfacher geworden. Zufälligerweise wird
	die Kernspeicherdatei unter FreeBSD und anderen
	4.4BSD-Systemen
	<filename xmlns:xlink="http://www.w3.org/1999/xlink">progname.core</filename>
	anstatt einfach nur <filename xmlns:xlink="http://www.w3.org/1999/xlink">core</filename> genannt, um
	deutlich zu machen, zu welchem Programm eine Kernspeicherdatei
	gehört.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Um eine Kernspeicherdatei zu untersuchen müssen Sie
	den <command xmlns:xlink="http://www.w3.org/1999/xlink">gdb</command> wie gewohnt starten. An Stelle von
	<command xmlns:xlink="http://www.w3.org/1999/xlink">break</command> oder <command xmlns:xlink="http://www.w3.org/1999/xlink">run</command>
	müssen Sie das Folgende eingeben</para>

      <screen xmlns:xlink="http://www.w3.org/1999/xlink">(gdb) <userinput xmlns:xlink="http://www.w3.org/1999/xlink">core progname.core</userinput></screen>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Wenn Sie sich nicht in demselben Verzeichnis befinden wie
	die Kernspeicherdatei müssen Sie zuerst <userinput xmlns:xlink="http://www.w3.org/1999/xlink">dir
	/path/to/core/file</userinput> eingeben.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Sie sollten dann etwas wie folgt sehen:</para>

      <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">gdb a.out</userinput>
GDB is free software and you are welcome to distribute copies of it
 under certain conditions; type "show copying" to see the conditions.
There is absolutely no warranty for GDB; type "show warranty" for details.
GDB 4.13 (i386-unknown-freebsd), Copyright 1994 Free Software Foundation, Inc.
(gdb) <userinput xmlns:xlink="http://www.w3.org/1999/xlink">core a.out.core</userinput>
Core was generated by `a.out'.
Program terminated with signal 11, Segmentation fault.
Cannot access memory at address 0x7020796d.
#0  0x164a in bazz (anint=0x5) at temp.c:17
(gdb)</screen>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">In diesem Fall hieß das Programm
	<filename xmlns:xlink="http://www.w3.org/1999/xlink">a.out</filename>, weshalb die Kernspeicherdatei den
	Namen <filename xmlns:xlink="http://www.w3.org/1999/xlink">a.out.core</filename> trägt. Wie wir
	sehen können stürzte das Programm in einer Funktion
	namens <function xmlns:xlink="http://www.w3.org/1999/xlink">bazz</function> ab, als es versuchte auf
	einen Speicherbereich zuzugreifen, der dem Programm nicht zur
	Verfügung stand.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Manchmal ist es ganz nützlich zu sehen, wie eine
	Funktion aufgerufen wurde, da bei komplexen Programmen das
	eigentliche Problem schon sehr viel weiter oben auf dem
	Aufruf-Stack aufgetreten sein könnte. Der Befehl
	<command xmlns:xlink="http://www.w3.org/1999/xlink">bt</command> veranlaßt den
	<command xmlns:xlink="http://www.w3.org/1999/xlink">gdb</command> dazu, einen Backtrace des Aufruf-Stacks
	auszugeben:</para>

      <screen xmlns:xlink="http://www.w3.org/1999/xlink">(gdb) <userinput xmlns:xlink="http://www.w3.org/1999/xlink">bt</userinput>
#0  0x164a in bazz (anint=0x5) at temp.c:17
#1  0xefbfd888 in end ()
#2  0x162c in main () at temp.c:11
(gdb)</screen>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Die Funktion <function xmlns:xlink="http://www.w3.org/1999/xlink">end()</function> wird aufgerufen,
	wenn ein Programm abstürzt; in diesem Fall wurde die
	Funktion <function xmlns:xlink="http://www.w3.org/1999/xlink">bazz()</function> aus der
	<function xmlns:xlink="http://www.w3.org/1999/xlink">main()</function>-Funktion heraus aufgerufen.</para>
    </sect2>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Ein bereits laufendes Programm untersuchen</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Eine der tollsten Features des <command xmlns:xlink="http://www.w3.org/1999/xlink">gdb</command>
	ist die Möglichkeit, damit bereits laufende Programme zu
	untersuchen. Dies bedeutet natürlich, daß Sie die
	erforderlichen Rechte dafür besitzen. Ein häufig
	auftretendes Problem ist das Untersuchen eines Programmes,
	welches sich selber forkt. Vielleicht will man den Kindprozess
	untersuchen, aber der Debugger erlaubt einem nur den Zugriff
	auf den Elternprozess.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Was Sie an solch einer Stelle machen ist, Sie starten
	einen weiteren <command xmlns:xlink="http://www.w3.org/1999/xlink">gdb</command>, ermitteln mit Hilfe von
	<command xmlns:xlink="http://www.w3.org/1999/xlink">ps</command> die Prozess-ID des Kindprozesses, und
	geben</para>

      <screen xmlns:xlink="http://www.w3.org/1999/xlink">(gdb) <userinput xmlns:xlink="http://www.w3.org/1999/xlink">attach pid</userinput></screen>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">im <command xmlns:xlink="http://www.w3.org/1999/xlink">gdb</command> ein, und können dann wie
	üblich mit der Fehlersuche fortfahren.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink"><quote xmlns:xlink="http://www.w3.org/1999/xlink">Das ist zwar alles sehr schön,</quote> werden
	Sie jetzt vielleicht denken, <quote xmlns:xlink="http://www.w3.org/1999/xlink">aber in der Zeit, in der
	ich diese Schritte durchführe, ist der Kindprozess schon
	längst über alle Berge</quote>. Fürchtet euch
	nicht, edler Leser, denn Ihr müßt wie folgt
	vorgehen (freundlicherweise zur Verfügung gestellt von
	den Info-Seite des <command xmlns:xlink="http://www.w3.org/1999/xlink">gdb</command>):</para>

      <screen xmlns:xlink="http://www.w3.org/1999/xlink"><lineannotation xmlns:xlink="http://www.w3.org/1999/xlink">&#8230;</lineannotation>
if ((pid = fork()) &lt; 0)		/* _Always_ check this */
	error();
else if (pid == 0) {		/* child */
	int PauseMode = 1;

	while (PauseMode)
		sleep(10);	/* Wait until someone attaches to us */
	<lineannotation xmlns:xlink="http://www.w3.org/1999/xlink">&#8230;</lineannotation>
} else {			/* parent */
	<lineannotation xmlns:xlink="http://www.w3.org/1999/xlink">&#8230;</lineannotation></screen>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Alles was Sie jetzt noch tun müssen ist, sich an
	den Kindprozess ranzuhängen, <symbol xmlns:xlink="http://www.w3.org/1999/xlink">PauseMode</symbol>
	auf <literal xmlns:xlink="http://www.w3.org/1999/xlink">0</literal> zu setzen und auf den
	<function xmlns:xlink="http://www.w3.org/1999/xlink">sleep()</function> Funktionsaufruf zu warten, um
	zurückzukehren!</para>
    </sect2>
  </sect1>

  <sect1 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="emacs">
    <title xmlns:xlink="http://www.w3.org/1999/xlink">Emacs als Entwicklungsumgebung verwenden</title>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Emacs</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Leider werden <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark>-Systeme nicht mit einem
	alles-was-du-jemals-brauchst-und-vieles-mehr-megapaket an
	integrierten Entwicklungsumgebungen ausgestattet, die bei
	anderen Systemen dabei sind.

	<footnote xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Es gibt jetzt einige mächtige und freie IDEs in
	    der Ports-Sammlung wie etwa KDevelop.</para>
	</footnote>

	Trotzdem ist es möglich, seine eigene
	Entwicklungsumgebung aufzusetzen. Diese wird vielleicht nicht
	so hübsch und integriert sein, aber dafür
	können Sie sie Ihren eigenen Wünschen anpassen. Und
	sie ist frei. Und Sie haben die Quelltexte davon.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Der Schlüssel zu all dem ist Emacs. Es gibt zwar ein
	paar Leute die ihn hassen, es gibt jedoch auch viele die ihn
	lieben. Falls Sie zu ersteren gehören befürchte ich,
	daß dieser Abschnitt Ihnen wenig interessantes zu bieten
	hat. Des weiteren benötigen Sie eine angemessene Menge an
	freiem Speicher, um ihn zu benutzen&#8212;ich würde 8MB
	für den Textmodus und 16MB unter X als absolutes Minimum
	empfehlen, um eine halbwegs brauchbare Performance zu
	erhalten.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Emacs ist im Prinzip ein extrem anpassbarer Editor&#8212;
	in der Tat ist er so stark veränderbar, daß er eher
	einem Betriebssystem als einem Editor gleicht! Viele
	Entwickler und Systemadministratoren erledigen praktisch ihre
	gesamte Arbeit aus Emacs heraus und beenden ihn nur, um sich
	komplett auszuloggen.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Es ist nicht einmal möglich alles hier
	zusammenzufassen, was man mit dem Emacs machen kann. Im
	Folgenden werden einige Features aufgelistet, die für
	einen Entwickler interessant sein könnten:</para>

      <itemizedlist xmlns:xlink="http://www.w3.org/1999/xlink">
	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Sehr mächtiger Editor, der suchen-und-ersetzen
	    mit Zeichenfolgen und regulären Ausdrücken
	    (Pattern) sowie das direkte Anspringen von Anfang/Ende von
	    Blockausdrücken erlaubt, etc, etc.</para>
	</listitem>

	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Pull-Down Menüs und eine Online-Hilfe.</para>
	</listitem>

	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Sprachunabhängige Syntaxhervorhebung und
	    automatische Einrückung.</para>
	</listitem>

	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Vollständig konfigurierbar.</para>
	</listitem>

	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Sie können Programme im Emacs kompilieren und
	    debuggen.</para>
	</listitem>

	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Bei Kompilationsfehlern können Sie direkt zu der
	    entsprechenden Zeile im Quelltext springen.</para>
	</listitem>

	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Benutzerfreundliches Front-End für das
	    <command xmlns:xlink="http://www.w3.org/1999/xlink">info</command>-Programm, um die GNU Hypertext
	    Dokumentation inklusive der Dokumentation des Emacs
	    selber.</para>
	</listitem>

	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Benutzerfreundliches Front-End für den
	    <command xmlns:xlink="http://www.w3.org/1999/xlink">gdb</command> um sich beim Verfolgen der
	    Programmanweisungen den zugehörigen Quelltext
	    anzeigen zu lassen.</para>
	</listitem>

	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Sie können E-Mails und News im Usenet lesen,
	    während ihr Programm kompiliert wird.</para>
	</listitem>
      </itemizedlist>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Und zweifelsfrei viele weitere Punkte, die ich
	übersehen habe.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Emacs kann unter FreeBSD über den	<package xmlns:xlink="http://www.w3.org/1999/xlink">editors/emacs</package> Port installiert werden.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Sobald er installiert ist starten Sie ihn, und geben
	dann <userinput xmlns:xlink="http://www.w3.org/1999/xlink">C-h t</userinput> ein, um die Einführung
	in Emacs zu lesen&#8212;d.h. Sie sollen bei gedrückter
	<keycap xmlns:xlink="http://www.w3.org/1999/xlink">Strg</keycap>-Taste die <keycap xmlns:xlink="http://www.w3.org/1999/xlink">h</keycap>-Taste
	drücken, beide wieder loslassen und anschließend
	<keycap xmlns:xlink="http://www.w3.org/1999/xlink">t</keycap> drücken. (Alternativ können Sie
	mit der Maus den Eintrag <guimenuitem xmlns:xlink="http://www.w3.org/1999/xlink">Emacs
	Tutorial</guimenuitem> aus dem
	<guimenu xmlns:xlink="http://www.w3.org/1999/xlink">Hilfe</guimenu>-Menü auswählen).</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Obwohl der Emacs Menüs besitzt ist das Erlernen der
	Tastaturkombinationen lohnenswert, da man beim Editieren sehr
	viel schneller Tastenkombinationen eingeben kann, als die Maus
	zu finden und mit dieser dann an der richtigen Stelle zu
	klicken. Und wenn Sie sich mit erfahrenen Emacs-Benutzern
	unterhalten werden Sie feststellen, daß diese
	häufig nebenbei Ausdrücke wie <quote xmlns:xlink="http://www.w3.org/1999/xlink"><literal xmlns:xlink="http://www.w3.org/1999/xlink">M-x
	replace-s RET foo RET bar RET</literal></quote> verwenden,
	weshalb das Erlernen dieser sehr nützlich ist. Und Emacs
	hat auf jeden Fall weit mehr nützliche Funktionen als das
	diese in der Menüleiste unterzubringen wären.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Zum Glück ist es sehr einfach die jeweiligen
	Tastaturkombinationen herauszubekommen, da diese direkt neben
	den Menüeinträgen stehen. Meine Empfehlung
	wäre, den Menüeintrag für, sagen wir, das
	Öffnen einer Datei zu verwenden, bis Sie die
	Funktionsweise verstanden haben und sie mit dieser vertraut
	sind, und es dann mit C-x C-f versuchen. Wenn Sie damit
	zufrieden sind, gehen Sie zum nächsten
	Menüeintrag.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Falls Sie sich nicht daran erinnern können, was eine
	bestimmte Tastenkombination macht, wählen Sie
	<guimenuitem xmlns:xlink="http://www.w3.org/1999/xlink">Describe Key</guimenuitem> aus dem
	<guimenu xmlns:xlink="http://www.w3.org/1999/xlink">Hilfe</guimenu>-Menü aus und geben Sie die
	Tastenkombination ein&#8212;Emacs sagt Ihnen dann was diese
	macht. Sie können ebenfalls den Menüeintrag
	<guimenuitem xmlns:xlink="http://www.w3.org/1999/xlink">Command Apropos</guimenuitem> verwenden, um alle
	Befehle, die ein bestimmtes Wort enthalten, mit den
	zugehörigen Tastenkombinationen aufgelistet zu
	bekommen.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Übrigends bedeutet der Ausdruck weiter oben, bei
	gedrückter <keysym xmlns:xlink="http://www.w3.org/1999/xlink">Meta</keysym>-Taste <keysym xmlns:xlink="http://www.w3.org/1999/xlink">x</keysym>
	zu drücken, beide wieder loszulassen,
	<userinput xmlns:xlink="http://www.w3.org/1999/xlink">replace-s</userinput> einzugeben (Kurzversion
	für <literal xmlns:xlink="http://www.w3.org/1999/xlink">replace-string</literal>&#8212;ein weiteres
	Feature des Emacs ist, daß Sie Befehle abkürzen
	können), anschließend die
	<keysym xmlns:xlink="http://www.w3.org/1999/xlink">return</keysym>-Taste zu drücken, dann
	<userinput xmlns:xlink="http://www.w3.org/1999/xlink">foo</userinput> einzugeben (die Zeichenkette, die
	Sie ersetzen möchten), dann wieder
	<keysym xmlns:xlink="http://www.w3.org/1999/xlink">return</keysym>, dann die Leertaste zu drücken
	(die Zeichenkette, mit der Sie <literal xmlns:xlink="http://www.w3.org/1999/xlink">foo</literal> ersetzen
	möchten) und anschließend erneut
	<keysym xmlns:xlink="http://www.w3.org/1999/xlink">return</keysym> zu drücken. Emacs wird dann die
	gewünschte suchen-und-ersetzen-Operation
	ausführen.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Wenn Sie sich fragen was in aller Welt die
	<keysym xmlns:xlink="http://www.w3.org/1999/xlink">Meta</keysym>-Taste ist, das ist eine spezielle Taste
	die viele <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark>-Workstations besitzen. Bedauerlicherweise
	haben PCs keine solche Taste, und daher ist es
	üblicherweise die <keycap xmlns:xlink="http://www.w3.org/1999/xlink">alt</keycap>-Taste (oder falls
	Sie Pech haben die <keycap xmlns:xlink="http://www.w3.org/1999/xlink">Esc</keycap>-Taste).</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Oh, und um den Emacs zu verlassen müssen sie
	<command xmlns:xlink="http://www.w3.org/1999/xlink">C-x C-c</command> (das bedeutet, Sie müssen bei
	gedrückter <keysym xmlns:xlink="http://www.w3.org/1999/xlink">Strg</keysym>-Taste zuerst
	<keysym xmlns:xlink="http://www.w3.org/1999/xlink">x</keysym> und dann <keysym xmlns:xlink="http://www.w3.org/1999/xlink">c</keysym> drücken)
	eingeben. Falls Sie noch irgendwelche ungespeicherten Dateien
	offen haben wird Emacs Sie fragen ob Sie diese speichern
	wollen. (Ignorieren Sie bitte die Stelle der Dokumentation, an
	der gesagt wird, daß <command xmlns:xlink="http://www.w3.org/1999/xlink">C-z</command> der
	übliche Weg ist, Emacs zu verlassen&#8212;dadurch wird
	der Emacs in den Hintergrund geschaltet, was nur nützlich
	ist, wenn Sie an einem System ohne virtuelle Terminals
	arbeiten).</para>
    </sect2>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Emacs konfigurieren</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Emacs kann viele wundervolle Dinge; manche dieser Dinge
	sind schon eingebaut, andere müssen erst konfiguriert
	werden.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Anstelle einer proprietären Macrosprache verwendet
	der Emacs für die Konfiguration eine speziell für
	Editoren angepaßte Version von Lisp, auch bekannt als
	Emacs Lisp. Das Arbeiten mit Emacs Lisp kann sehr hilfreich
	sein, wenn Sie darauf aufbauend etwas wie Common Lisp lernen
	möchten. Emacs Lisp hat viele Features von Common Lisp
	obwohl es beträchtlich kleiner ist (und daher auch
	einfacher zu beherrschen).</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Der beste Weg um Emacs Lisp zu erlernen besteht darin,
	sich das <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ftp://ftp.gnu.org/old-gnu/emacs/elisp-manual-19-2.4.tar.gz">Emacs
	Tutorial</link> herunterzuladen.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Es ist jedoch keine Kenntnis von Lisp erforderlich, um
	mit der Konfiguration von Emacs zu beginnen, da ich eine
	beispielhafte <filename xmlns:xlink="http://www.w3.org/1999/xlink">.emacs</filename>-Datei hier
	eingefügt habe, die für den Anfang ausreichen
	sollte. Kopieren Sie diese einfach in Ihr Heimverzeichnis und
	starten Sie den Emacs neu, falls dieser bereits läuft; er
	wird die Befehle aus der Datei lesen und Ihnen (hoffentlich)
	eine brauchbare Grundeinstellung bieten.</para>
    </sect2>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Eine beispielhafte <filename xmlns:xlink="http://www.w3.org/1999/xlink">.emacs</filename>-Datei</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Bedauerlicherweise gibt es hier viel zu viel, um es im
	Detail zu erklären; es gibt jedoch ein oder zwei Punkte,
	die besonders erwähnenswert sind.</para>

      <itemizedlist xmlns:xlink="http://www.w3.org/1999/xlink">
	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Alles was mit einem <literal xmlns:xlink="http://www.w3.org/1999/xlink">;</literal> anfängt
	    ist ein Kommentar und wird von Emacs ignoriert.</para>
	</listitem>

	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">In der ersten Zeile mit
	    <literal xmlns:xlink="http://www.w3.org/1999/xlink">-*- Emacs-Lisp -*-</literal> sorgt
	    dafür, daß wir die Datei
	    <filename xmlns:xlink="http://www.w3.org/1999/xlink">.emacs</filename> in Emacs selber editieren
	    können und uns damit alle tollen Features zum
	    Editieren von Emacs Lisp zur Verfügung stehen. Emacs
	    versucht dies normalerweise anhand des Dateinamens
	    auszumachen, was vielleicht bei
	    <filename xmlns:xlink="http://www.w3.org/1999/xlink">.emacs</filename> nicht funktionieren
	    könnte.</para>
	</listitem>

	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Die <keysym xmlns:xlink="http://www.w3.org/1999/xlink">Tab</keysym>-Taste ist in manchen Modi
	    an die Einrückungsfunktion gebunden, so daß
	    beim drücken dieser Taste die aktuelle Zeile
	    eingerückt wird. Wenn Sie ein
	    <token xmlns:xlink="http://www.w3.org/1999/xlink">tab</token>-Zeichen in einen Text, welchen auch
	    immer Sie dabei schreiben, einfügen wollen,
	    müssen Sie bei gedrückter
	    <keysym xmlns:xlink="http://www.w3.org/1999/xlink">Strg</keysym>-Taste die <keysym xmlns:xlink="http://www.w3.org/1999/xlink">Tab</keysym>-Taste
	    drücken.</para>
	</listitem>

	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Diese Datei unterstützt Syntax Highlighting
	    für C, C++, Perl, Lisp und Scheme, indem die Sprache
	    anhand des Dateinamens erraten wird.</para>
	</listitem>

	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Emacs hat bereits eine vordefinierte Funktion mit dem
	    Namen <function xmlns:xlink="http://www.w3.org/1999/xlink">next-error</function>. Diese erlaubt es
	    einem, in einem Fenster mit der Kompilierungsausgabe
	    mittels <command xmlns:xlink="http://www.w3.org/1999/xlink">M-n</command> von einem zum nächsten
	    Kompilierungsfehler zu springen; wir definieren eine
	    komplementäre Funktion
	    <function xmlns:xlink="http://www.w3.org/1999/xlink">previous-error</function>, die es uns erlaubt,
	    mittels <command xmlns:xlink="http://www.w3.org/1999/xlink">M-p</command> von einem zum vorherigen
	    Kompilierungsfehler zu springen. Das schönste Feature
	    von allen ist, daß mittels <command xmlns:xlink="http://www.w3.org/1999/xlink">C-c
	    C-c</command> die Quelltextdatei, in der der Fehler
	    aufgetreten ist, geöffnet und die betreffende Zeile
	    direkt angesprungen wird.</para>
	</listitem>

	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Wir aktivieren die Möglichkeit von Emacs als
	    Server zu agieren, so daß wenn Sie etwas
	    außerhalb von Emacs machen und eine Datei editieren
	    möchten, Sie einfach das folgende eingeben
	    können</para>

	  <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">emacsclient filename</userinput>
	  </screen>

	  <para xmlns:xlink="http://www.w3.org/1999/xlink">und dann die Datei in Ihrem Emacs editieren
	    können!

	    <footnote xmlns:xlink="http://www.w3.org/1999/xlink">
	      <para xmlns:xlink="http://www.w3.org/1999/xlink">Viele Emacs-Benutzer setzen Ihre
	        <envar xmlns:xlink="http://www.w3.org/1999/xlink">EDITOR</envar>-Umgebungsvariable auf
	        <literal xmlns:xlink="http://www.w3.org/1999/xlink">emacsclient</literal>, so daß dies
	        immer passiert, wenn sie eine Datei editieren
	        müssen.</para>
	    </footnote>
	  </para>
	</listitem>
      </itemizedlist>

      <example xmlns:xlink="http://www.w3.org/1999/xlink">
	<title xmlns:xlink="http://www.w3.org/1999/xlink">Eine einfache <filename xmlns:xlink="http://www.w3.org/1999/xlink">.emacs</filename>-Datei</title>

	<programlisting xmlns:xlink="http://www.w3.org/1999/xlink">;; -*-Emacs-Lisp-*-

;; This file is designed to be re-evaled; use the variable first-time
;; to avoid any problems with this.
(defvar first-time t
  "Flag signifying this is the first time that .emacs has been evaled")

;; Meta
(global-set-key "\M- " 'set-mark-command)
(global-set-key "\M-\C-h" 'backward-kill-word)
(global-set-key "\M-\C-r" 'query-replace)
(global-set-key "\M-r" 'replace-string)
(global-set-key "\M-g" 'goto-line)
(global-set-key "\M-h" 'help-command)

;; Function keys
(global-set-key [f1] 'manual-entry)
(global-set-key [f2] 'info)
(global-set-key [f3] 'repeat-complex-command)
(global-set-key [f4] 'advertised-undo)
(global-set-key [f5] 'eval-current-buffer)
(global-set-key [f6] 'buffer-menu)
(global-set-key [f7] 'other-window)
(global-set-key [f8] 'find-file)
(global-set-key [f9] 'save-buffer)
(global-set-key [f10] 'next-error)
(global-set-key [f11] 'compile)
(global-set-key [f12] 'grep)
(global-set-key [C-f1] 'compile)
(global-set-key [C-f2] 'grep)
(global-set-key [C-f3] 'next-error)
(global-set-key [C-f4] 'previous-error)
(global-set-key [C-f5] 'display-faces)
(global-set-key [C-f8] 'dired)
(global-set-key [C-f10] 'kill-compilation)

;; Keypad bindings
(global-set-key [up] "\C-p")
(global-set-key [down] "\C-n")
(global-set-key [left] "\C-b")
(global-set-key [right] "\C-f")
(global-set-key [home] "\C-a")
(global-set-key [end] "\C-e")
(global-set-key [prior] "\M-v")
(global-set-key [next] "\C-v")
(global-set-key [C-up] "\M-\C-b")
(global-set-key [C-down] "\M-\C-f")
(global-set-key [C-left] "\M-b")
(global-set-key [C-right] "\M-f")
(global-set-key [C-home] "\M-&lt;")
(global-set-key [C-end] "\M-&gt;")
(global-set-key [C-prior] "\M-&lt;")
(global-set-key [C-next] "\M-&gt;")

;; Mouse
(global-set-key [mouse-3] 'imenu)

;; Misc
(global-set-key [C-tab] "\C-q\t")	; Control tab quotes a tab.
(setq backup-by-copying-when-mismatch t)

;; Treat 'y' or &lt;CR&gt; as yes, 'n' as no.
(fset 'yes-or-no-p 'y-or-n-p)
(define-key query-replace-map [return] 'act)
(define-key query-replace-map [?\C-m] 'act)

;; Load packages
(require 'desktop)
(require 'tar-mode)

;; Pretty diff mode
(autoload 'ediff-buffers "ediff" "Intelligent Emacs interface to diff" t)
(autoload 'ediff-files "ediff" "Intelligent Emacs interface to diff" t)
(autoload 'ediff-files-remote "ediff"
  "Intelligent Emacs interface to diff")

(if first-time
    (setq auto-mode-alist
	  (append '(("\\.cpp$" . c++-mode)
		    ("\\.hpp$" . c++-mode)
		    ("\\.lsp$" . lisp-mode)
		    ("\\.scm$" . scheme-mode)
		    ("\\.pl$" . perl-mode)
		    ) auto-mode-alist)))

;; Auto font lock mode
(defvar font-lock-auto-mode-list
  (list 'c-mode 'c++-mode 'c++-c-mode 'emacs-lisp-mode 'lisp-mode 'perl-mode 'scheme-mode)
  "List of modes to always start in font-lock-mode")

(defvar font-lock-mode-keyword-alist
  '((c++-c-mode . c-font-lock-keywords)
    (perl-mode . perl-font-lock-keywords))
  "Associations between modes and keywords")

(defun font-lock-auto-mode-select ()
  "Automatically select font-lock-mode if the current major mode is in font-lock-auto-mode-list"
  (if (memq major-mode font-lock-auto-mode-list)
      (progn
	(font-lock-mode t))
    )
  )

(global-set-key [M-f1] 'font-lock-fontify-buffer)

;; New dabbrev stuff
;(require 'new-dabbrev)
(setq dabbrev-always-check-other-buffers t)
(setq dabbrev-abbrev-char-regexp "\\sw\\|\\s_")
(add-hook 'emacs-lisp-mode-hook
	  '(lambda ()
	     (set (make-local-variable 'dabbrev-case-fold-search) nil)
	     (set (make-local-variable 'dabbrev-case-replace) nil)))
(add-hook 'c-mode-hook
	  '(lambda ()
	     (set (make-local-variable 'dabbrev-case-fold-search) nil)
	     (set (make-local-variable 'dabbrev-case-replace) nil)))
(add-hook 'text-mode-hook
	  '(lambda ()
	     (set (make-local-variable 'dabbrev-case-fold-search) t)
	     (set (make-local-variable 'dabbrev-case-replace) t)))

;; C++ and C mode...
(defun my-c++-mode-hook ()
  (setq tab-width 4)
  (define-key c++-mode-map "\C-m" 'reindent-then-newline-and-indent)
  (define-key c++-mode-map "\C-ce" 'c-comment-edit)
  (setq c++-auto-hungry-initial-state 'none)
  (setq c++-delete-function 'backward-delete-char)
  (setq c++-tab-always-indent t)
  (setq c-indent-level 4)
  (setq c-continued-statement-offset 4)
  (setq c++-empty-arglist-indent 4))

(defun my-c-mode-hook ()
  (setq tab-width 4)
  (define-key c-mode-map "\C-m" 'reindent-then-newline-and-indent)
  (define-key c-mode-map "\C-ce" 'c-comment-edit)
  (setq c-auto-hungry-initial-state 'none)
  (setq c-delete-function 'backward-delete-char)
  (setq c-tab-always-indent t)
;; BSD-ish indentation style
  (setq c-indent-level 4)
  (setq c-continued-statement-offset 4)
  (setq c-brace-offset -4)
  (setq c-argdecl-indent 0)
  (setq c-label-offset -4))

;; Perl mode
(defun my-perl-mode-hook ()
  (setq tab-width 4)
  (define-key c++-mode-map "\C-m" 'reindent-then-newline-and-indent)
  (setq perl-indent-level 4)
  (setq perl-continued-statement-offset 4))

;; Scheme mode...
(defun my-scheme-mode-hook ()
  (define-key scheme-mode-map "\C-m" 'reindent-then-newline-and-indent))

;; Emacs-Lisp mode...
(defun my-lisp-mode-hook ()
  (define-key lisp-mode-map "\C-m" 'reindent-then-newline-and-indent)
  (define-key lisp-mode-map "\C-i" 'lisp-indent-line)
  (define-key lisp-mode-map "\C-j" 'eval-print-last-sexp))

;; Add all of the hooks...
(add-hook 'c++-mode-hook 'my-c++-mode-hook)
(add-hook 'c-mode-hook 'my-c-mode-hook)
(add-hook 'scheme-mode-hook 'my-scheme-mode-hook)
(add-hook 'emacs-lisp-mode-hook 'my-lisp-mode-hook)
(add-hook 'lisp-mode-hook 'my-lisp-mode-hook)
(add-hook 'perl-mode-hook 'my-perl-mode-hook)

;; Complement to next-error
(defun previous-error (n)
  "Visit previous compilation error message and corresponding source code."
  (interactive "p")
  (next-error (- n)))

;; Misc...
(transient-mark-mode 1)
(setq mark-even-if-inactive t)
(setq visible-bell nil)
(setq next-line-add-newlines nil)
(setq compile-command "make")
(setq suggest-key-bindings nil)
(put 'eval-expression 'disabled nil)
(put 'narrow-to-region 'disabled nil)
(put 'set-goal-column 'disabled nil)
(if (&gt;= emacs-major-version 21)
	(setq show-trailing-whitespace t))

;; Elisp archive searching
(autoload 'format-lisp-code-directory "lispdir" nil t)
(autoload 'lisp-dir-apropos "lispdir" nil t)
(autoload 'lisp-dir-retrieve "lispdir" nil t)
(autoload 'lisp-dir-verify "lispdir" nil t)

;; Font lock mode
(defun my-make-face (face color &amp;optional bold)
  "Create a face from a color and optionally make it bold"
  (make-face face)
  (copy-face 'default face)
  (set-face-foreground face color)
  (if bold (make-face-bold face))
  )

(if (eq window-system 'x)
    (progn
      (my-make-face 'blue "blue")
      (my-make-face 'red "red")
      (my-make-face 'green "dark green")
      (setq font-lock-comment-face 'blue)
      (setq font-lock-string-face 'bold)
      (setq font-lock-type-face 'bold)
      (setq font-lock-keyword-face 'bold)
      (setq font-lock-function-name-face 'red)
      (setq font-lock-doc-string-face 'green)
      (add-hook 'find-file-hooks 'font-lock-auto-mode-select)

      (setq baud-rate 1000000)
      (global-set-key "\C-cmm" 'menu-bar-mode)
      (global-set-key "\C-cms" 'scroll-bar-mode)
      (global-set-key [backspace] 'backward-delete-char)
					;      (global-set-key [delete] 'delete-char)
      (standard-display-european t)
      (load-library "iso-transl")))

;; X11 or PC using direct screen writes
(if window-system
    (progn
      ;;      (global-set-key [M-f1] 'hilit-repaint-command)
      ;;      (global-set-key [M-f2] [?\C-u M-f1])
      (setq hilit-mode-enable-list
	    '(not text-mode c-mode c++-mode emacs-lisp-mode lisp-mode
		  scheme-mode)
	    hilit-auto-highlight nil
	    hilit-auto-rehighlight 'visible
	    hilit-inhibit-hooks nil
	    hilit-inhibit-rebinding t)
      (require 'hilit19)
      (require 'paren))
  (setq baud-rate 2400)			; For slow serial connections
  )

;; TTY type terminal
(if (and (not window-system)
	 (not (equal system-type 'ms-dos)))
    (progn
      (if first-time
	  (progn
	    (keyboard-translate ?\C-h ?\C-?)
	    (keyboard-translate ?\C-? ?\C-h)))))

;; Under UNIX
(if (not (equal system-type 'ms-dos))
    (progn
      (if first-time
	  (server-start))))

;; Add any face changes here
(add-hook 'term-setup-hook 'my-term-setup-hook)
(defun my-term-setup-hook ()
  (if (eq window-system 'pc)
      (progn
;;	(set-face-background 'default "red")
	)))

;; Restore the "desktop" - do this as late as possible
(if first-time
    (progn
      (desktop-load-default)
      (desktop-read)))

;; Indicate that this file has been read at least once
(setq first-time nil)

;; No need to debug anything now

(setq debug-on-error nil)

;; All done
(message "All done, %s%s" (user-login-name) ".")
	</programlisting>
      </example>
    </sect2>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Erweitern des von Emacs unterstützten Sprachbereichs</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Das ist jetzt alles sehr schön wenn Sie
	ausschließlich in einer der Sprachen programmieren
	wollen, um die wir uns bereits in der
	<filename xmlns:xlink="http://www.w3.org/1999/xlink">.emacs</filename>-Datei gekümmert haben (C,
	C++, Perl, Lisp und Scheme), aber was passiert wenn eine neue
	Sprache namens <quote xmlns:xlink="http://www.w3.org/1999/xlink">whizbang</quote> herauskommt, mit jeder
	Menge neuen tollen Features?</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Als erstes muß festgestellt werden, ob whizbang mit
	irgendwelchen Dateien daherkommt, die Emacs etwas über
	die Sprache sagen. Diese enden üblicherweise auf
	<filename xmlns:xlink="http://www.w3.org/1999/xlink">.el</filename>, der Kurzform für <quote xmlns:xlink="http://www.w3.org/1999/xlink">Emacs
	Lisp</quote>. Falls whizbang zum Beispiel ein FreeBSD Port
	ist, könnten wir diese Dateien mittels</para>

      <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">find /usr/ports/lang/whizbang -name "*.el" -print</userinput></screen>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">finden und durch Kopieren in das Emacs-seitige
	Lisp-Verzeichnis installieren. Unter FreeBSD ist dies
	<filename xmlns:xlink="http://www.w3.org/1999/xlink">/usr/local/share/emacs/site-lisp</filename>.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Wenn zum Beispiel die Ausgabe des find-Befehls wie folgt
	war</para>

      <screen xmlns:xlink="http://www.w3.org/1999/xlink">/usr/ports/lang/whizbang/work/misc/whizbang.el</screen>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">könnten wir das folgende tun</para>

      <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">#</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">cp /usr/ports/lang/whizbang/work/misc/whizbang.el /usr/local/share/emacs/site-lisp</userinput></screen>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Als nächstes müssen wir festlegen, welche
	Dateiendung Quelltextdateien für whizbang haben. Lassen
	Sie uns um der Argumente Willen annehmen, die Dateiendung sei
	<filename xmlns:xlink="http://www.w3.org/1999/xlink">.wiz</filename>. Wir müssen dann einen Eintrag
	unserer <filename xmlns:xlink="http://www.w3.org/1999/xlink">.emacs</filename>-Datei hinzufügen um
	sicherzustellen, daß Emacs die Informationen in
	<filename xmlns:xlink="http://www.w3.org/1999/xlink">whizbang.el</filename> auch verwenden kann.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Suchen Sie den <symbol xmlns:xlink="http://www.w3.org/1999/xlink">auto-mode-alist Eintrag</symbol>
	in der <filename xmlns:xlink="http://www.w3.org/1999/xlink">.emacs</filename>-Datei und fügen Sie an
	dieser Stelle eine Zeile wie folgt für whizbang
	hinzu:</para>

      <programlisting xmlns:xlink="http://www.w3.org/1999/xlink"><lineannotation xmlns:xlink="http://www.w3.org/1999/xlink">&#8230;</lineannotation>
("\\.lsp$" . lisp-mode)
("\\.wiz$" . whizbang-mode)
("\\.scm$" . scheme-mode)
<lineannotation xmlns:xlink="http://www.w3.org/1999/xlink">&#8230;</lineannotation></programlisting>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Dies bedeutet das Emacs automatisch in den
	<function xmlns:xlink="http://www.w3.org/1999/xlink">whizbang-mode</function> wechseln wird, wenn Sie
	eine Datei mit der Dateiendung <filename xmlns:xlink="http://www.w3.org/1999/xlink">.wiz</filename>
	editieren.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Direkt darunter werden Sie den Eintrag
	<symbol xmlns:xlink="http://www.w3.org/1999/xlink">font-lock-auto-mode-list</symbol> finden. Erweitern
	Sie den <function xmlns:xlink="http://www.w3.org/1999/xlink">whizbang-mode</function> um diesen wie
	folgt:</para>

      <programlisting xmlns:xlink="http://www.w3.org/1999/xlink">;; Auto font lock mode
(defvar font-lock-auto-mode-list
  (list 'c-mode 'c++-mode 'c++-c-mode 'emacs-lisp-mode 'whizbang-mode 'lisp-mode 'perl-mode 'scheme-mode)
  "List of modes to always start in font-lock-mode")</programlisting>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Dies bedeutet das Emacs immer
	<function xmlns:xlink="http://www.w3.org/1999/xlink">font-lock-mode</function> (z.B. Syntax Highlighting)
	aktiviert, wenn Sie eine <filename xmlns:xlink="http://www.w3.org/1999/xlink">.wiz</filename>-Datei
	editieren.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Und das ist alles was benötigt wird. Falls es
	weitere Dinge gibt, die automatisch beim Öffnen einer
	<filename xmlns:xlink="http://www.w3.org/1999/xlink">.wiz</filename>-Datei ausgeführt werden sollen,
	können Sie einen <function xmlns:xlink="http://www.w3.org/1999/xlink">whizbang-mode
	hook</function>-Eintrag hinzufügen (für ein
	einfaches Beispiel, welches <function xmlns:xlink="http://www.w3.org/1999/xlink">auto-indent</function>
	hinzufügt, sehen Sie sich bitte
	<function xmlns:xlink="http://www.w3.org/1999/xlink">my-scheme-mode-hook</function> an).</para>
    </sect2>
  </sect1>

  <sect1 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="tools-reading">
    <title xmlns:xlink="http://www.w3.org/1999/xlink">Weiterführende Literatur</title>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Für Informationen zum Aufsetzen einer
      Entwicklungsumgebung, um Fehlerbehebungen an FreeBSD selber
      beizusteuern sehen Sie sich bitte <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">development</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">7</manvolnum></citerefentry> an.</para>

    <itemizedlist xmlns:xlink="http://www.w3.org/1999/xlink">
      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Brian Harvey and Matthew Wright
	  <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">Simply Scheme</emphasis>
	  MIT 1994.<!-- <br> -->
	  ISBN 0-262-08226-8</para>
      </listitem>

      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Randall Schwartz
	  <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">Learning Perl</emphasis>
	  O'Reilly 1993<!-- <br> -->
	  ISBN 1-56592-042-2</para>
      </listitem>

      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Patrick Henry Winston and Berthold Klaus Paul Horn
	  <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">Lisp (3rd Edition)</emphasis>
	  Addison-Wesley 1989<!-- <br> -->
	  ISBN 0-201-08319-1</para>
      </listitem>

      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Brian W. Kernighan and Rob Pike
	  <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">The Unix Programming Environment</emphasis>
	  Prentice-Hall 1984<!-- <br> -->
	  ISBN 0-13-937681-X</para>
      </listitem>

      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Brian W. Kernighan and Dennis M. Ritchie
	  <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">The C Programming Language (2nd Edition)</emphasis>
	  Prentice-Hall 1988<!-- <br> -->
	  ISBN 0-13-110362-8</para>
      </listitem>

      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Bjarne Stroustrup
	<emphasis xmlns:xlink="http://www.w3.org/1999/xlink">The C++ Programming Language</emphasis>
	Addison-Wesley 1991<!-- <br> -->
	ISBN 0-201-53992-6</para>
      </listitem>

      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">W. Richard Stevens
	  <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">Advanced Programming in the Unix Environment</emphasis>
	  Addison-Wesley 1992<!-- <br> -->
	  ISBN 0-201-56317-7</para>
      </listitem>

      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">W. Richard Stevens
	  <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">Unix Network Programming</emphasis>
	  Prentice-Hall 1990<!-- <br> -->
	  ISBN 0-13-949876-1</para>
      </listitem>
    </itemizedlist>
  </sect1>

</chapter>

    
<!--
     The FreeBSD Documentation Project
     The FreeBSD German Documentation Project

     $FreeBSD$
     $FreeBSDde: de-docproj/books/developers-handbook/secure/chapter.xml,v 1.16 2010/12/18 13:28:29 jkois Exp $
     basiert auf: 1.30
-->
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="secure">
  <info><title xmlns:xlink="http://www.w3.org/1999/xlink">Sicheres Programmieren</title>
    <authorgroup xmlns:xlink="http://www.w3.org/1999/xlink">
      <author xmlns:xlink="http://www.w3.org/1999/xlink"><personname xmlns:xlink="http://www.w3.org/1999/xlink"><firstname xmlns:xlink="http://www.w3.org/1999/xlink">Murray</firstname><surname xmlns:xlink="http://www.w3.org/1999/xlink">Stokely</surname></personname><contrib xmlns:xlink="http://www.w3.org/1999/xlink">Contributed by </contrib></author>
    </authorgroup>
    <authorgroup xmlns:xlink="http://www.w3.org/1999/xlink">
      <author xmlns:xlink="http://www.w3.org/1999/xlink"><personname xmlns:xlink="http://www.w3.org/1999/xlink"><firstname xmlns:xlink="http://www.w3.org/1999/xlink">Hagen</firstname><surname xmlns:xlink="http://www.w3.org/1999/xlink">Kühl</surname></personname><contrib xmlns:xlink="http://www.w3.org/1999/xlink">Übersetzt von </contrib></author>
    </authorgroup>
  </info>

  

  <sect1 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="secure-synopsis">
    <title xmlns:xlink="http://www.w3.org/1999/xlink">Zusammenfassung</title>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Dieses Kapitel beschreibt einige Sicherheitsprobleme, die
      <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark>-Programmierer seit Jahrzehnten quälen, und
      inzwischen verfügbare Werkzeuge, die Programmierern helfen,
      Sicherheitslücken in ihrem Quelltext zu vermeiden.</para>
  </sect1>

  <sect1 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="secure-philosophy">
    <title xmlns:xlink="http://www.w3.org/1999/xlink">Methoden des sicheren Entwurfs</title>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Sichere Anwendungen zu schreiben erfordert eine sehr
      skeptische und pessimistische Lebenseinstellung. Anwendungen
      sollten nach dem Prinzip der <quote xmlns:xlink="http://www.w3.org/1999/xlink">geringsten
      Privilegien</quote> ausgeführt werden, sodass kein Prozess
      mit mehr als dem absoluten Minimum an Zugriffsrechten arbeitet,
      die er zum Erfüllen seiner Aufgabe benötigt. Wo es
      möglich ist, sollte Quelltext, der bereits
      überprüft wurde, wiederverwendet werden, um
      häufige Fehler, die andere schon korrigiert haben, zu
      vermeiden.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Eine der Stolperfallen der <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark>-Umgebung ist, dass es
      sehr einfach ist Annahmen über die Konsistenz der Umgebung
      zu machen. Anwendungen sollten Nutzereingaben (in allen Formen)
      niemals trauen, genauso wenig wie den System-Ressourcen,
      der Inter-Prozess-Kommunikation oder dem zeitlichen Ablauf von
      Ereignissen. <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark>-Prozesse arbeiten nicht synchron. Daher sind
      logische Operationen selten atomar.</para>
  </sect1>

  <sect1 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="secure-bufferov">
    <title xmlns:xlink="http://www.w3.org/1999/xlink">Puffer-Überläufe</title>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Puffer-Überläufe gibt es schon seit den
      Anfängen der Von-Neuman-Architektur <xref xmlns:xlink="http://www.w3.org/1999/xlink" linkend="COD"/>.

      <indexterm xmlns:xlink="http://www.w3.org/1999/xlink"><primary xmlns:xlink="http://www.w3.org/1999/xlink">Puffer-Überlauf</primary></indexterm>
      <indexterm xmlns:xlink="http://www.w3.org/1999/xlink"><primary xmlns:xlink="http://www.w3.org/1999/xlink">Von-Neuman</primary></indexterm>

      Sie erlangten zum ersten Mal durch den Internetwurm Morris im
      Jahre 1988 öffentliche Bekanntheit. Unglücklicherweise

      <indexterm xmlns:xlink="http://www.w3.org/1999/xlink"><primary xmlns:xlink="http://www.w3.org/1999/xlink">Morris Internetwurm</primary></indexterm>

      funktioniert der gleiche grundlegende Angriff noch heute.  Die bei weitem
      häufigste Form eines Puffer-Überlauf-Angriffs basiert darauf,
      den Stack zu korrumpieren.</para>

    <indexterm xmlns:xlink="http://www.w3.org/1999/xlink"><primary xmlns:xlink="http://www.w3.org/1999/xlink">Stack</primary></indexterm>
    <indexterm xmlns:xlink="http://www.w3.org/1999/xlink"><primary xmlns:xlink="http://www.w3.org/1999/xlink">Arguments</primary></indexterm>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Die meisten modernen Computer-Systeme verwenden einen
      Stack, um Argumente an Prozeduren zu übergeben und
      lokale Variablen zu speichern. Ein Stack ist ein
      last-in-first-out-Puffer (LIFO) im hohen Speicherbereich
      eines Prozesses. Wenn ein Programm eine Funktion

      <indexterm xmlns:xlink="http://www.w3.org/1999/xlink"><primary xmlns:xlink="http://www.w3.org/1999/xlink">LIFO</primary></indexterm>
      <indexterm xmlns:xlink="http://www.w3.org/1999/xlink">
	<primary xmlns:xlink="http://www.w3.org/1999/xlink">Prozessabbild</primary>
	<secondary xmlns:xlink="http://www.w3.org/1999/xlink">Stack-Pointer</secondary>
      </indexterm>

      aufruft wird ein neuer "Stackframe" erzeugt. Dieser besteht aus
      den Argumenten, die der Funktion übergeben wurden und
      einem variabel grossem Bereich für lokale Variablen. Der
      "Stack-Pointer" ist ein Register, dass die

      <indexterm xmlns:xlink="http://www.w3.org/1999/xlink"><primary xmlns:xlink="http://www.w3.org/1999/xlink">Stack-Frame</primary></indexterm>
      <indexterm xmlns:xlink="http://www.w3.org/1999/xlink"><primary xmlns:xlink="http://www.w3.org/1999/xlink">Stack-Pointer</primary></indexterm>

      aktuelle Adresse der Stack-Spitze enthält.
      Da sich dieser Wert oft ändert, wenn neue Werte
      auf dem Stack abgelegt werden, bieten viele Implementierungen
      einen "Frame-Pointer", der nahe am Anfang des Stack-Frames
      liegt und es so leichter macht lokale Variablen relativ zum
      aktuellen Stackframe zu adressieren. <xref xmlns:xlink="http://www.w3.org/1999/xlink" linkend="COD"/>
      Die Rücksprungadresse

      <indexterm xmlns:xlink="http://www.w3.org/1999/xlink"><primary xmlns:xlink="http://www.w3.org/1999/xlink">Frame-Pointer</primary></indexterm>
      <indexterm xmlns:xlink="http://www.w3.org/1999/xlink">
	<primary xmlns:xlink="http://www.w3.org/1999/xlink">Prozessabbild</primary>
	<secondary xmlns:xlink="http://www.w3.org/1999/xlink">Frame-Pointer</secondary>
      </indexterm>
      <indexterm xmlns:xlink="http://www.w3.org/1999/xlink"><primary xmlns:xlink="http://www.w3.org/1999/xlink">Rücksprungadresse</primary></indexterm>
      <indexterm xmlns:xlink="http://www.w3.org/1999/xlink"><primary xmlns:xlink="http://www.w3.org/1999/xlink">Stack-Überlauf</primary></indexterm>

      der Funktionen werden ebenfalls auf dem Stack
      gespeichert und das ist der Grund für
      Stack-Überlauf-Exploits. Denn ein böswilliger Nutzer
      kann die Rücksprungadresse der Funktion überschreiben
      indem er eine lokale Variable in der Funktion
      überlaufen lässt, wodurch es ihm möglich ist
      beliebigen Code auszuführen.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Obwohl Stack-basierte Angriffe bei weitem die
      Häufigsten sind, ist es auch möglich den Stack mit
      einem Heap-basierten (malloc/free) Angriff zu
      überschreiben.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Die C-Programmiersprache führt keine automatischen
      Bereichsüberprüfungen bei Feldern oder Zeigern durch, wie
      viele andere Sprachen das tun. Außerdem enthält
      die C-Standardbibliothek eine Handvoll sehr
      gefährlicher Funktionen.</para>

    <informaltable xmlns:xlink="http://www.w3.org/1999/xlink" frame="none" pgwide="1">
      <tgroup xmlns:xlink="http://www.w3.org/1999/xlink" cols="2">
	<tbody xmlns:xlink="http://www.w3.org/1999/xlink">
	  <row xmlns:xlink="http://www.w3.org/1999/xlink">
	    <entry xmlns:xlink="http://www.w3.org/1999/xlink"><function xmlns:xlink="http://www.w3.org/1999/xlink">strcpy</function>(char *dest, const
	      char *src)</entry>
	    <entry xmlns:xlink="http://www.w3.org/1999/xlink"><simpara xmlns:xlink="http://www.w3.org/1999/xlink">Kann den Puffer dest überlaufen
	      lassen</simpara></entry>
	  </row>

	  <row xmlns:xlink="http://www.w3.org/1999/xlink">
	    <entry xmlns:xlink="http://www.w3.org/1999/xlink"><function xmlns:xlink="http://www.w3.org/1999/xlink">strcat</function>(char *dest, const
	      char *src)</entry>
	    <entry xmlns:xlink="http://www.w3.org/1999/xlink"><simpara xmlns:xlink="http://www.w3.org/1999/xlink">Kann den Puffer dest überlaufen
	      lassen</simpara></entry>
	  </row>

	  <row xmlns:xlink="http://www.w3.org/1999/xlink">
	    <entry xmlns:xlink="http://www.w3.org/1999/xlink"><function xmlns:xlink="http://www.w3.org/1999/xlink">getwd</function>(char *buf)</entry>
	    <entry xmlns:xlink="http://www.w3.org/1999/xlink"><simpara xmlns:xlink="http://www.w3.org/1999/xlink">Kann den Puffer buf überlaufen
	      lassen</simpara></entry>
	  </row>

	  <row xmlns:xlink="http://www.w3.org/1999/xlink">
	    <entry xmlns:xlink="http://www.w3.org/1999/xlink"><function xmlns:xlink="http://www.w3.org/1999/xlink">gets</function>(char *s)</entry>
	    <entry xmlns:xlink="http://www.w3.org/1999/xlink"><simpara xmlns:xlink="http://www.w3.org/1999/xlink">Kann den Puffer s überlaufen
	      lassen</simpara></entry>
	  </row>

	  <row xmlns:xlink="http://www.w3.org/1999/xlink">
	    <entry xmlns:xlink="http://www.w3.org/1999/xlink"><function xmlns:xlink="http://www.w3.org/1999/xlink">[vf]scanf</function>(const char
	      *format, ...)</entry>
	    <entry xmlns:xlink="http://www.w3.org/1999/xlink"><simpara xmlns:xlink="http://www.w3.org/1999/xlink">Kann sein Argument überlaufen
	      lassen</simpara></entry>
	  </row>

	  <row xmlns:xlink="http://www.w3.org/1999/xlink">
	    <entry xmlns:xlink="http://www.w3.org/1999/xlink"><function xmlns:xlink="http://www.w3.org/1999/xlink">realpath</function>(char *path,
	      char resolved_path[])</entry>
	    <entry xmlns:xlink="http://www.w3.org/1999/xlink"><simpara xmlns:xlink="http://www.w3.org/1999/xlink">Kann den Puffer path überlaufen
	      lassen</simpara></entry>
	  </row>

	  <row xmlns:xlink="http://www.w3.org/1999/xlink">
	    <entry xmlns:xlink="http://www.w3.org/1999/xlink"><function xmlns:xlink="http://www.w3.org/1999/xlink">[v]sprintf</function>(char *str,
	      const char *format, ...)</entry>
	    <entry xmlns:xlink="http://www.w3.org/1999/xlink"><simpara xmlns:xlink="http://www.w3.org/1999/xlink">Kann den Puffer str überlaufen
	      lassen</simpara></entry>
	  </row>
	</tbody>
      </tgroup>
    </informaltable>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Puffer-Überlauf Beispiel</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Das folgende Quellcode-Beispiel enthält einen
	Puffer-Überlauf, der darauf ausgelegt ist die
	Rücksprungadresse zu überschreiben und die
	Anweisung direkt nach dem Funktionsaufruf zu
	überspringen. (Inspiriert durch
	<xref xmlns:xlink="http://www.w3.org/1999/xlink" linkend="Phrack"/>)</para>

      <programlisting xmlns:xlink="http://www.w3.org/1999/xlink">#include &lt;stdio.h&gt;

void manipulate(char *buffer) {
char newbuffer[80];
strcpy(newbuffer,buffer);
}

int main() {
char ch,buffer[4096];
int i=0;

while ((buffer[i++] = getchar()) != '\n') {};

i=1;
manipulate(buffer);
i=2;
printf("The value of i is : %d\n",i);
return 0;
}</programlisting>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Betrachten wir nun, wie das Speicherabbild dieses
	Prozesses aussehen würde, wenn wir 160 Leerzeichen
	in unser kleines Programm eingeben, bevor wir Enter
	drücken.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">[XXX figure here!]</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Offensichtlich kann man durch böswilligere Eingaben
	bereits kompilierten Programmtext ausführen (wie z.B.
	exec(/bin/sh)).</para>
    </sect2>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Puffer-Überläufe vermeiden</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Die direkteste Lösung, um
	Stack-Überläufe zu vermeiden, ist immer
	grössenbegrenzten Speicher und String-Copy-Funktionen
	zu verwenden.
	<function xmlns:xlink="http://www.w3.org/1999/xlink">strncpy</function> und <function xmlns:xlink="http://www.w3.org/1999/xlink">strncat</function>
	sind Teil der C-Standardbibliothek.

	<indexterm xmlns:xlink="http://www.w3.org/1999/xlink">
	  <primary xmlns:xlink="http://www.w3.org/1999/xlink">Zeichenketten-Kopierfunktioen</primary>
	  <secondary xmlns:xlink="http://www.w3.org/1999/xlink">strncpy</secondary>
	</indexterm>
	<indexterm xmlns:xlink="http://www.w3.org/1999/xlink">
	  <primary xmlns:xlink="http://www.w3.org/1999/xlink">Zeichenketten-Kopierfunktionen</primary>
	  <secondary xmlns:xlink="http://www.w3.org/1999/xlink">strncat</secondary>
	</indexterm>

	Diese Funktionen akzeptieren einen Längen-Parameter. Dieser
	Wert sollte nicht größer sein als die Länge
	des Zielpuffers. Die Funktionen kopieren dann bis zu
	`length' Bytes von der Quelle zum Ziel. Allerdings gibt es
	einige Probleme. Keine der Funktionen garantiert, dass
	die Zeichenkette NUL-terminiert ist, wenn die
	Größe

	<indexterm xmlns:xlink="http://www.w3.org/1999/xlink"><primary xmlns:xlink="http://www.w3.org/1999/xlink">NUL-Terminierung</primary></indexterm>

	des Eingabepuffers so groß ist wie das Ziel.
	Außerdem wird der Parameter length zwischen strncpy
	und strncat inkonsistent definiert, weshalb Programmierer
	leicht bezüglich der korrekten Verwendung durcheinander
	kommen können. Weiterhin gibt es einen spürbaren
	Leistungsverlust im Vergleich zu
	<function xmlns:xlink="http://www.w3.org/1999/xlink">strcpy</function>, wenn eine kurze Zeichenkette in
	einen großen Puffer kopiert wird. Denn
	<function xmlns:xlink="http://www.w3.org/1999/xlink">strncpy</function> fült den Puffer bis zur
	angegebenen Länge mit NUL auf.
      </para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">In OpenBSD wurde eine weitere Möglichkeit zum

	<indexterm xmlns:xlink="http://www.w3.org/1999/xlink"><primary xmlns:xlink="http://www.w3.org/1999/xlink">OpenBSD</primary></indexterm>

	kopieren von Speicherbereichen implementiert, die dieses
	Problem umgeht. Die Funktionen <function xmlns:xlink="http://www.w3.org/1999/xlink">strlcpy</function>
	und <function xmlns:xlink="http://www.w3.org/1999/xlink">strlcat</function> garantieren, dass das Ziel
	immer NUL-terminiert wird, wenn das Argument length ungleich
	null ist. Für weitere Informationen über diese
	Funktionen lesen Sie bitte <xref xmlns:xlink="http://www.w3.org/1999/xlink" linkend="OpenBSD"/>. Die
	OpenBSD-Funktionen <function xmlns:xlink="http://www.w3.org/1999/xlink">strlcpy</function> und
	<function xmlns:xlink="http://www.w3.org/1999/xlink">strlcat</function> sind seit Version 3.3 auch in
	FreeBSD verfügbar.</para>

      <indexterm xmlns:xlink="http://www.w3.org/1999/xlink">
	<primary xmlns:xlink="http://www.w3.org/1999/xlink">Zeichenketten-Kopierfunktionen</primary>
	<secondary xmlns:xlink="http://www.w3.org/1999/xlink">strlcpy</secondary>
      </indexterm>

      <indexterm xmlns:xlink="http://www.w3.org/1999/xlink">
	<primary xmlns:xlink="http://www.w3.org/1999/xlink">Zeichenketten-Kopierfunktionen</primary>
	<secondary xmlns:xlink="http://www.w3.org/1999/xlink">strlcat</secondary>
      </indexterm>

      <sect3 xmlns:xlink="http://www.w3.org/1999/xlink">
	<title xmlns:xlink="http://www.w3.org/1999/xlink">Compiler-basierte Laufzeitüberprüfung
	  von Grenzen</title>

	<indexterm xmlns:xlink="http://www.w3.org/1999/xlink">
	  <primary xmlns:xlink="http://www.w3.org/1999/xlink">Prüfung von Grenzen</primary>
	  <secondary xmlns:xlink="http://www.w3.org/1999/xlink">Compiler-basiert</secondary>
	</indexterm>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Unglücklicherweise gibt es immer noch sehr viel
	  Quelltext, der allgemein verwendet wird und blind Speicher
	  umherkopiert, ohne eine der gerade besprochenen Funktionen,
	  die Begrenzungen unterstützen, zu verwenden.
	  Glücklicherweise gibt es einen Weg, um solche Angriffe zu
	  verhindern -  Überprüfung der Grenzen zur Laufzeit, die in
	  verschiedenen C/C++ Compilern eingebaut ist.</para>

	<indexterm xmlns:xlink="http://www.w3.org/1999/xlink"><primary xmlns:xlink="http://www.w3.org/1999/xlink">ProPolice</primary></indexterm>
	<indexterm xmlns:xlink="http://www.w3.org/1999/xlink"><primary xmlns:xlink="http://www.w3.org/1999/xlink">StackGuard</primary></indexterm>
	<indexterm xmlns:xlink="http://www.w3.org/1999/xlink"><primary xmlns:xlink="http://www.w3.org/1999/xlink">GCC</primary></indexterm>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">ProPolice ist eine solche Compiler-Eigenschaft und ist in den
	  <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">gcc</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">1</manvolnum></citerefentry> Versionen 4.1 und höher integriert.  Es ersetzt und
	  erweitert die <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">gcc</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">1</manvolnum></citerefentry> StackGuard-Erweiterung von
	  früher.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">ProPolice schützt gegen stackbasierte
	  Pufferüberläufe und andere Angriffe durch das Ablegen von
	  Pseudo-Zufallszahlen in Schlüsselbereichen des Stacks bevor es
	  irgendwelche Funktionen aufruft.  Wenn eine Funktion beendet wird,
	  werden diese <quote xmlns:xlink="http://www.w3.org/1999/xlink">Kanarienvögel</quote> überprüft
	  und wenn festgestellt wird, dass diese verändert wurden wird das
	  Programm sofort abgebrochen.  Dadurch wird jeglicher Versuch, die
	  Rücksprungadresse oder andere Variablen, die auf dem Stack
	  gespeichert werden, durch die Ausführung von Schadcode zu
	  manipulieren, nicht funktionieren, da der Angreifer auch die
	  Pseudo-Zufallszahlen unberührt lassen müsste.</para>

	<indexterm xmlns:xlink="http://www.w3.org/1999/xlink"><primary xmlns:xlink="http://www.w3.org/1999/xlink">Puffer-Überlauf</primary></indexterm>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Ihre Anwendungen mit ProPolice neu zu kompilieren ist
	  eine effektive Maßnahme, um sie vor den meisten
	  Puffer-Überlauf-Angriffen zu schützen, aber die
	  Programme können noch immer kompromittiert werden.</para>
      </sect3>

      <sect3 xmlns:xlink="http://www.w3.org/1999/xlink">
	<title xmlns:xlink="http://www.w3.org/1999/xlink">Bibliotheks-basierte Laufzeitüberprüfung
	  von Grenzen</title>

	<indexterm xmlns:xlink="http://www.w3.org/1999/xlink">
	  <primary xmlns:xlink="http://www.w3.org/1999/xlink">Prüfung von Grenzen</primary>
	  <secondary xmlns:xlink="http://www.w3.org/1999/xlink">Bibliotheks-basiert</secondary>
	</indexterm>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Compiler-basierte Mechanismen sind bei Software,
	  die nur im Binärformat vertrieben wird, und die somit
	  nicht neu kompiliert werden kann völlig nutzlos.
	  Für diesen Fall gibt es einige Bibliotheken, welche
	  die unsicheren Funktionen der C-Bibliothek
	  (<function xmlns:xlink="http://www.w3.org/1999/xlink">strcpy</function>, <function xmlns:xlink="http://www.w3.org/1999/xlink">fscanf</function>,
	  <function xmlns:xlink="http://www.w3.org/1999/xlink">getwd</function>, etc..) neu implementieren und
	  sicherstellen, dass nicht hinter den Stack-Pointer
	  geschrieben werden kann.</para>

	<itemizedlist xmlns:xlink="http://www.w3.org/1999/xlink">
	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink"><simpara xmlns:xlink="http://www.w3.org/1999/xlink">libsafe</simpara></listitem>
	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink"><simpara xmlns:xlink="http://www.w3.org/1999/xlink">libverify</simpara></listitem>
	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink"><simpara xmlns:xlink="http://www.w3.org/1999/xlink">libparanoia</simpara></listitem>
	</itemizedlist>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Leider haben diese Bibliotheks-basierten
	  Verteidigungen mehrere Schwächen. Diese Bibliotheken
	  schützen nur vor einer kleinen Gruppe von
	  Sicherheitslücken und sie können das
	  eigentliche Problem nicht lösen. Diese
	  Maßnahmen können versagen, wenn die Anwendung
	  mit -fomit-frame-pointer kompiliert wurde.
	  Außerdem kann der Nutzer die Umgebungsvariablen
	  LD_PRELOAD und LD_LIBRARY_PATH überschreiben oder
	  löschen.</para>
      </sect3>
    </sect2>
  </sect1>

  <sect1 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="secure-setuid">
    <title xmlns:xlink="http://www.w3.org/1999/xlink">SetUID-Themen</title>

    <indexterm xmlns:xlink="http://www.w3.org/1999/xlink"><primary xmlns:xlink="http://www.w3.org/1999/xlink">seteuid</primary></indexterm>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Es gibt zu jedem Prozess mindestens sechs verschiedene
      IDs, die diesem zugeordnet sind. Deshalb müssen Sie
      sehr vorsichtig mit den Zugriffsrechten sein, die Ihr Prozess
      zu jedem Zeitpunkt besitzt. Konkret bedeutet dass, das alle
      seteuid-Anwendungen ihre Privilegien abgeben sollten, sobald
      sie diese nicht mehr benötigen.</para>

    <indexterm xmlns:xlink="http://www.w3.org/1999/xlink">
      <primary xmlns:xlink="http://www.w3.org/1999/xlink">Benutzer-IDs</primary>
      <secondary xmlns:xlink="http://www.w3.org/1999/xlink">reale Benutzer-ID</secondary>
    </indexterm>
    <indexterm xmlns:xlink="http://www.w3.org/1999/xlink">
      <primary xmlns:xlink="http://www.w3.org/1999/xlink">Benutzer-IDs</primary>
      <secondary xmlns:xlink="http://www.w3.org/1999/xlink">effective Benutzer-ID</secondary>
    </indexterm>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Die reale Benutzer-ID kann nur von einem
      Superuser-Prozess geändert werden. Das Programm
      <application xmlns:xlink="http://www.w3.org/1999/xlink">login</application> setzt sie, wenn sich ein
      Benutzer am System anmeldet, und sie wird nur selten
      geändert.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Die effektive Benutzer-ID wird von der Funktion
      <function xmlns:xlink="http://www.w3.org/1999/xlink">exec()</function> gesetzt, wenn ein Programm
      das seteuid-Bit gesetzt hat. Eine Anwendung kann
      <function xmlns:xlink="http://www.w3.org/1999/xlink">seteuid()</function> jederzeit aufrufen, um die
      effektive Benutzer-ID entweder auf die reale Benutzer-ID oder
      die gespeicherte set-user-ID zu setzen. Wenn eine der
      <function xmlns:xlink="http://www.w3.org/1999/xlink">exec()</function>-Funktionen die effektive
      Benutzer-ID setzt, wird der vorherige Wert als
      gespeicherte set-user-ID abgelegt.</para>
  </sect1>

  <sect1 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="secure-chroot">
    <title xmlns:xlink="http://www.w3.org/1999/xlink">Die Umgebung ihrer Programme einschränken</title>

    <indexterm xmlns:xlink="http://www.w3.org/1999/xlink"><primary xmlns:xlink="http://www.w3.org/1999/xlink">chroot()</primary></indexterm>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Die herkömmliche Methode, um einen Prozess
      einzuschränken, besteht in dem Systemaufruf
      <function xmlns:xlink="http://www.w3.org/1999/xlink">chroot()</function>. Dieser Aufruf
      ändert das Wurzelverzeichnis, auf das sich alle
      Pfadangaben des Prozesses und jegliche Kind-Prozesse beziehen.
      Damit dieser Systemaufruf gelingt, muss der Prozess
      Ausführungsrechte (Durchsuchungsrechte) für das
      Verzeichnis haben, auf das er sich bezieht. Die neue Umgebung
      wird erst wirksam, wenn Sie mittels
      <function xmlns:xlink="http://www.w3.org/1999/xlink">chdir()</function> in Ihre neue Umgebung wechseln.
      Es sollte erwähnt werden, dass ein Prozess recht einfach
      aus der chroot-Umgebung ausbrechen kann, wenn er root-Rechte
      besitzt. Das kann man erreichen, indem man Gerätedateien
      anlegt, um Kernel-Speicher zu lesen, oder indem man einen
      Debugger mit einem Prozess außerhalb seiner
      <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">chroot</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">8</manvolnum></citerefentry>-Umgebung verbindet, oder auf viele andere
      kreative Wege.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Das Verhalten des Systemaufrufs
      <function xmlns:xlink="http://www.w3.org/1999/xlink">chroot()</function> kann durch die
      kern.chroot.allow_open_directories
      <command xmlns:xlink="http://www.w3.org/1999/xlink">sysctl</command>-Variable beeinflusst werden. Wenn
      diese auf 0 gesetzt ist, wird <function xmlns:xlink="http://www.w3.org/1999/xlink">chroot()</function>
      mit EPERM fehlschlagen, wenn irgendwelche Verzeichnisse
      geöffnet sind. Wenn die Variable auf den Standardwert 1
      gesetzt ist, wird <function xmlns:xlink="http://www.w3.org/1999/xlink">chroot()</function> mit EPERM
      fehlschlagen, wenn irgendwelche Verzeichnisse geöffnet
      sind und sich der Prozess bereits in einer
      <function xmlns:xlink="http://www.w3.org/1999/xlink">chroot()</function>-Umgebung befindet. Bei jedem
      anderen Wert wird die Überprüfung auf
      geöffnete Verzeichnisse komplett umgangen.</para>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Die Jail-Funktionalität in FreeBSD</title>

      <indexterm xmlns:xlink="http://www.w3.org/1999/xlink"><primary xmlns:xlink="http://www.w3.org/1999/xlink">Jail</primary></indexterm>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Das Konzept einer Jail (Gefängnis) erweitert
	<function xmlns:xlink="http://www.w3.org/1999/xlink">chroot()</function>, indem es die Macht des
	Superusers einschränkt, um einen echten 'virtuellen
	Server' zu erzeugen. Wenn ein solches Gefängnis einmal
	eingerichtet ist, muss die gesamte Netzwerkkommunikation
	über eine bestimmte IP-Adresse erfolgen und die
	"root-Privilegien" innerhalb der Jail sind sehr stark
	eingeschränkt.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Solange Sie sich in einer Jail befinden, werden alle
	Tests auf Superuser-Rechte durch den Aufruf von
	<function xmlns:xlink="http://www.w3.org/1999/xlink">suser()</function> fehlschlagen. Allerdings wurden
	einige Aufrufe von <function xmlns:xlink="http://www.w3.org/1999/xlink">suser()</function>
	abgeändert, um die neue
	<function xmlns:xlink="http://www.w3.org/1999/xlink">suser_xxx()</function>-Schnittstelle zu
	implementieren. Diese Funktion ist dafür verantwortlich,
	festzustellen, ob bestimmte Superuser-Rechte einem
	eingesperrten Prozess zur Verfügung stehen.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Ein Superuser-Prozess innerhalb einer Jail darf
	folgendes:</para>

      <itemizedlist xmlns:xlink="http://www.w3.org/1999/xlink">
	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <simpara xmlns:xlink="http://www.w3.org/1999/xlink">Berechtigungen verändern mittels:
	    <function xmlns:xlink="http://www.w3.org/1999/xlink">setuid</function>,
	    <function xmlns:xlink="http://www.w3.org/1999/xlink">seteuid</function>,
	    <function xmlns:xlink="http://www.w3.org/1999/xlink">setgid</function>,
	    <function xmlns:xlink="http://www.w3.org/1999/xlink">setegid</function>,
	    <function xmlns:xlink="http://www.w3.org/1999/xlink">setgroups</function>,
	    <function xmlns:xlink="http://www.w3.org/1999/xlink">setreuid</function>,
	    <function xmlns:xlink="http://www.w3.org/1999/xlink">setregid</function>,
	    <function xmlns:xlink="http://www.w3.org/1999/xlink">setlogin</function></simpara>
	</listitem>

	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <simpara xmlns:xlink="http://www.w3.org/1999/xlink">Ressourcenbegrenzungen setzen mittels
	    <function xmlns:xlink="http://www.w3.org/1999/xlink">setrlimit</function></simpara>
	</listitem>

	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <simpara xmlns:xlink="http://www.w3.org/1999/xlink">Einige sysctl-Variablen (kern.hostname)
	    verändern</simpara>
	</listitem>

	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <simpara xmlns:xlink="http://www.w3.org/1999/xlink"><function xmlns:xlink="http://www.w3.org/1999/xlink">chroot()</function></simpara>
	</listitem>

	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <simpara xmlns:xlink="http://www.w3.org/1999/xlink">Ein Flag einer vnode setzen:
	    <function xmlns:xlink="http://www.w3.org/1999/xlink">chflags</function>,
	    <function xmlns:xlink="http://www.w3.org/1999/xlink">fchflags</function></simpara>
	</listitem>

	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <simpara xmlns:xlink="http://www.w3.org/1999/xlink">Attribute einer vnode setzen wie Dateiberechtigungen,
	    Eigentümer, Gruppe, Größe, Zugriffszeit
	    und Modifikationszeit</simpara>
	</listitem>

	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <simpara xmlns:xlink="http://www.w3.org/1999/xlink">Binden eines Prozesses an einen öffentlichen
	    privilegierten Port (ports &lt; 1024)</simpara>
	</listitem>
      </itemizedlist>

      <para xmlns:xlink="http://www.w3.org/1999/xlink"><function xmlns:xlink="http://www.w3.org/1999/xlink">Jail</function>s sind ein mächtiges
	Werkzeug, um Anwendungen in einer sicheren Umgebung
	auszuführen, aber sie haben auch ihre Nachteile.
	Derzeit wurden die IPC-Mechanismen noch nicht an
	<function xmlns:xlink="http://www.w3.org/1999/xlink">suser_xxx</function> angepasst, so dass Anwendungen
	wie MySQL nicht innerhalb einer Jail ausgeführt werden
	können. Der Superuser-Zugriff hat in einer Jail nur eine
	sehr eingeschränkte Bedeutung, aber es gibt keine
	Möglichkeit zu definieren was
	"sehr eingeschränkt" heißt.</para>
    </sect2>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink">
      <title xmlns:xlink="http://www.w3.org/1999/xlink"><trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">POSIX</trademark>.1e Prozess Capabilities</title>

      <indexterm xmlns:xlink="http://www.w3.org/1999/xlink"><primary xmlns:xlink="http://www.w3.org/1999/xlink">POSIX.1e Process
	Capabilities</primary></indexterm>
      <indexterm xmlns:xlink="http://www.w3.org/1999/xlink"><primary xmlns:xlink="http://www.w3.org/1999/xlink">TrustedBSD</primary></indexterm>

      <para xmlns:xlink="http://www.w3.org/1999/xlink"><trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">POSIX</trademark> hat einen funktionalen Entwurf (Working Draft)
	herausgegeben, der Ereignisüberprüfung,
	Zugriffskontrolllisten, feiner einstellbare Privilegien,
	Informationsmarkierung und verbindliche Zugriffskontrolle
	enthält.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Dies ist im Moment in Arbeit und das Hauptziel des <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://www.trustedbsd.org/">TrustedBSD</link>-Projekts.
	Ein Teil der bisherigen Arbeit wurde in FreeBSD-CURRENT
	übernommen (cap_set_proc(3)).</para>
    </sect2>
  </sect1>

  <sect1 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="secure-trust">
    <title xmlns:xlink="http://www.w3.org/1999/xlink">Vertrauen</title>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Eine Anwendung sollte niemals davon ausgehen, dass
      irgendetwas in der Nutzerumgebung vernünftig ist.
      Das beinhaltet (ist aber sicher nicht darauf
      beschränkt): Nutzereingaben, Signale,
      Umgebungsvariablen, Ressourcen, IPC, mmaps, das
      Arbeitsverzeichnis im Dateisystem, Dateideskriptoren,
      die Anzahl geöffneter Dateien, etc..</para>

    <indexterm xmlns:xlink="http://www.w3.org/1999/xlink"><primary xmlns:xlink="http://www.w3.org/1999/xlink">positive Filterung</primary></indexterm>
    <indexterm xmlns:xlink="http://www.w3.org/1999/xlink"><primary xmlns:xlink="http://www.w3.org/1999/xlink">Datenvalidierung</primary></indexterm>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Sie sollten niemals annehmen, dass Sie jede Art von
      inkorrekten Eingaben abfangen können, die ein Nutzer
      machen kann. Stattdessen sollte Ihre Anwendung positive
      Filterung verwenden, um nur eine bestimmte Teilmenge an
      Eingaben zuzulassen, die Sie für sicher halten.
      Ungeeignete Datenüberprüfung ist die Ursache
      vieler Exploits, besonders für CGI-Skripte im Internet.
      Bei Dateinamen müssen Sie besonders vorsichtig sein,
      wenn es sich um Pfade ("../", "/"), symbolische
      Verknüpfungen und Shell-Escape-Sequenzen handelt.</para>

    <indexterm xmlns:xlink="http://www.w3.org/1999/xlink"><primary xmlns:xlink="http://www.w3.org/1999/xlink">Perl Taint-Modus</primary></indexterm>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Perl bietet eine wirklich coole Funktion, den sogenannten
      "Taint"-Modus, der verwendet werden kann, um zu verhindern,
      dass Skripte Daten, die von außerhalb des Programmes
      stammen, auf unsichere Art und Weise verwenden. Dieser
      Modus überprüft Kommandozeilenargumente,
      Umgebungsvariablen, Lokalisierungsinformationen, die
      Ergebnisse von Systemaufrufen
      (<function xmlns:xlink="http://www.w3.org/1999/xlink">readdir()</function>,
      <function xmlns:xlink="http://www.w3.org/1999/xlink">readlink()</function>,
      <function xmlns:xlink="http://www.w3.org/1999/xlink">getpwxxx()</function>)
      und alle Dateieingaben.</para>
  </sect1>

  <sect1 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="secure-race-conditions">
    <title xmlns:xlink="http://www.w3.org/1999/xlink">Race-Conditions</title>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Eine Race-Condition ist ein unnormales Verhalten, das von
      einer unerwarteten Abhängigkeit beim Timing von Ereignissen
      verursacht wird. Mit anderen Worten heißt das, ein
      Programmierer nimmt irrtümlicher Weise an, dass ein
      bestimmtes Ereignis immer vor einem anderen stattfindet.</para>

    <indexterm xmlns:xlink="http://www.w3.org/1999/xlink"><primary xmlns:xlink="http://www.w3.org/1999/xlink">Race-Conditions</primary>
    <secondary xmlns:xlink="http://www.w3.org/1999/xlink">Signale</secondary></indexterm>

    <indexterm xmlns:xlink="http://www.w3.org/1999/xlink"><primary xmlns:xlink="http://www.w3.org/1999/xlink">Race-Conditions</primary>
    <secondary xmlns:xlink="http://www.w3.org/1999/xlink">Zugriffsprüfungen</secondary></indexterm>

    <indexterm xmlns:xlink="http://www.w3.org/1999/xlink"><primary xmlns:xlink="http://www.w3.org/1999/xlink">Race-Conditions</primary>
    <secondary xmlns:xlink="http://www.w3.org/1999/xlink">Öffnen von Dateien</secondary></indexterm>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Einige der häufigsten Ursachen für
      Race-Conditions sind Signale, Zugriffsprüfungen und das
      Öffnen von Dateien. Signale sind von Natur aus
      asynchrone Ereignisse, deshalb ist besondere Vorsicht im
      Umgang damit geboten. Das Prüfen des Zugriffs mittels
      der Aufrufe <function xmlns:xlink="http://www.w3.org/1999/xlink">access(2)</function> gefolgt von
      <function xmlns:xlink="http://www.w3.org/1999/xlink">open(2)</function> ist offensichtlich nicht atomar.
      Benutzer können zwischen den beiden Aufrufen Dateien
      verschieben. Stattdessen sollten privilegierte Anwendungen
      <function xmlns:xlink="http://www.w3.org/1999/xlink">seteuid()</function> direkt gefolgt von
      <function xmlns:xlink="http://www.w3.org/1999/xlink">open()</function> aufrufen. Auf die gleiche Art
      sollte eine Anwendung immer eine korrekte Umask vor dem
      Aufruf von <function xmlns:xlink="http://www.w3.org/1999/xlink">open()</function> setzen, um
      störende Aufrufe von <function xmlns:xlink="http://www.w3.org/1999/xlink">chmod()</function> zu
      umgehen.</para>
  </sect1>
</chapter>

    
<!--
     The FreeBSD Documentation Project
     The FreeBSD German Documentation Project

     $FreeBSD$
     $FreeBSDde: de-docproj/books/developers-handbook/l10n/chapter.xml,v 1.15 2010/12/15 19:03:51 bcr Exp $
     basiert auf: 1.14
-->
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="l10n">
  <info><title xmlns:xlink="http://www.w3.org/1999/xlink">Lokalisierung und Internationalisierung - L10N und
    I18N</title>
    <authorgroup xmlns:xlink="http://www.w3.org/1999/xlink">
      <author xmlns:xlink="http://www.w3.org/1999/xlink"><personname xmlns:xlink="http://www.w3.org/1999/xlink"><firstname xmlns:xlink="http://www.w3.org/1999/xlink">Jochen</firstname><surname xmlns:xlink="http://www.w3.org/1999/xlink">Neumeister</surname></personname><contrib xmlns:xlink="http://www.w3.org/1999/xlink">Übersetzt von </contrib></author>
    </authorgroup>
  </info>

  

  <sect1 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="l10n-programming">
    <title xmlns:xlink="http://www.w3.org/1999/xlink">I18N-konforme Anwendungen programmieren</title>

    <indexterm xmlns:xlink="http://www.w3.org/1999/xlink"><primary xmlns:xlink="http://www.w3.org/1999/xlink">Qt</primary></indexterm>
    <indexterm xmlns:xlink="http://www.w3.org/1999/xlink"><primary xmlns:xlink="http://www.w3.org/1999/xlink">GTK</primary></indexterm>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Um Ihre Anwendung verwendbarer für andere
      Sprachen zu machen, hoffen wir, dass Sie I18N-konform
      programmieren. Der GNU gcc-Compiler und Bibliotheken
      für grafische Benutzeroberflächen wie QT und GTK
      unterstützen I18N durch eine spezielle Verarbeitung von
      Zeichenketten. Das Erstellen eines I18N-konformen Programms
      ist sehr einfach und erlaubt anderen Mitwirkenden, Ihre
      Programme leichter in andere Sprachen zu übersetzen.
      Lesen Sie die Bibliothek-spezifischen I18N-Dokumentationen
      für weitere Details.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Im Gegensatz zur allgemeinen Meinung ist I18N-konformer
      Code einfach zu programmieren. Üblicherweise umfasst
      dies nur das Einbetten Ihrer Zeichenketten in
      Bibliothek-spezifische Funktionen. Stellen Sie außerdem
      bitte sicher, dass Sie Unterstützung für Unicode- und
      Multibyte-Zeichen vorsehen.</para>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Ein Aufruf, die I18N-Bemühungen zu
	vereinheitlichen</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Wir sind darauf aufmerksam geworden, dass die
	einzelnen I18N-/L10N-Bemühungen für jedes Land
	wiederholt wurden. Viele von uns haben somit unproduktiverweise
	das Rad immer wieder neu erfunden. Wir hoffen, dass die
	verschiedenen großen Gruppen für I18N Ihre
	Bemühungen in einer Gruppe vereinen können,
	ähnlich der Zuständigkeit des Core-Teams.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Derzeit hoffen wir, dass wenn Sie I18N-konforme
	Programme schreiben oder portieren, diese an die
	betreffenden FreeBSD-Mailinglisten jedes Landes schicken, um
	sie testen zu lassen. Wir hoffen in Zukunft, Anwendungen zu
	entwickeln, die in allen Sprachen direkt und ohne unsaubere
	Änderungen funktionieren.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Die <link xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://lists.FreeBSD.org/mailman/listinfo/freebsd-i18n">FreeBSD
  internationalization</link>-Mailingliste ist eingerichtet worden. Wenn
	Sie I18N-/L10N-Entwickler sind, schicken Sie bitte Ihre
	Kommentare, Ideen, Fragen und alles, das Sie mit dem Thema in
	Verbindung bringen, dorthin.</para>
    </sect2>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Perl und Python</title>

      <indexterm xmlns:xlink="http://www.w3.org/1999/xlink">
	<primary xmlns:xlink="http://www.w3.org/1999/xlink">Perl</primary>
      </indexterm>

      <indexterm xmlns:xlink="http://www.w3.org/1999/xlink">
	<primary xmlns:xlink="http://www.w3.org/1999/xlink">Python</primary>
      </indexterm>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Perl und Python bieten Bibliotheken für I18N und zur
	Behandlung von Unicode-Zeichen. Bitte nutzen Sie diese
	für I18N-Konformität.</para>

    </sect2>
  </sect1>

  <sect1 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="posix-nls">
    <info><title xmlns:xlink="http://www.w3.org/1999/xlink">Lokalisierte Nachrichten mit POSIX.1 Native Language
      Support (NLS)</title>
      <authorgroup xmlns:xlink="http://www.w3.org/1999/xlink">
        <author xmlns:xlink="http://www.w3.org/1999/xlink"><personname xmlns:xlink="http://www.w3.org/1999/xlink"><firstname xmlns:xlink="http://www.w3.org/1999/xlink">Gábor</firstname><surname xmlns:xlink="http://www.w3.org/1999/xlink">Kövesdán</surname></personname><contrib xmlns:xlink="http://www.w3.org/1999/xlink">Beigetragen von </contrib></author>
      </authorgroup>
    </info>

    

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Über die Basisfunktionen von I18N hinaus, wie das Bereitstellen
      von verschiedenen Eingabecodierungen oder die diversen nationalen
      Konventionen, zum Beispiel die verschiedenen Dezimalpunkte, ist es
      auf einem höheren Level von I18N möglich, die Ausgabe
      von Programmen zu lokalisieren.  Ein Weg dies zu tun besteht in der
      Nutzung der POSIX.1 NLS-Funktionen von FreeBSD.</para>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="nls-catalogs">
    <title xmlns:xlink="http://www.w3.org/1999/xlink">Organisation von lokalisierten Mitteilungen in Katalog
          Dateien</title>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">POSIX.1 NLS basiert auf Katalogdateien, welche die lokalisierten
      Mitteilungen in der entsprechenden Codierung enthalten.  Die
      Mitteilungen sind in Sets organisiert und jede Mitteilung ist
      durch eine eindeutige Zahl in dem jeweiligen Set identifiziert.
      Die Katalogdateien werden nach der Lokale, von den jeweiligen
      lokalisierten Mitteilungen, die sie enthalten, gefolgt von der
      <literal xmlns:xlink="http://www.w3.org/1999/xlink">.msg</literal> Endung benannt. Zum Beispiel werden die
      ungarischen Mitteilungen für das ISO8859-2  Encoding in
      einer Datei mit dem Dateinamen <filename xmlns:xlink="http://www.w3.org/1999/xlink">hu_HU.ISO8859-2</filename>
      gespeichert.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Diese Katalogdateien sind normale Textdateien, welche die
      nummerierten Mitteilungen enthalten.  Es ist möglich
      Kommentare in die Dateien zu schreiben, indem Sie ein
      <literal xmlns:xlink="http://www.w3.org/1999/xlink">$</literal>-Zeichen an den Anfang der Zeile setzen.
      Das Setzen von Grenzen wird ebenfalls durch spezielle Kommentare
      möglich wobei das Schlüsselwort <literal xmlns:xlink="http://www.w3.org/1999/xlink">set</literal>
      direkt nach dem <literal xmlns:xlink="http://www.w3.org/1999/xlink">$</literal>-Zeichen folgen muss.  Dem
      Schlüsselwort <literal xmlns:xlink="http://www.w3.org/1999/xlink">set</literal> folgt dann die Set-Nummer.
      Ein Beispiel:</para>

    <programlisting xmlns:xlink="http://www.w3.org/1999/xlink">$set 1</programlisting>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Der aktuelle Mitteilungseintrag startet mit der
      Mitteilungsnummer gefolgt von der lokalisierten Nachricht.  Die
      bekannten Modifikatoren von <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">printf</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">3</manvolnum></citerefentry> werden akzeptiert:</para>

    <programlisting xmlns:xlink="http://www.w3.org/1999/xlink">15 "File not found: %s\n"</programlisting>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Die Katalogdateien müssen in binärer Form vorliegen,
      bevor sie von einem Programm benutzt werden können.  Dies wird
      mit dem <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">gencat</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">1</manvolnum></citerefentry> Tool durchgeführt.  Das erste Argument
      ist der Dateiname des kompilierten Katalogs und die weiteren
      Argumente sind die Eingabekataloge.  Die lokalisierten
      Mitteilungen können auf mehrere Katalogdateien aufgeteilt
      sein.  Danach werden dann alle auf einmal mit dem <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">gencat</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">1</manvolnum></citerefentry>
      Tool kompiliert.</para>

  </sect2>

  <sect2 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="nls-using">
    <title xmlns:xlink="http://www.w3.org/1999/xlink">Nutzung der Katalogdateien im Quellcode</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Das Benutzen der Katalogdateien ist einfach.  Um die
        relevante Funktion zu nutzen, muss <filename xmlns:xlink="http://www.w3.org/1999/xlink">nl_types.h</filename> in die Quelldatei
        eingefügt werden.  Bevor ein Katalog benutzt werden
        kann, muss er mit <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">catopen</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">3</manvolnum></citerefentry> geöffnet werden.
        Die Funktion hat 2 Argumente.  Der erste Parameter ist der
        Name des installierten und kompilierten Katalogs.  Normalerweise
        wird der Name des Programmes, zum Beispiel
        <application xmlns:xlink="http://www.w3.org/1999/xlink">grep</application>, genutzt.  Dieser Name wird
        zum Suchen der kompilierten Katalogdatei benutzt.  Der Aufruf
        von <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">catopen</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">3</manvolnum></citerefentry> sucht nach dieser Datei in <filename xmlns:xlink="http://www.w3.org/1999/xlink">/usr/share/nls/locale/catname</filename>
        und in <filename xmlns:xlink="http://www.w3.org/1999/xlink">/usr/local/share/nls/locale/catname</filename>,
        wobei <literal xmlns:xlink="http://www.w3.org/1999/xlink">locale</literal> die gesetzte Lokale und
        <literal xmlns:xlink="http://www.w3.org/1999/xlink">catname</literal> der Katalogname ist.  Der zweite
        Parameter ist eine Konstante, die zwei Werte haben kann:</para>

      <itemizedlist xmlns:xlink="http://www.w3.org/1999/xlink">
        <listitem xmlns:xlink="http://www.w3.org/1999/xlink">

          <para xmlns:xlink="http://www.w3.org/1999/xlink"><literal xmlns:xlink="http://www.w3.org/1999/xlink">NL_CAT_LOCALE</literal>, hat die Bedeutung,
            dass die benutzte Katalogdatei auf
            <envar xmlns:xlink="http://www.w3.org/1999/xlink">LC_MESSAGES</envar> basiert.</para>

        </listitem>

        <listitem xmlns:xlink="http://www.w3.org/1999/xlink">

          <para xmlns:xlink="http://www.w3.org/1999/xlink"><literal xmlns:xlink="http://www.w3.org/1999/xlink">0</literal>, hat die Bedeutung, dass
            <envar xmlns:xlink="http://www.w3.org/1999/xlink">LANG</envar> benutzt wird, um die Katalogdatei
            zu öffnen.
          </para>

        </listitem>
      </itemizedlist>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Der <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">catopen</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">3</manvolnum></citerefentry> Aufruf gibt einen Katalogidentifizierer
        vom Type <literal xmlns:xlink="http://www.w3.org/1999/xlink">nl_catd</literal> zurück.  Sehen Sie in der
        Manualpage nach, um eine Liste mit möglichen Fehlercodes
        zu erhalten.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Nach dem Öffnen eines Katalogs, kann <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">catgets</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">3</manvolnum></citerefentry>
        benutzt werden, um Mitteilungen zu erhalten.  Der erste
        Parameter ist der Katalogidentifizierer, der von
        <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">catopen</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">3</manvolnum></citerefentry> zurück gegeben wurde, das zweite ist die
        Nummer des Sets, das dritte die Nummer der Mitteilung und das
        vierte ist eine Fallbackmitteilung, die angezeigt wird,
        falls die gewünschte Mitteilung in der Katalogdatei
        nicht verfügbar ist.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Nach der Nutzung der Katalogdatei, muss sie mit dem
        Kommando <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">catclose</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">3</manvolnum></citerefentry>, geschlossen werden.  Es besitzt
        ein Argument, die Katalog ID.</para>

    </sect2>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="nls-example">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Ein Beispiel aus der Praxis</title>

        <para xmlns:xlink="http://www.w3.org/1999/xlink">Das folgende Beispiel zeigt einen einfachen Weg wie man
          NLS-Kataloge flexibel nutzen kann.</para>

        <para xmlns:xlink="http://www.w3.org/1999/xlink">Die nachfolgenden Zeilen müssen in eine allgemeine
          Headerdatei, die in allen Quelldateien vorhanden ist, die
          lokalisierte Mitteilungen benutzen, eingefügt werden:</para>

        <programlisting xmlns:xlink="http://www.w3.org/1999/xlink">
#ifdef WITHOUT_NLS
#define getstr(n)         nlsstr[n]
#else
#include &lt;nl_types.h&gt;

extern nl_catd            catalog;
#define getstr(n)         catgets(catalog, 1, n, nlsstr[n])
#endif

extern char              *nlsstr[];
        </programlisting>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Als nächstes fügen Sie die folgenden Zeilen
	  in den globalen Deklarationsteil der Hauptquelldatei ein:</para>

	<programlisting xmlns:xlink="http://www.w3.org/1999/xlink">
#ifndef WITHOUT_NLS
#include &lt;nl_types.h&gt;
nl_catd   catalog;
#endif

/*
* Default messages to use when NLS is disabled or no catalog
* is found.
*/
char    *nlsstr[] = {
        "",
/* 1*/  "some random message",
/* 2*/  "some other message"
};
	</programlisting>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Als nächstes kommt der Code der den Katalog
	  öffnet, liest und schließt:</para>

	<programlisting xmlns:xlink="http://www.w3.org/1999/xlink">
#ifndef WITHOUT_NLS
 catalog = catopen("myapp", NL_CAT_LOCALE);
#endif

...

printf(getstr(1));

...

#ifndef WITHOUT_NLS
 catclose(catalog);
#endif
	</programlisting>

	<sect3 xmlns:xlink="http://www.w3.org/1999/xlink">
	<title xmlns:xlink="http://www.w3.org/1999/xlink">Reduzierung von zu lokalisierenden Zeichenketten</title>

	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Es gibt einen guten Weg, Zeichenketten die lokaliesert
	    werden müssen, durch den Einsatz von
	    <application xmlns:xlink="http://www.w3.org/1999/xlink">libc</application>-Fehlermeldungen zu reduzieren.
	    Dadurch vermeidet man Duplikate und erstellt gleiche Meldungen
	    für häufige Fehlermeldungen, die bei vielen
	    Programmen auftreten können.</para>

	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Als erstes ist hier ein Beispiel, dass keine
	    <application xmlns:xlink="http://www.w3.org/1999/xlink">libc</application>-Fehlermeldungen benutzt:</para>

	  <programlisting xmlns:xlink="http://www.w3.org/1999/xlink">
#include &lt;err.h&gt;
...
if (!S_ISDIR(st.st_mode))
 err(1, "argument is not a directory");
	  </programlisting>

	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Dies kann so abgeändert werden, dass eine
	    Fehlermeldung durch Auslesen der Variabel <varname xmlns:xlink="http://www.w3.org/1999/xlink">errno</varname>
	    ausgegeben wird.  Die Fehlermeldung wird entsprechend dem Beispiel
	    ausgegeben:</para>

	  <programlisting xmlns:xlink="http://www.w3.org/1999/xlink">
#include &lt;err.h&gt;
#include &lt;errno.h&gt;
...
if (!S_ISDIR(st.st_mode)) {
 errno = ENOTDIR;
 err(1, NULL);
}
	  </programlisting>

	  <para xmlns:xlink="http://www.w3.org/1999/xlink">In diesem Beispiel wurde die benutzerdefinierte
	    Zeichenkette entfernt. Übersetzer haben weniger Arbeit,
	    wenn sie ein Programm lokalisieren und die Benutzer sehen die
	    übliche <quote xmlns:xlink="http://www.w3.org/1999/xlink">"Not a directory"</quote>
	    Fehlermeldung, wenn dieser Fehler auftritt.  Diese Meldung wird
	    ihnen wahrscheinlich vertraut erscheinen.  Bitte beachten Sie,
	    dass es notwendig ist,
	    <filename xmlns:xlink="http://www.w3.org/1999/xlink">errno.h</filename>
	    hinzuzufügen um einen direkten Zugriff auf
	    <varname xmlns:xlink="http://www.w3.org/1999/xlink">errno</varname> zu haben.</para>

	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Es lohnt sich darauf hinzuweisen, dass es Fälle gibt,
	    in denen <varname xmlns:xlink="http://www.w3.org/1999/xlink">errno</varname> automatisch aufgerufen wird,
	    so dass es nicht notwendig ist, es explizit zu tun:</para>

	  <programlisting xmlns:xlink="http://www.w3.org/1999/xlink">
#include &lt;err.h&gt;
...
if ((p = malloc(size)) == NULL)
 err(1, NULL);
	  </programlisting>
	</sect3>
      </sect2>

      <sect2 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="nls-mk">
        <title xmlns:xlink="http://www.w3.org/1999/xlink">Benutzung von <filename xmlns:xlink="http://www.w3.org/1999/xlink">bsd.nls.mk</filename></title>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Das Benutzen von Katalogdateien setzt einige sich
	  wiederholende Schritte, wie das kompilieren und installieren
	  der Kataloge, voraus.  Um diese Schritte zu vereinfachen,
	  stellt <filename xmlns:xlink="http://www.w3.org/1999/xlink">bsd.nls.mk</filename> einige Makros zur
	  Verfügung. Es ist nicht notwendig
	  <filename xmlns:xlink="http://www.w3.org/1999/xlink">bsd.nls.mk</filename> explizit hinein zu kopieren,
	  es wird automatisch aus den allgemeinen Makefiles wie
	  <filename xmlns:xlink="http://www.w3.org/1999/xlink">bsd.prog.mk</filename> oder
	  <filename xmlns:xlink="http://www.w3.org/1999/xlink">bsd.lib.mk</filename> gezogen.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Normalerweise reicht es, <varname xmlns:xlink="http://www.w3.org/1999/xlink">NLSNAME</varname> zu
	  definieren, die den Namen des Kataloges als erstes
	  Argument von <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">catopen</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">3</manvolnum></citerefentry> enthalten sollte und die
	  Katalogdateien in <varname xmlns:xlink="http://www.w3.org/1999/xlink">NLS</varname> ohne ihre Endung
	  <literal xmlns:xlink="http://www.w3.org/1999/xlink">.msg</literal> auflistet.  Hier ist ein Beispiel, das
	  es ermöglicht, NLS mit dem obigen Code zu deaktivieren.
	  Die <varname xmlns:xlink="http://www.w3.org/1999/xlink">WITHOUT_NLS</varname> Variable von <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">make</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">1</manvolnum></citerefentry>
	  muss so definiert werden, dass das Programm ohne
	  NLS-Unterstützung gebaut wird.</para>

	<programlisting xmlns:xlink="http://www.w3.org/1999/xlink">
.if !defined(WITHOUT_NLS)
NLS=     es_ES.ISO8859-1
NLS+=    hu_HU.ISO8859-2
NLS+=    pt_BR.ISO8859-1
.else
CFLAGS+= -DWITHOUT_NLS
.endif
	</programlisting>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Normalerweise werden die Katalogdateien in dem
	  <filename xmlns:xlink="http://www.w3.org/1999/xlink">nls</filename>-Unterverzeichnis
	  abgelegt.  Dies ist der Standard von
	  <filename xmlns:xlink="http://www.w3.org/1999/xlink">bsd.nls.mk</filename>.  Es ist möglich, mit der
	  <varname xmlns:xlink="http://www.w3.org/1999/xlink">NLSSRCDIR</varname>-Variablen von <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">make</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">1</manvolnum></citerefentry> diese zu
	  überschreiben.  Der Standardname der vorkompilierten
	  Katalogdateien folgt den Namenskonventionen, wie oben beschrieben.
	  Er kann durch die <varname xmlns:xlink="http://www.w3.org/1999/xlink">NLSNAME</varname>-Variablen
	  überschrieben werden.  Es gibt noch weitere Optionen, um
	  eine Feinabstimmung zur Verarbeitung der Katalogdateien
	  zu erreichen.  Da sie nicht notwendig sind, werden sie hier
	  nicht weiter beschrieben.  Weitere Informationen über
	  <filename xmlns:xlink="http://www.w3.org/1999/xlink">bsd.nls.mk</filename> finden Sie in der Datei selbst.
	  Der Text ist kurz und leicht zu verstehen.</para>

      </sect2>

    </sect1>

</chapter>

    
<!--
     The FreeBSD Documentation Project
     The FreeBSD German Documentation Project

     $FreeBSD$
     $FreeBSDde: de-docproj/books/developers-handbook/policies/chapter.xml,v 1.14 2011/12/24 13:42:24 bcr Exp $
     basiert auf: 1.38
-->
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="policies">
  <info><title xmlns:xlink="http://www.w3.org/1999/xlink">Vorgaben und Richtlinien für das
    Quelltextverzeichnis</title>
    <authorgroup xmlns:xlink="http://www.w3.org/1999/xlink">
      <author xmlns:xlink="http://www.w3.org/1999/xlink"><personname xmlns:xlink="http://www.w3.org/1999/xlink"><firstname xmlns:xlink="http://www.w3.org/1999/xlink">Poul-Henning</firstname><surname xmlns:xlink="http://www.w3.org/1999/xlink">Kamp</surname></personname><contrib xmlns:xlink="http://www.w3.org/1999/xlink">Beigesteuert von </contrib></author>
      <author xmlns:xlink="http://www.w3.org/1999/xlink"><personname xmlns:xlink="http://www.w3.org/1999/xlink"><firstname xmlns:xlink="http://www.w3.org/1999/xlink">Giorgos</firstname><surname xmlns:xlink="http://www.w3.org/1999/xlink">Keramidas</surname></personname></author>
    </authorgroup>
    
    <authorgroup xmlns:xlink="http://www.w3.org/1999/xlink">
      <author xmlns:xlink="http://www.w3.org/1999/xlink"><personname xmlns:xlink="http://www.w3.org/1999/xlink"><firstname xmlns:xlink="http://www.w3.org/1999/xlink">Axel</firstname><surname xmlns:xlink="http://www.w3.org/1999/xlink">Gruner</surname></personname><contrib xmlns:xlink="http://www.w3.org/1999/xlink">Übersetzt von </contrib></author>
    </authorgroup>
  </info>

  

  <para xmlns:xlink="http://www.w3.org/1999/xlink">Dieses Kapitel dokumentiert verschiedene Vorgaben und
    Richtlinien für das FreeBSD-Quelltextverzeichnis.</para>

  <sect1 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="policies-style">
    <title xmlns:xlink="http://www.w3.org/1999/xlink">Stil-Richtlinien</title>
    <indexterm xmlns:xlink="http://www.w3.org/1999/xlink"><primary xmlns:xlink="http://www.w3.org/1999/xlink">style</primary></indexterm>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Ein konsistenter Code-Stil ist extrem wichtig, besonders
      in einem so grossen Projekt wie FreeBSD.  Der Code sollte dem
      FreeBSD Code-Stil entsprechen, welcher in <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">style</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">9</manvolnum></citerefentry> und
      <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">style.Makefile</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">5</manvolnum></citerefentry> genauer beschrieben ist.</para>
  </sect1>

  <sect1 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="policies-maintainer">
    <title xmlns:xlink="http://www.w3.org/1999/xlink"><varname xmlns:xlink="http://www.w3.org/1999/xlink">MAINTAINER</varname> eines Makefiles</title>
    <indexterm xmlns:xlink="http://www.w3.org/1999/xlink"><primary xmlns:xlink="http://www.w3.org/1999/xlink">Ports-Maintainer</primary></indexterm>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Wenn ein bestimmter Bereich der FreeBSD
      <filename xmlns:xlink="http://www.w3.org/1999/xlink">src/</filename>-Distribution von einer Person oder Gruppe
      gepflegt wird, kann dies durch einen Eintrag in die Datei
      <filename xmlns:xlink="http://www.w3.org/1999/xlink">src/MAINTAINERS</filename> der Öffentlichkeit
      mitgeteilt werden.  Maintainer eines Ports in der Ports-Sammlung
      können ihre Verantwortung über den Port durch einen Eintrag in
      die <varname xmlns:xlink="http://www.w3.org/1999/xlink">MAINTAINER</varname>-Zeile im <filename xmlns:xlink="http://www.w3.org/1999/xlink">Makefile</filename>
      des Ports der Welt mitteilen.</para>

    <programlisting xmlns:xlink="http://www.w3.org/1999/xlink"><varname xmlns:xlink="http://www.w3.org/1999/xlink">MAINTAINER</varname>= <replaceable xmlns:xlink="http://www.w3.org/1999/xlink">email-addresses</replaceable></programlisting>

    <tip xmlns:xlink="http://www.w3.org/1999/xlink">
      <para xmlns:xlink="http://www.w3.org/1999/xlink">Für andere Teile des Repositories oder andere Abschnitte, die
        noch keinen Maintainer aufweisen, oder falls Sie sich nicht sicher
        sind, wer der Maintainer ist, sehen Sie sich die Commit-Historie des
        betreffenden Ports an.  Es ist recht häufig der Fall, dass ein
        Maintainer nicht explizit aufgeführt ist, aber trotzdem diejenigen
        Personen, die den Port seit den letzten paar Jahren aktiv betreuen,
        daran interessiert sind, Änderungen zu begutachten.  Selbst wenn
        dies nicht explizit in der Dokumentation oder im Quellcode erwähnt
        ist, wird es trotzdem als höfliche Geste angesehen, wenn man
        nach einer Überprüfung der eigenen Änderungen
        fragt.</para>
    </tip>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Die Rolle eines Maintainers ist die folgende:</para>

    <itemizedlist xmlns:xlink="http://www.w3.org/1999/xlink">
      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
        <para xmlns:xlink="http://www.w3.org/1999/xlink">Der Maintainer ist verantwortlich für diesen Code.  Er
          oder sie muss einerseits für die Behebung von Fehlern und das
          Beantworten von Problemberichten für diesen Code die
          Verantwortung tragen und andererseits, falls es sich um beigesteuerte
          Software handelt, neue Versionen verfolgen und bereitstellen.</para>
      </listitem>

      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
        <para xmlns:xlink="http://www.w3.org/1999/xlink">Änderungen an Verzeichnissen, die ein Maintainer definiert
          hat, sollten an den Maintainer für eine Überprüfung
          gesendet werden, bevor diese committet werden. Nur wenn der
          Maintainer in einer inakzeptablen Zeitspanne auf mehrere E-Mails
          nicht antwortet, können die Änderungen, die mit dem Commit
          in Kraft treten, auch ohne Überprüfung durch den Maintainer
          vollzogen werden.  Dennoch wird empfohlen, dass die Änderungen,
          falls möglich, von jemand anderem überprüft
          werden.</para>
      </listitem>

      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
        <para xmlns:xlink="http://www.w3.org/1999/xlink">Es ist natürlich nicht akzeptabel, einer Person oder Gruppe
          den Status eines Maintainers zu geben, so lange sie nicht zustimmt,
          diese Pflicht auf sich zu nehmen. Andererseits muss es kein einzelner
          Mensch sein. Eine Gruppe von Menschen ist genauso in Ordnung.</para>
      </listitem>
    </itemizedlist>
  </sect1>

  <sect1 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="policies-contributed">
    <info><title xmlns:xlink="http://www.w3.org/1999/xlink">Beigesteuerte Software</title>
      <authorgroup xmlns:xlink="http://www.w3.org/1999/xlink">
	<author xmlns:xlink="http://www.w3.org/1999/xlink"><personname xmlns:xlink="http://www.w3.org/1999/xlink"><firstname xmlns:xlink="http://www.w3.org/1999/xlink">Poul-Henning</firstname><surname xmlns:xlink="http://www.w3.org/1999/xlink">Kamp</surname></personname><contrib xmlns:xlink="http://www.w3.org/1999/xlink">Beigesteuert von </contrib></author>
	<author xmlns:xlink="http://www.w3.org/1999/xlink"><personname xmlns:xlink="http://www.w3.org/1999/xlink"><firstname xmlns:xlink="http://www.w3.org/1999/xlink">David</firstname><surname xmlns:xlink="http://www.w3.org/1999/xlink">O'Brien</surname></personname></author>
	<author xmlns:xlink="http://www.w3.org/1999/xlink"><personname xmlns:xlink="http://www.w3.org/1999/xlink"><firstname xmlns:xlink="http://www.w3.org/1999/xlink">Gavin</firstname><surname xmlns:xlink="http://www.w3.org/1999/xlink">Atkinson</surname></personname></author>
      </authorgroup>
      
    </info>

    

    <indexterm xmlns:xlink="http://www.w3.org/1999/xlink"><primary xmlns:xlink="http://www.w3.org/1999/xlink">Beigesteuerte Software</primary></indexterm>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Einige Teile der FreeBSD-Distribution enthalten Software,
      die aktiv außerhalb des FreeBSD-Projektes gepflegt wird.
      Aus historischen Gründen nennen wir dies
      <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">contributed</emphasis> Software. Beispiele dafür
      sind <application xmlns:xlink="http://www.w3.org/1999/xlink">sendmail</application>,
      <application xmlns:xlink="http://www.w3.org/1999/xlink">gcc</application> und
      <application xmlns:xlink="http://www.w3.org/1999/xlink">patch</application>.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Über die Jahre wurden verschiedene Methoden genutzt,
      um solche Software zu verwalten, und jede hat Vor-
      wie auch Nachteile. So hat sich kein eindeutiger Gewinner
      herauskristallisiert.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Es wurde viel über diesen Umstand diskutiert und
      eine Methode als die <quote xmlns:xlink="http://www.w3.org/1999/xlink">offizielle</quote>
      vorgestellt, um in Zukunft diese Art der Software zu
      importieren. Ferner wird dringend geraten, dass sich
      existierende, beigesteuerte Software diesem Modell
      annähert, da es signifikante Vorteile gegenüber der
      alten Methode gibt. Dazu gehört auch, dass jeder
      einfach Diffs bezüglich der
      <quote xmlns:xlink="http://www.w3.org/1999/xlink">offiziellen</quote> Quelltext-Versionen erzeugen kann
      (auch ohne direkten Repository-Zugang). Dies wird es deutlich
      vereinfachen, Änderungen an die Hauptentwickler
      zurückfließen zu lassen.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Letztendlich kommt es jedoch auf die Menschen an, welche die
      Arbeit leisten. Wenn die Durchführung dieses Modells bei
      einem Paket mal nicht möglich ist, können Ausnahmen
      dieser Regeln nur mit Genehmigung des Core-Teams und der
      Übereinstimmung der anderen Entwickler gewährt werden.
      Die Fähigkeit, dieses Paket auch in Zukunft pflegen zu
      können, ist eine der Schlüsselfragen bei dieser
      Entscheidung.</para>

    <note xmlns:xlink="http://www.w3.org/1999/xlink">
      <para xmlns:xlink="http://www.w3.org/1999/xlink">Durch einige bedauernswerte Einschränkungen des <acronym xmlns:xlink="http://www.w3.org/1999/xlink" role="Revision Control System">RCS</acronym>-Dateiformats und die
        Handhabung von Herstellerzweigen ist von unwesentlichen, trivialen
        und/oder kosmetischen Änderungen an Dateien <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">dringend
	abzuraten</emphasis>, die dem Herstellerzweig folgen.
	<quote xmlns:xlink="http://www.w3.org/1999/xlink">Grammatikalische oder sprachliche
	Fehlerbehebungen</quote> sind explizit unter der
	<quote xmlns:xlink="http://www.w3.org/1999/xlink">Kosmetik</quote>-Kategorie einzuordnen und sollten vermieden
	werden.  Das Repository kann sich durch Änderungen einzelner
	Zeichen dramatisch aufblähen.</para>
    </note>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="vendor-imports-cvs">

     <title xmlns:xlink="http://www.w3.org/1999/xlink">Herstellerimports mit CVS</title>

     <para xmlns:xlink="http://www.w3.org/1999/xlink">Das <application xmlns:xlink="http://www.w3.org/1999/xlink">file</application>-Werkzeug soll als Beispiel
       dienen, wie dieses Modell funktioniert:</para>

     <para xmlns:xlink="http://www.w3.org/1999/xlink"><filename xmlns:xlink="http://www.w3.org/1999/xlink">src/contrib/file</filename> enthält den
      Quelltext so, wie vom Maintainer dieses Pakets bereitgestellt.
      Teile, die unter FreeBSD gänzlich unnutzbar sind, können entfernt
      werden. Im Fall von <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">file</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">1</manvolnum></citerefentry> wurde u.a. das Unterverzeichnis
      <filename xmlns:xlink="http://www.w3.org/1999/xlink">python</filename> und Dateien mit dem Präfix
      <filename xmlns:xlink="http://www.w3.org/1999/xlink">lt</filename> vor dem Import entfernt.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink"><filename xmlns:xlink="http://www.w3.org/1999/xlink">src/lib/libmagic</filename> enthält ein
      <filename xmlns:xlink="http://www.w3.org/1999/xlink">Makefile</filename> im <application xmlns:xlink="http://www.w3.org/1999/xlink">bmake</application>-Stil,
      das die Regeln des Standard-Makefiles <filename xmlns:xlink="http://www.w3.org/1999/xlink">bsd.lib.mk</filename>
      nutzt, um die Bibliothek zu erstellen und die Dokumentation zu
      installieren.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink"><filename xmlns:xlink="http://www.w3.org/1999/xlink">src/usr.bin/file</filename> enthält ein
      <filename xmlns:xlink="http://www.w3.org/1999/xlink">Makefile</filename> im <application xmlns:xlink="http://www.w3.org/1999/xlink">bmake</application>-Stil,
      welches das <command xmlns:xlink="http://www.w3.org/1999/xlink">file</command>-Programm erstellt und installiert,
      ebenso die dazugehörigen Manualpages, welche die Regeln von
      <filename xmlns:xlink="http://www.w3.org/1999/xlink">bsd.prog.mk</filename> nutzen.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Das Entscheidende ist hier das
      <filename xmlns:xlink="http://www.w3.org/1999/xlink">src/contrib/file</filename>-Verzeichnis, welches nach
      den folgenden Regeln erstellt wird: Es muss den
      Quelltext aus dem Original enthalten (ohne
      <acronym xmlns:xlink="http://www.w3.org/1999/xlink">RCS</acronym>-Schlüsselworte und im korrekten
      Herstellerzweig) mit so wenig FreeBSD-spezifischen Änderungen wie
      möglich. Sollte es Zweifel geben, wie hier zu verfahren
      ist, unbedingt zuerst nachfragen und nicht auf gut Glück etwas
      probieren in der vagen Hoffnung, dass es
      <quote xmlns:xlink="http://www.w3.org/1999/xlink">irgendwie funktioniert</quote>.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Aufgrund der eingangs schon erwähnten Einschränkungen
      bei Herstellerzweigen ist es erforderlich, dass <quote xmlns:xlink="http://www.w3.org/1999/xlink">offizielle</quote>
      Fehlerbehebungen vom Hersteller in die Originalquellen der Distribution
      einfließen und als Resultat wieder in den Herstellerzweig
      importiert werden.  Offizielle Fehlerbehebungen sollten nie direkt in
      FreeBSD eingepflegt und <quote xmlns:xlink="http://www.w3.org/1999/xlink">committet</quote> werden, da dies
      den Herstellerzweig zerstören würde und der Import
      von zukünftigen Versionen wäre um ein Vielfaches
      schwerer, da es zu Konflikten kommen würde.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Da einige Pakete Dateien enthalten, die zur
      Kompatibilität mit anderen Architekturen und Umgebungen
      als FreeBSD gedacht sind, ist es zulässig, diese Teile zu
      löschen, wenn sie für FreeBSD nicht von Interesse
      sind, und so Speicherplatz zu sparen. Dateien, die ein
      Copyright und Release-artige Informationen zu den vorhandenen
      Dateien enthalten, sollten <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">nicht</emphasis>
      gelöscht werden.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Falls es einfacher erscheint, können die
      <command xmlns:xlink="http://www.w3.org/1999/xlink">bmake</command>-<filename xmlns:xlink="http://www.w3.org/1999/xlink">Makefile</filename>s vom
      Verzeichnisbaum durch einige Dienstprogramme automatisch
      erstellt werden, was es hoffentlich sogar noch einfacher macht,
      eine Version zu aktualisieren. Ist dies geschehen, so stellen
      Sie bitte sicher, diese Werkzeuge in das Verzeichnis
      <filename xmlns:xlink="http://www.w3.org/1999/xlink">src/tools</filename> gleich mit dem Port an sich
      einzuchecken, sodass es für zukünftige Maintainer
      verfügbar ist.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Im Verzeichnis <filename xmlns:xlink="http://www.w3.org/1999/xlink">src/contrib/file</filename> sollte
      eine Datei mit dem Namen <filename xmlns:xlink="http://www.w3.org/1999/xlink">FREEBSD-upgrade</filename>
      hinzugefügt werden und sie sollte den Stand wie folgt
      anzeigen:</para>

    <itemizedlist xmlns:xlink="http://www.w3.org/1999/xlink">
      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Welche Dateien ausgelassen wurden.</para>
      </listitem>

      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Von wo die Original-Distribution stammt und/oder wo die
	  offizielle Hauptseite zu finden ist.</para>
      </listitem>

      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Wohin Fehlerbehebungen an den Originalautor gesendet
	  werden können.</para>
      </listitem>

      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Möglicherweise eine Übersicht, welche
	  FreeBSD-spezifischen Änderungen vorgenommen
	  wurden.</para>
      </listitem>
    </itemizedlist>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Ein Beispielinhalt von
      <filename xmlns:xlink="http://www.w3.org/1999/xlink">src/contrib/groff/FREEBSD-upgrade</filename> ist hier
      aufgelistet:</para>

    <programlisting xmlns:xlink="http://www.w3.org/1999/xlink">$FreeBSD: src/contrib/groff/FREEBSD-upgrade,v 1.5.12.1 2005/11/15 22:06:18 ru Exp $

This directory contains virgin sources of the original distribution files
on a "vendor" branch.  Do not, under any circumstances, attempt to upgrade
the files in this directory via patches and a cvs commit.

To upgrade to a newer version of groff, when it is available:
        1. Unpack the new version into an empty directory.
           [Do not make ANY changes to the files.]

        2. Use the command:
                cvs import -m 'Virgin import of FSF groff v&lt;version&gt;' \
                        src/contrib/groff FSF v&lt;version&gt;

           For example, to do the import of version 1.19.2, I typed:
                cvs import -m 'Virgin import of FSF groff v1.19.2' \
                        src/contrib/groff FSF v1_19_2

        3. Follow the instructions printed out in step 2 to resolve any
           conflicts between local FreeBSD changes and the newer version.

Do not, under any circumstances, deviate from this procedure.

To make local changes to groff, simply patch and commit to the main
branch (aka HEAD).  Never make local changes on the FSF branch.

All local changes should be submitted to Werner Lemberg &lt;wl@gnu.org&gt; or
Ted Harding &lt;ted.harding@nessie.mcc.ac.uk&gt; for inclusion in the next
vendor release.

ru@FreeBSD.org - 20 October 2005</programlisting>


    <para xmlns:xlink="http://www.w3.org/1999/xlink">Eine weitere Möglichkeit ist es, eine Liste von Dateien, die
      nicht enthalten sein sollen zu pflegen, was besonders dann sehr hilfreich
      sein kann, wenn die Liste ziemlich gross oder kompliziert ist bzw.
      Imports sehr häufig stattfinden.  Durch erstellen einer Datei namens
      <filename xmlns:xlink="http://www.w3.org/1999/xlink">FREEBSD-Xlist</filename> im gleichen Verzeichnis, in welches
      das Herstellerverzeichnis importiert werden soll, die eine Liste von
      auszuschliessenden Dateinamen-Mustern pro Zeile enthält, können
      zukünftige Imports folgendermassen durchgeführt werden:</para>

    <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">tar -X FREEBSD-Xlist -xzf vendor-source.tgz</userinput></screen>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Als Beispiel einer <filename xmlns:xlink="http://www.w3.org/1999/xlink">FREEBSD-Xlist</filename>-Datei wird
      hier diejenige von <filename xmlns:xlink="http://www.w3.org/1999/xlink">src/contrib/tcsh</filename> gezeigt:</para>

    <programlisting xmlns:xlink="http://www.w3.org/1999/xlink">*/BUGS
*/config/a*
*/config/bs2000
*/config/bsd
*/config/bsdreno
*/config/[c-z]*
*/tests
*/win32</programlisting>

    <note xmlns:xlink="http://www.w3.org/1999/xlink">
      <para xmlns:xlink="http://www.w3.org/1999/xlink">Bitte importieren Sie weder <filename xmlns:xlink="http://www.w3.org/1999/xlink">FREEBSD-upgrade</filename>
        noch <filename xmlns:xlink="http://www.w3.org/1999/xlink">FREEBSD-Xlist</filename> mit den beigesteuerten
        Quellen.  Stattdessen sollten Sie diese Dateien nach dem initialen
        Import hinzufügen.</para>
    </note>
  </sect2>

  <sect2 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="vendor-import-svn">
    <info><title xmlns:xlink="http://www.w3.org/1999/xlink">Herstellerimports mit SVN</title>
      <authorgroup xmlns:xlink="http://www.w3.org/1999/xlink">
        <author xmlns:xlink="http://www.w3.org/1999/xlink"><personname xmlns:xlink="http://www.w3.org/1999/xlink"><firstname xmlns:xlink="http://www.w3.org/1999/xlink">Dag-Erling</firstname><surname xmlns:xlink="http://www.w3.org/1999/xlink">Smørgrav</surname></personname><contrib xmlns:xlink="http://www.w3.org/1999/xlink">Beigetragen von </contrib></author>
      </authorgroup>
    </info>

    

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Dieser Abschnitt beschreibt die Prozedur für Herstellerimports
      mit <application xmlns:xlink="http://www.w3.org/1999/xlink">Subversion</application> im Detail.</para>

    <procedure xmlns:xlink="http://www.w3.org/1999/xlink">
      <step xmlns:xlink="http://www.w3.org/1999/xlink">
        <title xmlns:xlink="http://www.w3.org/1999/xlink">Vorbereiten des Quellbaums</title>

        <para xmlns:xlink="http://www.w3.org/1999/xlink">Wenn dies Ihr erster Import nach dem Wechsel zu
          <acronym xmlns:xlink="http://www.w3.org/1999/xlink">SVN</acronym> ist, sollen Sie den Herstellerbaum
          aufräumen, verflachen und die Merge-Historie in den Hauptzweig
          vorbereiten.  Falls das nicht Ihr erster Import ist, können
          Sie diesen Schritt ohne Probleme überspringen.</para>

        <para xmlns:xlink="http://www.w3.org/1999/xlink">Während der Konvertierung von <acronym xmlns:xlink="http://www.w3.org/1999/xlink">CVS</acronym> zu
          <acronym xmlns:xlink="http://www.w3.org/1999/xlink">SVN</acronym> wurden Herstellerzweige mit der gleichen
          Struktur wie der Hauptzweig importiert.  Beispielsweise wurden die
          <application xmlns:xlink="http://www.w3.org/1999/xlink">foo</application> Herstellerquellen in
          <filename xmlns:xlink="http://www.w3.org/1999/xlink">vendor/foo/dist/contrib/foo</filename>
          abgelegt, jedoch ist dies unpraktisch und zwecklos.  Was wir wirklich
          wollen, ist dass die Herstellerquellen direkt in
          <filename xmlns:xlink="http://www.w3.org/1999/xlink">vendor/foo/dist</filename>
          liegen, beispielsweise so:</para>

        <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">cd vendor/foo/dist/contrib/foo</userinput>
<prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">svn move $(svn list) ../..</userinput>
<prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">cd ../..</userinput>
<prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">svn remove contrib</userinput>
<prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">svn propdel -R svn:mergeinfo</userinput>
<prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">svn commit</userinput></screen>

        <para xmlns:xlink="http://www.w3.org/1999/xlink">Beachten Sie, dass das <literal xmlns:xlink="http://www.w3.org/1999/xlink">propdel</literal>-Bit notwendig
          ist, da mit Subversion 1.5 automatisch
          <literal xmlns:xlink="http://www.w3.org/1999/xlink">svn:mergeinfo</literal> zu jedem Verzeichnis
           hinzugefügt wird, das Sie kopieren oder verschieben.  In diesem
           Fall brauchen Sie diese Informationen nicht, da Sie nichts in den
           Zweig mergen werden, den Sie gelöscht haben.</para>

        <note xmlns:xlink="http://www.w3.org/1999/xlink">
          <para xmlns:xlink="http://www.w3.org/1999/xlink">Sie werden wahrscheinlich die Tags genauso verflachen wollen.
            Die Prozedur dafür ist die selbe.  Wenn Sie dies tun, sollten
            Sie den Commit bis zum Schluss aufschieben.</para>
        </note>

        <para xmlns:xlink="http://www.w3.org/1999/xlink">Prüfen Sie den <filename xmlns:xlink="http://www.w3.org/1999/xlink">dist</filename>-Baum und
          führen Sie alle nötigen Aufräumarbeiten durch, die Sie
          für sinnvoll erachten.  Sie werden möglicherweise die
          Erweiterung von Schlüsselwörtern deaktivieren wollen, da
          dies auf unmodifizierten Quellen keinen Sinn ergibt.  In machen
          Fällen kann dies sogar schädlich sein.</para>

        <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">svn propdel svn:keywords -R .</userinput>
<prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">svn commit</userinput></screen>

        <para xmlns:xlink="http://www.w3.org/1999/xlink">Bootstrappen der <literal xmlns:xlink="http://www.w3.org/1999/xlink">svn:mergeinfo</literal> auf dem
          Zielverzeichnis (des Hauptzweiges) auf die Revision die mit der
          letzten Änderung, die im Herstellerzweig vor dem Import der
          neuen Quellen durchgeführt wurde, korrespondiert, wird ebenso
          benötigt:</para>

        <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">cd head/contrib/foo</userinput>
<prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">svn merge --record-only svn_base/vendor/foo/dist@12345678 .</userinput>
<prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">svn commit</userinput></screen>

        <para xmlns:xlink="http://www.w3.org/1999/xlink">Dabei entspricht <replaceable xmlns:xlink="http://www.w3.org/1999/xlink">svn_base</replaceable> dem
          Basisverzeichnis Ihres <acronym xmlns:xlink="http://www.w3.org/1999/xlink">SVN</acronym>-Repositories, z.B.
          <literal xmlns:xlink="http://www.w3.org/1999/xlink">svn+ssh://svn.FreeBSD.org/base</literal>.</para>
      </step>

      <step xmlns:xlink="http://www.w3.org/1999/xlink">
        <title xmlns:xlink="http://www.w3.org/1999/xlink">Neue Quellen importieren</title>

        <para xmlns:xlink="http://www.w3.org/1999/xlink">Bereiten Sie einen kompletten, sauberen Baum mit
          Herstellerquellen vor.  Mit <acronym xmlns:xlink="http://www.w3.org/1999/xlink">SVN</acronym> können wir
          eine komplette Distribution in dem Herstellerzweig aufbewahren, ohne
          den Hauptzweig aufzublähen.  Importieren Sie alles, aber mergen
          Sie nur das, was wirklich benötigt wird.</para>

        <para xmlns:xlink="http://www.w3.org/1999/xlink">Beachten Sie, dass Sie alle Dateien, die seit dem letzten
          Herstellerimport hinzugefügt wurden, auch einbeziehen und
          diejenigen, welche entfernt wurden, auch löschen
          müssen.  Um dies zu bewerkstelligen, sollten Sie sortierte
          Listen der Bestandteile des Herstellerbaums und von den Quellen,
          Sie die vorhaben zu importieren, vorbereiten:</para>

        <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">cd vendor/foo/dist</userinput>
<prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">svn list -R | grep -v '/$' | sort &gt; ../old</userinput>
<prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">cd ../foo-9.9</userinput>
<prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">find . -type f | cut -c 3- | sort &gt; ../new</userinput></screen>

        <para xmlns:xlink="http://www.w3.org/1999/xlink">Mit diesen beiden Dateien, wird Ihnen das folgende Kommando alle
          Dateien auflisten, die entfernt wurden (nur die Dateien in
          <filename xmlns:xlink="http://www.w3.org/1999/xlink">old</filename>):</para>

        <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">comm -23 ../old ../new</userinput></screen>

        <para xmlns:xlink="http://www.w3.org/1999/xlink">Der folgende Befehl wird die hinzugefügten Dateien auflisten
          (nur diejenigen Dateien in
          <filename xmlns:xlink="http://www.w3.org/1999/xlink">new</filename>):</para>

        <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">comm -13 ../old ../new</userinput></screen>

        <para xmlns:xlink="http://www.w3.org/1999/xlink">Wir führen dies nun zusammen:</para>

        <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">cd vendor/foo/foo-9.9</userinput>
<prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">tar cf - . | tar xf - -C ../dist</userinput>
<prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">cd ../dist</userinput>
<prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">comm -23 ../old ../new | xargs svn remove</userinput>
<prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">comm -13 ../old ../new | xargs svn add</userinput></screen>

        <warning xmlns:xlink="http://www.w3.org/1999/xlink">
          <para xmlns:xlink="http://www.w3.org/1999/xlink">Wenn in der neuen Version neue Verzeichnisse hinzugekommen
            sind, wird dieser letzte Befehl fehlschlagen.  Sie müssen
            diese Verzeichnisse hinzufügen und anschliessend den Befehl
            erneut ausführen.  Genauso müssen Sie Verzeichnisse, die
            entfernt wurden, händisch löschen.</para>
        </warning>

        <para xmlns:xlink="http://www.w3.org/1999/xlink">Prüfen Sie die Eigenschaften jeder neuen Datei:</para>

        <itemizedlist xmlns:xlink="http://www.w3.org/1999/xlink">
          <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
            <para xmlns:xlink="http://www.w3.org/1999/xlink">Alle Textdateien sollten <literal xmlns:xlink="http://www.w3.org/1999/xlink">svn:eol-style</literal> auf
            den Wert <literal xmlns:xlink="http://www.w3.org/1999/xlink">native</literal> gesetzt haben.</para>
          </listitem>

          <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
            <para xmlns:xlink="http://www.w3.org/1999/xlink">Alle Binärdateien sollten
              <literal xmlns:xlink="http://www.w3.org/1999/xlink">svn:mime-type</literal> auf
              <literal xmlns:xlink="http://www.w3.org/1999/xlink">application/octet-stream</literal> gesetzt haben,
              ausser es existiert ein passenderer Medientyp.</para>
          </listitem>

          <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
            <para xmlns:xlink="http://www.w3.org/1999/xlink">Ausführbare Dateien sollten
              <literal xmlns:xlink="http://www.w3.org/1999/xlink">svn:executable</literal> auf <literal xmlns:xlink="http://www.w3.org/1999/xlink">*</literal>
              gesetzt haben.</para>
          </listitem>

          <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
            <para xmlns:xlink="http://www.w3.org/1999/xlink">Es sollten keine anderen Eigenschaften auf den Dateien im
              Baum gesetzt sein.</para>
          </listitem>
        </itemizedlist>

        <note xmlns:xlink="http://www.w3.org/1999/xlink">
          <para xmlns:xlink="http://www.w3.org/1999/xlink">Sie sind bereit, zu committen, jedoch sollten Sie zuerst die
            Ausgabe von <command xmlns:xlink="http://www.w3.org/1999/xlink">svn stat</command> und <command xmlns:xlink="http://www.w3.org/1999/xlink">svn
            diff</command> überprüfen, um sicher zu gehen, dass alles
            in Ordnung ist.</para>
        </note>

        <para xmlns:xlink="http://www.w3.org/1999/xlink">Sobald Sie den die neue Release-Version des Herstellers
          committed haben, sollten Sie Ihn für zukünftige Referenzen
          taggen.  Die beste und schnellste Methode ist, dies direkt im
          Repository zu tun:</para>

        <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">svn copy svn_base/vendor/foo/dist svn_base/vendor/foo/9.9</userinput></screen>

        <para xmlns:xlink="http://www.w3.org/1999/xlink">Um den neuen Tag zu bekommen, brauchen Sie nur ihre Arbeitskopie
          von <filename xmlns:xlink="http://www.w3.org/1999/xlink">vendor/foo</filename> zu
          aktualisieren.</para>

        <note xmlns:xlink="http://www.w3.org/1999/xlink">
          <para xmlns:xlink="http://www.w3.org/1999/xlink">Wenn Sie lieber die Kopie in der ausgecheckten Kopie
            durchführen wollen, vergessen Sie nicht, die generierte
            <literal xmlns:xlink="http://www.w3.org/1999/xlink">svn:mergeinfo</literal> wie oben beschrieben zu
            entfernen.</para>
        </note>
      </step>

      <step xmlns:xlink="http://www.w3.org/1999/xlink">
        <title xmlns:xlink="http://www.w3.org/1999/xlink">Mit <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">-HEAD</emphasis> mergen</title>

        <para xmlns:xlink="http://www.w3.org/1999/xlink">Nachdem Sie Ihren Import vorbereitet haben, wird es Zeit zu
          mergen.  Die Option <option xmlns:xlink="http://www.w3.org/1999/xlink">--accept=postpone</option> weist
          <acronym xmlns:xlink="http://www.w3.org/1999/xlink">SVN</acronym> an, noch keine merge-Konflikte
          aufzulösen, weil wir uns um diese manuell kümmern
          werden:</para>

        <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">cd head/contrib/foo</userinput>
<prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">svn update</userinput>
<prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">svn merge --accept=postpone svn_base/vendor/foo/dist</userinput></screen>

        <para xmlns:xlink="http://www.w3.org/1999/xlink">Lösen Sie die Konflikte und stellen Sie sicher, dass alle
          Dateien, die im Herstellerzweig hinzugefügt oder entfernt
          wurden, auch sauber im Hauptzweig hinzugefügt bzw. gelöscht
          wurden.  Es ist immer ratsam, diese Unterschiede gegen den
          Herstellerbaum zu prüfen:</para>

        <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">svn diff --no-diff-deleted --old=svn_base/vendor/foo/dist --new=.</userinput></screen>

        <para xmlns:xlink="http://www.w3.org/1999/xlink">Die Option <option xmlns:xlink="http://www.w3.org/1999/xlink">--no-diff-deleted</option> weist
          <acronym xmlns:xlink="http://www.w3.org/1999/xlink">SVN</acronym> an, keine Dateien zu prüfen, die sich
          zwar im Herstellerbaum, aber nicht im Hauptzweig befinden.</para>

        <note xmlns:xlink="http://www.w3.org/1999/xlink">
          <para xmlns:xlink="http://www.w3.org/1999/xlink">Bei <acronym xmlns:xlink="http://www.w3.org/1999/xlink">SVN</acronym> gibt es das Konzept von innerhalb
            und ausserhalb des Herstellerbaums nicht.  Wenn eine Datei, die
            zuvor eine lokale Änderung hatte, aber nun keine mehr
            besitzt, entfernen Sie einfach das was übrig ist, wie FreeBSD
            Versionstags, damit diese nicht länger in den diffs gegen
            den Herstellerbaum erscheinen.</para>
        </note>

        <para xmlns:xlink="http://www.w3.org/1999/xlink">Wenn irgendwelche Änderungen notwendig sind, um die Welt
          mit den neuen Quellen zu bauen, machen Sie diese jetzt und testen
          Sie diese bis Sie sicher sind, dass alles korrekt gebaut wird und
          richtig funktionert.</para>
      </step>

      <step xmlns:xlink="http://www.w3.org/1999/xlink">
        <title xmlns:xlink="http://www.w3.org/1999/xlink">Commit</title>

        <para xmlns:xlink="http://www.w3.org/1999/xlink">Nun sind Sie bereit für den Commit.  Stellen Sie sicher,
          dass Sie alles in einem einzigen Schritt durchführen.
          Idealerweise sollten Sie alle diese Schritte in einem sauberen Baum
          durchgeführt haben.  Falls dies der Fall ist, können Sie
          einfach aus dem obersten Verzeichnis dieses Baums committen.  Dies
          ist der beste Weg, um Überraschungen zu vermeiden.  Wenn Sie
          dies korrekt durchführen, wird der Baum atomar von einem
          konsistenten Zustand mit dem alten Code in einen neuen konsistenten
          Zustand mit dem neuen Code überführt.</para>
      </step>
    </procedure>
   </sect2>
  </sect1>

  <sect1 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="policies-encumbered">
    <title xmlns:xlink="http://www.w3.org/1999/xlink">Belastende Dateien</title>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Es kann gelegentlich notwendig sein, belastende Dateien
      in den FreeBSD-Quelltextbaum zu integrieren. Braucht ein
      Gerät zum Beispiel ein Stück binären Code, der
      zuerst geladen werden muss, bevor das Gerät funktioniert,
      und wir haben keine Quellen zu diesem Code, dann wird die
      binäre Datei als belastend bezeichnet. Die folgenden
      Richtlinien sind beim Aufnehmen von belastenden Dateien in den
      FreeBSD-Quelltextbaum zu beachten.</para>

    <orderedlist xmlns:xlink="http://www.w3.org/1999/xlink">
      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
        <para xmlns:xlink="http://www.w3.org/1999/xlink">Jede Datei, die durch die System-CPU(s) ausgeführt
	  wird und nicht als Quelltext vorliegt, ist belastend.</para>
      </listitem>

      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Jede Datei, deren Lizenz restriktiver ist als die BSD-
	  oder GNU-Lizenz, ist belastend.</para>
      </listitem>

      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Eine Datei, die herunterladbare Binär-Daten
	  enthält, ist nur belastend, wenn (1) oder (2)
	  zutreffen. Sie muss in einem ASCII-Format
	  gespeichert werden, das Architektur-neutral ist (file2c
	  oder uuencoding wird empfohlen).</para>
      </listitem>

      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Jede belastende Datei braucht eine spezielle
	  Genehmigung vom <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://www.FreeBSD.org/administration.html#t-core">Core-Team</link>,
	  bevor diese in das Repository aufgenommen werden darf.</para>
      </listitem>

      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Belastende Dateien liegen unter
	  <filename xmlns:xlink="http://www.w3.org/1999/xlink">src/contrib</filename> oder
	  <filename xmlns:xlink="http://www.w3.org/1999/xlink">src/sys/contrib</filename>.</para>
      </listitem>

      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Das komplette Modul sollte auch am Stück
	  aufbewahrt werden. Es gibt keinen Grund, dieses zu teilen,
	  außer es gibt einen Code-Austausch mit Quelltext, der
	  nicht belastend ist.</para>
      </listitem>

      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
        <para xmlns:xlink="http://www.w3.org/1999/xlink">Objekt-Dateien werden wie folgt benannt:
	  <filename xmlns:xlink="http://www.w3.org/1999/xlink">arch/filename.o.uu&gt;</filename>.</para>
      </listitem>

      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
        <para xmlns:xlink="http://www.w3.org/1999/xlink">Kernel-Dateien:</para>

        <orderedlist xmlns:xlink="http://www.w3.org/1999/xlink">
          <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Sollten immer nach
	      <filename xmlns:xlink="http://www.w3.org/1999/xlink">conf/files.*</filename> verweisen (um den Bau
	      einfach zu halten).</para>
	  </listitem>

          <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Sollten sich immer in <filename xmlns:xlink="http://www.w3.org/1999/xlink">LINT</filename>
	      befinden, jedoch entscheidet das <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://www.FreeBSD.org/administration.html#t-core">Core-Team</link>
	      je nach Fall, ob es
	      auskommentiert wird oder nicht. Das <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://www.FreeBSD.org/administration.html#t-core">Core-Team</link>
	      kann sich zu einem späteren Zeitpunkt
	      immer noch anders entscheiden.</para>
          </listitem>

          <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Der <firstterm xmlns:xlink="http://www.w3.org/1999/xlink">Release-Engineer</firstterm>
	      entscheidet, ob es in ein Release aufgenommen wird oder
	      nicht.</para>
          </listitem>
        </orderedlist>
      </listitem>

      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
        <para xmlns:xlink="http://www.w3.org/1999/xlink">Userland-Dateien:</para>

        <orderedlist xmlns:xlink="http://www.w3.org/1999/xlink">
          <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
            <indexterm xmlns:xlink="http://www.w3.org/1999/xlink"><primary xmlns:xlink="http://www.w3.org/1999/xlink">Core-Team</primary></indexterm>

	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Das <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://www.FreeBSD.org/administration.html#t-core">Core-Team</link>
	      entscheidet, ob der Code von
	      <command xmlns:xlink="http://www.w3.org/1999/xlink">make world</command> gebaut wird oder nicht.</para>
          </listitem>

          <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
            <indexterm xmlns:xlink="http://www.w3.org/1999/xlink"><primary xmlns:xlink="http://www.w3.org/1999/xlink">Release-Engineer</primary></indexterm>

	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Der <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://www.FreeBSD.org/administration.html#t-re">Release-Engineer</link>
	      entscheidet, ob es in das Release
	      aufgenommen wird oder nicht.</para>
          </listitem>
        </orderedlist>
      </listitem>
    </orderedlist>
  </sect1>

  <sect1 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="policies-shlib">
    <info><title xmlns:xlink="http://www.w3.org/1999/xlink">Shared-Libraries</title>
      <authorgroup xmlns:xlink="http://www.w3.org/1999/xlink">
	<author xmlns:xlink="http://www.w3.org/1999/xlink"><personname xmlns:xlink="http://www.w3.org/1999/xlink"><firstname xmlns:xlink="http://www.w3.org/1999/xlink">Satoshi</firstname><surname xmlns:xlink="http://www.w3.org/1999/xlink">Asami</surname></personname><contrib xmlns:xlink="http://www.w3.org/1999/xlink">Beigesteuert von </contrib></author>

	<author xmlns:xlink="http://www.w3.org/1999/xlink"><personname xmlns:xlink="http://www.w3.org/1999/xlink"><firstname xmlns:xlink="http://www.w3.org/1999/xlink">Peter</firstname><surname xmlns:xlink="http://www.w3.org/1999/xlink">Wemm</surname></personname></author>

	<author xmlns:xlink="http://www.w3.org/1999/xlink"><personname xmlns:xlink="http://www.w3.org/1999/xlink"><firstname xmlns:xlink="http://www.w3.org/1999/xlink">David</firstname><surname xmlns:xlink="http://www.w3.org/1999/xlink">O'Brien</surname></personname></author>
      </authorgroup>
      
    </info>

    

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Sollten Sie die Unterstützung für
      Shared-Libraries bei einem Port oder einem Stück Software,
      das dies nicht hat, hinzufügen, sollten die Versionsnummern
      dessen Regeln folgen. Im Allgemeinen hat die sich daraus
      resultierende Nummer nichts mit der Release-Version der Software
      zu tun.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Die drei Grundsätze zum Erstellen von Shared-Libraries
      sind:</para>

    <itemizedlist xmlns:xlink="http://www.w3.org/1999/xlink">
      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Sie beginnen mit <literal xmlns:xlink="http://www.w3.org/1999/xlink">1.0</literal>.</para>
      </listitem>

      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Gibt es eine Änderung, die
	  abwärtskompatibel ist, so springen Sie zur
	  nächsten Minor-Version (beachten Sie, dass ELF-Systeme
	  die Minor-Version ignorieren).</para>
      </listitem>

      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Gibt es eine inkompatible Änderung, so springen
	  Sie bitte zur nächsten Major-Version.</para>
      </listitem>
    </itemizedlist>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Zum Beispiel wird beim Hinzufügen von Funktionen und
      oder Fehlerbehebungen zur nächsten Minor-Version
      gesprungen, beim Löschen einer Funktion, Ändern
      von Funktionsaufrufen usw. ändert sich die Major-Version.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Bleiben Sie bei Versionsnummern in der Form major.minor
      (<replaceable xmlns:xlink="http://www.w3.org/1999/xlink">x</replaceable>.<replaceable xmlns:xlink="http://www.w3.org/1999/xlink">y</replaceable>).
      Unser dynamischer Linker a.out kann mit Versionsnummern
      in der Form
      <replaceable xmlns:xlink="http://www.w3.org/1999/xlink">x</replaceable>.<replaceable xmlns:xlink="http://www.w3.org/1999/xlink">y</replaceable>.<replaceable xmlns:xlink="http://www.w3.org/1999/xlink">z</replaceable>
      nicht gut umgehen.
      Jede Versionsnummer nach dem <replaceable xmlns:xlink="http://www.w3.org/1999/xlink">y</replaceable>
      (die dritte Zahl) wird völlig ignoriert, wenn
      Versionsnummern der Shared-Libraries verglichen werden, um
      zu bestimmen, mit welcher Bibliothek eine Anwendung verlinkt wird.
      Sind zwei Shared-Libraries vorhanden, die sich nur in der
      <quote xmlns:xlink="http://www.w3.org/1999/xlink">micro</quote>-Revision unterscheiden, so wird
      <command xmlns:xlink="http://www.w3.org/1999/xlink">ld.so</command> zu der höheren verlinken.
      Dies bedeutet, dass wenn Sie mit <filename xmlns:xlink="http://www.w3.org/1999/xlink">libfoo.so.3.3.3</filename>
      verlinken, der Linker nur <literal xmlns:xlink="http://www.w3.org/1999/xlink">3.3</literal> in den
      Header aufnimmt und alles linkt, was mit
      <replaceable xmlns:xlink="http://www.w3.org/1999/xlink">libfoo.so.3</replaceable>
      .<replaceable xmlns:xlink="http://www.w3.org/1999/xlink">(irgendetwas
      &gt;= 3)</replaceable>.<replaceable xmlns:xlink="http://www.w3.org/1999/xlink">(höchste
      verfügbare Nummer)</replaceable> beginnt.</para>

    <note xmlns:xlink="http://www.w3.org/1999/xlink">
      <para xmlns:xlink="http://www.w3.org/1999/xlink"><command xmlns:xlink="http://www.w3.org/1999/xlink">ld.so</command> wird immer die höchste
	<quote xmlns:xlink="http://www.w3.org/1999/xlink">Minor</quote>-Revision benutzen. Beispielsweise wird
	es die <filename xmlns:xlink="http://www.w3.org/1999/xlink">libc.so.2.2</filename> bevorzugen
	gegenüber der <filename xmlns:xlink="http://www.w3.org/1999/xlink">libc.so.2.0</filename>, auch
	dann, wenn das Programm ursprünglich mit
	<filename xmlns:xlink="http://www.w3.org/1999/xlink">libc.so.2.0</filename> verlinkt war.</para>
    </note>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Unser dynamischer ELF-Linker kann keine Minor-Versionen
      handhaben. Dennoch sollten die Major- und Minor-Versionen genutzt
      werden, da unsere <filename xmlns:xlink="http://www.w3.org/1999/xlink">Makefile</filename>s <quote xmlns:xlink="http://www.w3.org/1999/xlink">das
      Richtige machen</quote> bezogen auf den Systemtyp.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Für nicht-Port-Bibliotheken lautet die Richtlinie,
      die Shared-Library-Versionsnummer nur einmal zwischen den
      Releases zu ändern. Weiterhin ist es vorgeschrieben, die
      Major-Version der Shared-Libraries nur bei Major-OS-Releases zu
      ändern (beispielsweise von 6.0 auf 7.0). Wenn Sie also eine
      Änderung an einer Systembibliothek vornehmen, die eine neue
      Versionsnummer benötigt, überprüfen Sie die
      Commit-Logs des <filename xmlns:xlink="http://www.w3.org/1999/xlink">Makefile</filename>s. Es liegt in der
      Verantwortung des Committers, dass sich eine erste solche
      Änderung seit dem letzten Release in der aktualisierten
      Versionsnummer der Shared-Library im
      <filename xmlns:xlink="http://www.w3.org/1999/xlink">Makefile</filename> äußert, folgende
      Änderungen werden nicht berücksichtigt.</para>
  </sect1>
</chapter>

    
<!--
     The FreeBSD Documentation Project
     The FreeBSD German Documentation Project

     $FreeBSD$
     $FreeBSDde: de-docproj/books/developers-handbook/testing/chapter.xml,v 1.10 2010/12/18 13:28:29 jkois Exp $
     basiert auf: 1.3
-->
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="testing">
  <info><title xmlns:xlink="http://www.w3.org/1999/xlink">Regressions- und Performance-Tests</title>
    <authorgroup xmlns:xlink="http://www.w3.org/1999/xlink">
      <author xmlns:xlink="http://www.w3.org/1999/xlink"><personname xmlns:xlink="http://www.w3.org/1999/xlink"><firstname xmlns:xlink="http://www.w3.org/1999/xlink">Jürgen</firstname><surname xmlns:xlink="http://www.w3.org/1999/xlink">Lock</surname></personname><contrib xmlns:xlink="http://www.w3.org/1999/xlink">Übersetzt von </contrib></author>
    </authorgroup>
  </info>

  

  <para xmlns:xlink="http://www.w3.org/1999/xlink">Regressions-Tests werden durchgeführt, um zu überprüfen,
    ob ein bestimmter Teil des Systems wie erwartet funktioniert, und
    um sicherzustellen, dass bereits beseitigte Fehler nicht wieder eingebaut
    werden.</para>

  <para xmlns:xlink="http://www.w3.org/1999/xlink">Die FreeBSD-Regressions-Testwerkzeuge finden Sie im
    FreeBSD-Quelltextbaum unter <filename xmlns:xlink="http://www.w3.org/1999/xlink">src/tools/regression</filename>.</para>

  <section xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="testing-micro-benchmark">
    <title xmlns:xlink="http://www.w3.org/1999/xlink">Mikro-Benchmark-Checkliste</title>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Dieser Abschnitt enthält Tipps, wie
      ordnungsgemäße Mikro-Benchmarks unter FreeBSD oder für
      FreeBSD selbst erstellt werden.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Es ist nicht möglich, immer alle der folgenden
      Vorschläge zu berücksichtigen, aber je mehr davon,
      desto besser wird der Benchmark kleine
      Unterschiede nachweisen können.</para>

    <itemizedlist xmlns:xlink="http://www.w3.org/1999/xlink">
      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Schalten Sie <acronym xmlns:xlink="http://www.w3.org/1999/xlink">APM</acronym> und alles andere,
	  das den Systemtakt beeinflusst, ab
	  (<acronym xmlns:xlink="http://www.w3.org/1999/xlink">ACPI</acronym>?).</para>
      </listitem>

      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Starten Sie in den Single-User-Modus. <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">cron</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">8</manvolnum></citerefentry>
	  und andere Systemdienste verursachen nur Störungen.
	  Genauso der <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">sshd</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">8</manvolnum></citerefentry>-Systemdienst.
	  Falls während des Tests
	  SSH-Zugriff benötigt wird, schalten Sie entweder die
	  Neuerstellung des SSHv1-Schlüssels ab oder beenden Sie
	  den <command xmlns:xlink="http://www.w3.org/1999/xlink">sshd</command>-Elternprozess während der
	  Tests.</para>
      </listitem>

      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Beenden Sie <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">ntpd</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">8</manvolnum></citerefentry>.</para>
      </listitem>

      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Falls <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">syslog</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">3</manvolnum></citerefentry>-Ereignisse erzeugt werden,
	  starten Sie <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">syslogd</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">8</manvolnum></citerefentry> mit leerer
	  <filename xmlns:xlink="http://www.w3.org/1999/xlink">/etc/syslogd.conf</filename> oder beenden Sie
	  es.</para>
      </listitem>

      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Sorgen Sie für möglichst wenig Disk-I/O;
	  vermeiden Sie es ganz wenn möglich.</para>
      </listitem>

      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Hängen Sie keine Dateisysteme ein, die Sie nicht
	  benötigen.</para>
      </listitem>

      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Hängen Sie <filename xmlns:xlink="http://www.w3.org/1999/xlink">/</filename>, <filename xmlns:xlink="http://www.w3.org/1999/xlink">/usr</filename> und die anderen
	  Dateisysteme nur lesbar ein wenn möglich. Dies
	  verhindert, dass atime-Aktualisierungen auf der Festplatte (usw.) das
	  Ergebnis verfälschen.</para>
      </listitem>

      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Initialisieren Sie das beschreibbare
	  Test-Dateisystem mit <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">newfs</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">8</manvolnum></citerefentry> neu und füllen Sie es
	  aus einer <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">tar</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">1</manvolnum></citerefentry>- oder <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">dump</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">8</manvolnum></citerefentry>-Datei vor jedem
	  Lauf. Hängen Sie es aus und wieder ein, bevor Sie den
	  Test starten. Dies sorgt für einen konsistenten
	  Dateisystemaufbau. Bei einem <quote xmlns:xlink="http://www.w3.org/1999/xlink">worldstone</quote>-Test
	  bezieht sich dies auf <filename xmlns:xlink="http://www.w3.org/1999/xlink">/usr/obj</filename> (Initialisieren Sie
	  es einfach mit <command xmlns:xlink="http://www.w3.org/1999/xlink">newfs</command> neu und hängen Sie
	  es ein). Um absolut reproduzierbare Ergebnisse zu bekommen,
	  füllen Sie das Dateisystem aus einer <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">dd</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">1</manvolnum></citerefentry>-Datei
	  (d.h. <command xmlns:xlink="http://www.w3.org/1999/xlink">dd
	  if=myimage of=/dev/ad0s1h
	  bs=1m</command>).</para>
      </listitem>

      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Benutzen Sie malloc-gestützte oder vorbelastete
	  <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">md</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">4</manvolnum></citerefentry>-Partitionen.</para>
      </listitem>

      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Starten Sie zwischen den einzelnen
	  Durchläufen neu, dies sichert einen konsistenteren
	  Zustand.</para>
      </listitem>

      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Entfernen Sie alle nicht unbedingt benötigten
	  Gerätetreiber aus dem Kernel. Wenn z.B. USB für
	  den Test nicht benötigt wird, entfernen Sie es aus dem
	  Kernel. Gerätetreiber, die sich Hardware zuteilen, haben
	  oft <quote xmlns:xlink="http://www.w3.org/1999/xlink">tickende</quote> Timeouts.</para>
      </listitem>

      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Konfigurieren Sie nicht Hardware, die
	  nicht benutzt wird. Entfernen Sie Festplatten
	  mit <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">atacontrol</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">8</manvolnum></citerefentry> und <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">camcontrol</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">8</manvolnum></citerefentry>, wenn diese
	  für den Test nicht gebraucht werden.</para>
      </listitem>

      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Konfigurieren Sie nicht das Netzwerk, es sei denn es
	  wird getestet, oder warten Sie, bis der Test fertig ist, wenn
	  Sie das Ergebnis auf einen anderen Rechner übertragen
	  wollen.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Falls das System an ein öffentliches Netzwerk
	  angeschlossen sein muss, achten Sie auf Spitzen im
	  Broadcast-Verkehr. Obwohl dieser kaum auffällt, wird
	  er CPU-Zyklen brauchen. Ähnliches gilt für
	  Multicast.</para>
      </listitem>

      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Legen Sie jedes Dateisystem auf eine eigene Festplatte.
	  Dies minimiert Jitter durch Optimierungen von
	  Lesekopfbewegungen.</para>
      </listitem>

      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Minimieren Sie Ausgaben auf serielle oder VGA-Konsolen.
	  Ausgabenumleitung in Dateien ergibt weniger Jitter
	  (serielle Konsolen werden leicht zum Flaschenhals).
	  Benutzen Sie die Tastatur nicht, während der Test
	  läuft, sogar <keycap xmlns:xlink="http://www.w3.org/1999/xlink">space</keycap> oder
	  <keycap xmlns:xlink="http://www.w3.org/1999/xlink">back-space</keycap> wirken sich auf die
	  Ergebnisse aus.</para>
      </listitem>

      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Stellen Sie sicher, dass der Test lang genug
	  läuft, aber nicht zu lange. Wenn er zu kurz ist, sind
	  Zeitstempel ein Problem. Wenn er zu lang ist, werden
	  Temperaturänderungen und Drift die Frequenz von
	  Quarzkristallen im Rechner beeinflussen. Daumenregel: mehr
	  als eine Minute, weniger als eine Stunde.</para>
      </listitem>

      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Versuchen Sie, die Temperatur in der Umgebung des
	  Rechners so stabil wie möglich zu halten. Diese beeinflusst
	  sowohl Quarzkristalle als auch Festplatten-Algorithmen.
	  Um einen wirklich stabilen Takt zu erhalten, wäre es auch
	  möglich, einen stabilisierten Takt anzuschließen.
	  D.h. besorgen Sie sich einen OCXO + PLL und koppeln Sie das
	  Ausgangssignal mit den Taktgeberschaltkreisen anstelle des
	  Quarzkristalls der Hauptplatine. Wenden Sie sich an
	  Poul-Henning Kamp, wenn Sie mehr Informationen hierüber
	  benötigen.</para>
      </listitem>

      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Lassen Sie den Test mindestens drei Mal laufen, besser
	  mehr als 20 Mal, sowohl
	  für <quote xmlns:xlink="http://www.w3.org/1999/xlink">vor</quote> als auch für
	  <quote xmlns:xlink="http://www.w3.org/1999/xlink">nach</quote> dem Code. Versuchen Sie abzuwechseln
	  (d.h. nicht erst 20 Mal <quote xmlns:xlink="http://www.w3.org/1999/xlink">vorher</quote> und dann 20
	  Mal <quote xmlns:xlink="http://www.w3.org/1999/xlink">nachher</quote>), dies ermöglicht,
	  umgebungsbedingte Effekte zu erkennen. Wechseln Sie nicht
	  1:1 ab, sondern 3:3; dies erlaubt,
	  Wechselwirkungseffekte zu erkennen.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Ein gutes Muster ist:
	  <literal xmlns:xlink="http://www.w3.org/1999/xlink">bababa{bbbaaa}*</literal>. Dies gibt Hinweise nach
	  den ersten 1+1-Läufen (sodass Sie den Test stoppen
	  können, falls er völlig daneben geht), Sie
	  können die Standardabweichung nach den ersten 3+3-Läufen
	  überprüfen (zeigt an, ob sich ein
	  längerer Lauf lohnt), später
	  Trends und Wechselwirkungen.</para>
      </listitem>

      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Benutzen Sie <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">ministat</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">1</manvolnum></citerefentry>, um
	  festzustellen, ob Ihre Ergebnisse signifikant sind.
	  Überlegen Sie sich, das Buch <quote xmlns:xlink="http://www.w3.org/1999/xlink">Cartoon guide to
	  statistics</quote> ISBN: 0062731025 zu kaufen. Es ist sehr
	  empfehlenswert, falls Sie Dinge wie Standardabweichung und
	  Studentsche t-Verteilung vergessen oder nie gelernt
	  haben.</para>
      </listitem>

      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Benutzen Sie keinen Hintergrund-<citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">fsck</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">8</manvolnum></citerefentry>, wenn Sie
	  ihn nicht selbst testen
	  wollen. Schalten Sie auch <varname xmlns:xlink="http://www.w3.org/1999/xlink">background_fsck</varname>
	  in <filename xmlns:xlink="http://www.w3.org/1999/xlink">/etc/rc.conf</filename> aus, es sei denn der
	  Benchmark wird nicht mindestens 60+<quote xmlns:xlink="http://www.w3.org/1999/xlink">Laufzeit von
	  <command xmlns:xlink="http://www.w3.org/1999/xlink">fsck</command></quote> Sekunden nach Systemstart
	  gestartet, da <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">rc</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">8</manvolnum></citerefentry> startet und prüft, ob
	  <command xmlns:xlink="http://www.w3.org/1999/xlink">fsck</command> auf irgendeinem der Dateisysteme
	  laufen muss, wenn Hintergrund-<command xmlns:xlink="http://www.w3.org/1999/xlink">fsck</command>
	  eingeschaltet ist. Stellen Sie ebenfalls sicher, dass keine
	  Snapshots herumliegen, falls der Benchmark nicht ein Test
	  mit Snapshots ist.</para>
      </listitem>

      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Falls der Benchmark unerwartet schlechte Performance
	  zeigt, überprüfen Sie Dinge wie große Mengen
	  Interrupts von unerwarteten Quellen. Es gibt Berichte, dass
	  einige <acronym xmlns:xlink="http://www.w3.org/1999/xlink">ACPI</acronym>-Versionen sich <quote xmlns:xlink="http://www.w3.org/1999/xlink">daneben
	  benehmen</quote> und ein Übermaß an Interrupts
	  erzeugen. Um zu helfen, ungewöhnliche Testergebnisse zu
	  diagnostizieren, machen Sie ein paar Momentaufnahmen von
	  <command xmlns:xlink="http://www.w3.org/1999/xlink">vmstat -i</command> und suchen Sie nach
	  Ungewöhnlichem.</para>
      </listitem>

      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Gehen Sie mit Parametern zur Optimierung
	  von Kernel, Userland und Fehlersuche vorsichtig um.
	  Es passiert schnell, irgendetwas durchrutschen zu
	  lassen und dann später festzustellen, dass der Test
	  nicht das gleiche verglichen hat.</para>
      </listitem>

      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Erstellen Sie nie Benchmarks unter Verwendung der Kernel-Optionen
	  <literal xmlns:xlink="http://www.w3.org/1999/xlink">WITNESS</literal> und <literal xmlns:xlink="http://www.w3.org/1999/xlink">INVARIANTS</literal>,
	  wenn der Test nicht diese Merkmale selbst
	  untersuchen soll. <literal xmlns:xlink="http://www.w3.org/1999/xlink">WITNESS</literal> kann zu 400% und
	  mehr Performance-Abnahme führen. Ähnliches gilt
	  für Userland-<citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">malloc</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">3</manvolnum></citerefentry>-Parameter, Voreinstellungen
	  hierbei unterscheiden sich bei -CURRENT von denen bei
	  Production-Releases.</para>
      </listitem>
    </itemizedlist>
  </section>
</chapter>

  </part>

  <part xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="ipc">
    <title xmlns:xlink="http://www.w3.org/1999/xlink">Interprozess-Kommunikation</title>

    
<!--
     The FreeBSD Documentation Project
     The FreeBSD German Documentation Project

     $FreeBSD$
     $FreeBSDde: de-docproj/books/developers-handbook/sockets/chapter.xml,v 1.5 2010/12/23 18:23:30 bcr Exp $
     basiert auf: 1.16
-->
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="sockets">
  <title xmlns:xlink="http://www.w3.org/1999/xlink">Sockets</title>

  <para xmlns:xlink="http://www.w3.org/1999/xlink">Dieses Kapitel ist noch nicht übersetzt.
    Lesen Sie bitte <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://www.FreeBSD.org/doc/en_US.ISO8859-1/books/developers-handbook/sockets.html">
    das Original in englischer Sprache</link>.  Wenn Sie helfen
    wollen, dieses Kapitel zu übersetzen, senden Sie bitte
    eine E-Mail an die Mailingliste 'FreeBSD German Documentation Project'
  <email xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">de-bsd-translators@de.FreeBSD.org</email>.</para>
</chapter>

    
<!--
    The FreeBSD Documentation Project
    The FreeBSD German Documentation Project

     $FreeBSD$
     $FreeBSDde: de-docproj/books/developers-handbook/ipv6/chapter.xml,v 1.8 2010/12/15 19:03:49 bcr Exp $
     basiert auf: 1.19
-->
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="ipv6">
  <title xmlns:xlink="http://www.w3.org/1999/xlink">IPv6 Internals</title>

  <sect1 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="ipv6-implementation">
    <info><title xmlns:xlink="http://www.w3.org/1999/xlink">IPv6/IPsec-Implementierung</title>
      <authorgroup xmlns:xlink="http://www.w3.org/1999/xlink">
	<author xmlns:xlink="http://www.w3.org/1999/xlink"><personname xmlns:xlink="http://www.w3.org/1999/xlink"><firstname xmlns:xlink="http://www.w3.org/1999/xlink">Yoshinobu</firstname><surname xmlns:xlink="http://www.w3.org/1999/xlink">Inoue</surname></personname><contrib xmlns:xlink="http://www.w3.org/1999/xlink">Contributed by </contrib></author>
      </authorgroup>
      
      <authorgroup xmlns:xlink="http://www.w3.org/1999/xlink">
	<author xmlns:xlink="http://www.w3.org/1999/xlink"><personname xmlns:xlink="http://www.w3.org/1999/xlink"><firstname xmlns:xlink="http://www.w3.org/1999/xlink">Michelle</firstname><surname xmlns:xlink="http://www.w3.org/1999/xlink">Wechter</surname></personname><contrib xmlns:xlink="http://www.w3.org/1999/xlink">Übersetzt von </contrib></author>
	<author xmlns:xlink="http://www.w3.org/1999/xlink"><personname xmlns:xlink="http://www.w3.org/1999/xlink"><firstname xmlns:xlink="http://www.w3.org/1999/xlink">Jürgen</firstname><surname xmlns:xlink="http://www.w3.org/1999/xlink">Dankoweit</surname></personname></author>
      </authorgroup>
    </info>

    

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Dieser Abschnitt erklärt die von der IPv6- und
      IPsec-Implementierung abhängigen Internas. Die
      Funktionalitäten wurden vom <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://www.kame.net/">KAME-Projekt</link>
      abgeleitet</para>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="ipv6details">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">IPv6</title>

      <sect3 xmlns:xlink="http://www.w3.org/1999/xlink">
	<title xmlns:xlink="http://www.w3.org/1999/xlink">Konformität</title>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Die IPv6 abhängigen Funktionen richten sich nach,
	  oder versuchen sich nach den neuesten IPv6-Spezifikationen
	  zu richten. (<emphasis xmlns:xlink="http://www.w3.org/1999/xlink">Achtung</emphasis>: Dies ist keine
	  vollständige Liste - es wäre zu aufwändig,
	  diese zu pflegen...).</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Für weitere Details beachten sie bitte die
	  entsprechenden Kapitel, RFCs, manual pages, oder Kommentare
	  in den Quelltexten.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Konformitätsprüfungen wurden basierend auf
	  KAME-STABLE-Kit des TAHI-Projekts durchgeführt. Die
	  Ergebnisse können unter <uri xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://www.tahi.org/report/KAME/">http://www.tahi.org/report/KAME/</uri> eingesehen
	  werden. In der Vergangenheit begleiteten wir auch Tests mit
	  unseren älteren "Snapshots" an der Univ. of New
	  Hampshire IOL (<uri xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://www.iol.unh.edu/">http://www.iol.unh.edu/</uri>).</para>

        <itemizedlist xmlns:xlink="http://www.w3.org/1999/xlink">
	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">RFC1639: FTP Operation Over Big Address Records
	      (FOOBAR)</para>

	    <itemizedlist xmlns:xlink="http://www.w3.org/1999/xlink">
	      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
		<para xmlns:xlink="http://www.w3.org/1999/xlink">RFC2428 wird gegenüber RFC1639 bevorzugt.
		  FTP-Clients versuchen zuerst RFC2428, dann im
		  Fehlerfall RFC1639.</para>
	      </listitem>
	    </itemizedlist>
	  </listitem>

	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">RFC1886: DNS Extensions to support IPv6</para>
	  </listitem>

	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">RFC1933: Transition Mechanisms for IPv6 Hosts and
	      Routers</para>

	    <itemizedlist xmlns:xlink="http://www.w3.org/1999/xlink">
	      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
		<para xmlns:xlink="http://www.w3.org/1999/xlink">IPv4 kompatible Adressen werden nicht
		  unterstützt.</para>
	      </listitem>

	      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
		<para xmlns:xlink="http://www.w3.org/1999/xlink">Automatisches Tunneln (beschrieben in 4.3 dieses
		  RFC) wird nicht unterstützt.</para>
	      </listitem>

	      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
		<para xmlns:xlink="http://www.w3.org/1999/xlink">Die <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">gif</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">4</manvolnum></citerefentry>-Schnittstelle implementiert
		  einen IPv[46]-over-IPv[46] Tunnel in einer
		  allgemeinen Art und Weise und es umfaßt
		  "configured tunnel" wie in der Spezifikation
		  beschrieben. Siehe auch <link xmlns:xlink="http://www.w3.org/1999/xlink" linkend="gif">23.5.1.5</link> in diese Dokument
		  für weitere Details.</para>
	      </listitem>
	    </itemizedlist>
	  </listitem>

	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">RFC1981: Path MTU Discovery for IPv6</para>
	  </listitem>

	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">RFC2080: RIPng for IPv6</para>

	    <itemizedlist xmlns:xlink="http://www.w3.org/1999/xlink">
	      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
		<para xmlns:xlink="http://www.w3.org/1999/xlink">usr.sbin/route6d unterstützt dies.</para>
	      </listitem>
	    </itemizedlist>
	  </listitem>

	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">RFC2292: Advanced Sockets API for IPv6</para>

	    <itemizedlist xmlns:xlink="http://www.w3.org/1999/xlink">
	      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
		<para xmlns:xlink="http://www.w3.org/1999/xlink">Unterstützte Bibliotheksfunktionen bzw.
		  Kernel-APIs, siehe auch
		  <filename xmlns:xlink="http://www.w3.org/1999/xlink">sys/netinet6/ADVAPI</filename>.</para>
	      </listitem>
	    </itemizedlist>
	  </listitem>

	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">RFC2362: Protocol Independent Multicast-Sparse
	    Mode (PIM-SM)</para>

	    <itemizedlist xmlns:xlink="http://www.w3.org/1999/xlink">
	      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
		<para xmlns:xlink="http://www.w3.org/1999/xlink">RFC2362 definiert Paketformate für PIM-SM.
		  <filename xmlns:xlink="http://www.w3.org/1999/xlink">draft-ietf-pim-ipv6-01.txt</filename>
		  wurde basierend auf diesem RFC verfaßt.</para>
	      </listitem>
	    </itemizedlist>
	  </listitem>

	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">RFC2373: IPv6 Addressing Architecture</para>

	    <itemizedlist xmlns:xlink="http://www.w3.org/1999/xlink">
	      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
		<para xmlns:xlink="http://www.w3.org/1999/xlink">Unterstützt vom Knoten erforderliche
		  Adressen und richtet sich nach den Erfordernissen
		  des Bereichs.</para>
	      </listitem>
	    </itemizedlist>
	  </listitem>

	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">RFC2374: An IPv6 Aggregatable Global Unicast Address
	      Format</para>

	    <itemizedlist xmlns:xlink="http://www.w3.org/1999/xlink">
	      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
		<para xmlns:xlink="http://www.w3.org/1999/xlink">Unterstützt die 64-Bit-Breite einer
		  Interface ID.</para>
	      </listitem>
	    </itemizedlist>
	  </listitem>

	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">RFC2375: IPv6 Multicast Address Assignments</para>

	    <itemizedlist xmlns:xlink="http://www.w3.org/1999/xlink">
	      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
		<para xmlns:xlink="http://www.w3.org/1999/xlink">Userland-Applikationen nutzen die bekannten
		  Adressen, die in den RFC festgelegt sind.</para>
	      </listitem>
	    </itemizedlist>
	  </listitem>

	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">RFC2428: FTP Extensions for IPv6 and NATs</para>

	    <itemizedlist xmlns:xlink="http://www.w3.org/1999/xlink">
	      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
		<para xmlns:xlink="http://www.w3.org/1999/xlink">RFC2428 wird gegenüber RFC1639 bevorzugt.
		  FTP-Clients versuchen zuerst RFC2428, dann im
		  Fehlerfall RFC1639.</para>
	      </listitem>
	    </itemizedlist>
	  </listitem>

	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">RFC2460: IPv6 specification</para>
	  </listitem>

	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">RFC2461: Neighbor discovery for IPv6</para>

	    <itemizedlist xmlns:xlink="http://www.w3.org/1999/xlink">
	      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
		<para xmlns:xlink="http://www.w3.org/1999/xlink">Siehe auch <link xmlns:xlink="http://www.w3.org/1999/xlink" linkend="neighbor-discovery">23.5.1.2</link> in
		  diesem Dokument für weitere Details.</para>
	      </listitem>
	    </itemizedlist>
	  </listitem>

	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">RFC2462: IPv6 Stateless Address
	      Autoconfiguration</para>

	    <itemizedlist xmlns:xlink="http://www.w3.org/1999/xlink">
	      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
		<para xmlns:xlink="http://www.w3.org/1999/xlink">Siehe auch <link xmlns:xlink="http://www.w3.org/1999/xlink" linkend="ipv6-pnp">23.5.1.4</link> in diesem
		  Dokument für weitere Details.</para>
	      </listitem>
	    </itemizedlist>
	  </listitem>

	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">RFC2463: ICMPv6 for IPv6 specification</para>

	    <itemizedlist xmlns:xlink="http://www.w3.org/1999/xlink">
	      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
		<para xmlns:xlink="http://www.w3.org/1999/xlink">Siehe auch <link xmlns:xlink="http://www.w3.org/1999/xlink" linkend="icmpv6">23.5.1.9</link> in diesem Dokument
		  für weitere Details.</para>
	      </listitem>
	    </itemizedlist>
	  </listitem>

	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">RFC2464: Transmission of IPv6 Packets over Ethernet
	      Networks</para>
	  </listitem>

	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">RFC2465: MIB for IPv6: Textual Conventions and
	      General Group</para>

	    <itemizedlist xmlns:xlink="http://www.w3.org/1999/xlink">
	      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
		<para xmlns:xlink="http://www.w3.org/1999/xlink">Notwendige Statistiken werden vom Kernel
		  gesammelt. Die aktuelle
		  IPv6-MIB-Unterstützung wird als Patch-Sammlung
		  für ucd-snmp bereitgestellt.</para>
	      </listitem>
	    </itemizedlist>
	  </listitem>

	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">RFC2466: MIB for IPv6: ICMPv6 group</para>

	    <itemizedlist xmlns:xlink="http://www.w3.org/1999/xlink">
	      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
		<para xmlns:xlink="http://www.w3.org/1999/xlink">Notwendige Statistiken werden vom Kernel
		  gesammelt. Die aktuelle IPv6-MIB-Unterstützung
		  wird als Patch-Sammlung für ucd-snmp
		  bereitgestellt.</para>
	      </listitem>
	    </itemizedlist>
	  </listitem>

	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">RFC2467: Transmission of IPv6 Packets over FDDI
	      Networks</para>
	  </listitem>

	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">RFC2497: Transmission of IPv6 packet over ARCnet
	      Networks</para>
	  </listitem>

	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">RFC2553: Basic Socket Interface Extensions for
	      IPv6</para>

	    <itemizedlist xmlns:xlink="http://www.w3.org/1999/xlink">
	      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
		<para xmlns:xlink="http://www.w3.org/1999/xlink">IPv4 mapped address (3.7) and special behavior
		  of IPv6 wildcard bind socket (3.8) are supported.
		  See <link xmlns:xlink="http://www.w3.org/1999/xlink" linkend="ipv6-wildcard-socket">23.5.1.12</link> in
		  this document for details.</para>
	      </listitem>
	    </itemizedlist>
	  </listitem>

	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">RFC2675: IPv6 Jumbogramms</para>

	    <itemizedlist xmlns:xlink="http://www.w3.org/1999/xlink">
	      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
		<para xmlns:xlink="http://www.w3.org/1999/xlink">Siehe auch <link xmlns:xlink="http://www.w3.org/1999/xlink" linkend="ipv6-jumbo">23.5.1.7</link> in diesem
		  Dokument für weitere Details.</para>
	      </listitem>
	    </itemizedlist>
	  </listitem>

	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">RFC2710: Multicast Listener Discovery for
	      IPv6</para>
	  </listitem>

	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">RFC2711: IPv6 router alert option</para>
	  </listitem>

	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink"><filename xmlns:xlink="http://www.w3.org/1999/xlink">draft-ietf-ipngwg-router-renum-08</filename>:
	      Router renumbering for IPv6</para>
	  </listitem>

	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink"><filename xmlns:xlink="http://www.w3.org/1999/xlink">draft-ietf-ipngwg-icmp-namelookups-02</filename>:
	      IPv6 Name Lookups Through ICMP</para>
	  </listitem>

	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink"><filename xmlns:xlink="http://www.w3.org/1999/xlink">draft-ietf-ipngwg-icmp-name-lookups-03</filename>:
	      IPv6 Name Lookups Through ICMP</para>
	  </listitem>

	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink"><filename xmlns:xlink="http://www.w3.org/1999/xlink">draft-ietf-pim-ipv6-01.txt</filename>:
	      PIM for IPv6</para>

	    <itemizedlist xmlns:xlink="http://www.w3.org/1999/xlink">
	      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
		<para xmlns:xlink="http://www.w3.org/1999/xlink"><citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">pim6dd</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">8</manvolnum></citerefentry> implementiert dense mode.
		  <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">pim6sd</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">8</manvolnum></citerefentry> implementiert sparse mode.</para>
	      </listitem>
	    </itemizedlist>
	  </listitem>

	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink"><filename xmlns:xlink="http://www.w3.org/1999/xlink">draft-itojun-ipv6-tcp-to-anycast-00</filename>:
	      Unterbrechen einer TCP-Verbindung toward IPv6 anycast
	      address</para>
	  </listitem>

	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink"><filename xmlns:xlink="http://www.w3.org/1999/xlink">draft-yamamoto-wideipv6-comm-model-00</filename></para>

	    <itemizedlist xmlns:xlink="http://www.w3.org/1999/xlink">
	      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
		<para xmlns:xlink="http://www.w3.org/1999/xlink">Beachte <link xmlns:xlink="http://www.w3.org/1999/xlink" linkend="ipv6-sas">23.5.1.6</link>
		  in deisem Dokument für weitere Deatils.</para>
	      </listitem>
	    </itemizedlist>
	  </listitem>

	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink"><filename xmlns:xlink="http://www.w3.org/1999/xlink">draft-ietf-ipngwg-scopedaddr-format-00.txt
	      </filename>: Eine Erweiterung des Format for IPv6 Scoped
	      Addresses</para>
	  </listitem>
	</itemizedlist>
      </sect3>

      <sect3 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="neighbor-discovery">
        <title xmlns:xlink="http://www.w3.org/1999/xlink">Neighbor Discovery</title>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Neighbor Discovery ist weitestgehend stabil. Zur Zeit
	  werden Addressauflösung, Duplicated Address Detection
	  (DAD), und Neighbor Unreachability Detection (NUD)
	  unterstützt. In der näheren Zukunft werden wir
	  Proxy Neighbor Advertisement Unterstützung in den
	  Kernel einbauen und Unsolicited Neighbor Advertisement
	  Übertragungskommandos als Verwaltungsprogramm zur
	  Verfügung stellen.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Falls DAD versagt, wird die Adresse als "duplicated"
	  markiert und eine Nachricht wird erzeugt, die an Syslog
	  gesandt wird (und für gewöhnlich an die Konsole).
	  Die "duplicated"-Markierung kann mit <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">ifconfig</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">8</manvolnum></citerefentry>
	  überprüft werden. Es liegt in der Verantwortung
	  des Administrators, auf DAD-Fehler zu achten und diese zu
	  beheben. Dieses Verhalten sollte in der näheren Zukunft
	  verbessert werden.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Manche Netzwerktreiber verbinden Multicast-Pakete mit
	  sich selbst, sogar, wenn es vorgeschrieben ist, es nicht zu
	  tun (vor allem im Promiscuous-Modus). In solchen Fällen
	  könnte DAD versagen, weil die DAD-Steuerung ein inbound
	  NS packet sieht (eigentlich vom Knoten selber) und
	  betrachtet es als ein Duplikat. Sie könnten sich die
	  #if-Bedingung ansehen, die in
	  sys/netinet6/nd6_nbr.c:nd6_dad_timer() als "Workaround" mit
	  "heuristics" markiert ist (Beachte, dass das Kodefragment im
	  Abschnitt "heuristics" nicht der Spezifikation
	  entspricht).</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Neighbor Discovery specification (RFC2461)
	  kommuniziert in den folgenden Fällen nicht über
	  neighbor cache handling:</para>

	<orderedlist xmlns:xlink="http://www.w3.org/1999/xlink">
	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Der Knoten empfing ein unverlangtes
	      RS/NS/NA/redirect-Paket ohne Link-Layer-Adresse, wenn
	      kein neighbor cache-Eintrag vorhanden ist.</para>
	  </listitem>

	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">neighbor cache handling bei Geräten ohne
	      Link-Layer-Adresse (wir benötigen einen neighbor
	      cache Eintrag für das IsRouter-Bit)</para>
	  </listitem>
	</orderedlist>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Im ersten Fall implemenierten wir einen Workaround
	  basierend auf Diskussionen in der IETF-Ipngwg-Mailing-Liste.
	  Für weitere Details beachten Sie die Kommentare im
	  Quelltext und im Email-Thread, der bei (IPng 7155) mit dem
	  Datum vom 6. Feb 1999 gestartet wurde.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">IPv6 on-link Erkennungsregel (RFC2461) ist recht
	  unterschiedlich zu Übernahmen im BSD-Netzwerkkode. Zur
	  Zeit wird keine on-link Erkennungsregel unterstützt,
	  bei der die Defaultrouter-Liste leer ist (RFC2461, Abschnitt
	  5.2, letzter Satz im zweiten Absatz - beachte, dass die
	  Spezifikation das Wort "host" und "Knoten" an mehreren
	  Stellen im Abschnitt mißbraucht).</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Um mögliche DoS-Attacken und unendliche Schleifen
	  zu verhindern, werden bis jetzt nur 10 Optionen bei
	  ND-Paketen akzeptiert. Deshalb werden nur die ersten 10
	  Präfixe berücksichtigt, wenn man
	  20-Präfixoptionen zu RA hinzugefügt hat. Falls
	  das zu Schwierigkeiten führen sollte, dann sollte in
	  der FREEBSD-CURRENT-Mailing-Liste gefragt werden und/oder
	  die Variable nd6_maxndopt in
	  <filename xmlns:xlink="http://www.w3.org/1999/xlink">sys/netinet6/nd6.c</filename> modifizieren. Falls
	  die Nachfrage groß genug ist, könnte man einen
	  sysctl-Knopf für die Variable vorsehen.</para>
      </sect3>

      <sect3 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="ipv6-scope-index">
	<title xmlns:xlink="http://www.w3.org/1999/xlink">Bereichsindex</title>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">IPv6 benutzt Adressbereiche (Scoped Addresses).
	  Deshalb ist es sehr wichtig, mit einer IPv6-Adresse einen
	  Bereichsindex anzugeben (Schnittstellenindex für
	  link-local-Adresse, oder einen Lageindex für
	  site-local-Adressen). Ohne einen Bereichsindex ist ein
	  IPv6-Adressbereich für den Kernel zweideutig und dem
	  Kernel ist es nicht möglich, die Ausgabeschnittstelle
	  für ein Paket festzustellen.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Gewöhnliche Userland-Anwendungen sollten die
	  erweiterte Programmierschnittstelle (RFC2292) benutzen, um
	  den Bereichsindex oder Schnittstellenindex festzulegen.
	  Für ähnliche Zwecke wurde in RFC2553 sin6_scope_id
	  member in der sockaddr_in6-Struktur definiert. Wie auch
	  immer, die Semantik für sin6_scope_id ist ziemlich
	  wage. Wenn man auf Portierbarkeit der Anwendung
	  achten muß, dann schlagen wir vor, die erweiterte
	  Programmierschnittstelle anstelle von sin6_scope_id zu
	  benutzen.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Im Kernel ist ein Schnittstellenindex für
	  link-local scoped-Adressen in das zweite 16bit-Wort (drittes
	  und viertes Byte) der IPv6-Adresse eingebettet. Zum
	  Beispiel sieht man folgendes</para>

	<screen xmlns:xlink="http://www.w3.org/1999/xlink">	fe80:1::200:f8ff:fe01:6317</screen>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">in der Routing-Tabelle und in der
	  Schnittstellenadress-Struktur (structin6_ifaddr). Oben
	  genannte Adresse ist eine "link-local unicast address" die
	  zu einer Netzwerkschnittstelle gehört, deren
	  Schnittstellenbezeichner 1 (eins) ist. Der
	  eingebettete Index ermöglicht es, IPv6 link
	  local-Adressen über mehrere Schnittstellen hinweg
	  effektiv und mit wenig Änderungen am Kode zu
	  identifizieren.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Routing-Dämonen und Konfigurationsprogramme wie
	  <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">route6d</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">8</manvolnum></citerefentry> und <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">ifconfig</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">8</manvolnum></citerefentry> werden den
	  "eingebetteten" Bereichsindex verändern müssen.
	  Diese Programme benutzen routing sockets und ioctls (wie
	  SIOCGIFADDR_IN6) und die Kernel-Programmierschnittstelle
	  wird IPv6-Adressen, dessen zweites 16-Bit-Word gesetzt ist,
	  zurückgeben. Diese Programmierschnittstellen dienen
	  zur Änderung der Kernel-internen Struktur. Programme,
	  die diese Programmierschnittstellen benutzen, müssen
	  ohnehin auf Unterschiede in den Kerneln vorbereitet
	  sein.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Wenn man einen Adressbereich in der Kommandozeile
	  angibt, schreibt man niemals die eingebettete Form (so etwas
	  wie ff02:1::1 or fe80:2::fedc). Man erwartet nicht, dass es
	  funktioniert. Man benutzt immer die Standardform wie
	  ff02::1 oder fe80::fedc, zusammen mit der
	  Kommandozeilenoption, die die Schnittstelle festlegt (wie
	  <command xmlns:xlink="http://www.w3.org/1999/xlink">ping6 -I ne0 ff02::1</command>). Allgemein gilt,
	  wenn ein Kommando keine Kommandozeilenoption hat, um die
	  Ausgabeschnittstelle zu definieren, ist dieses Kommando noch
	  nicht für Adressbereiche bereit. Dies scheint der
	  Prämisse von IPv6 entgegenzustehen. Wir glauben, dass
	  die Spezifikationen einige Verbesserungen
	  benötigen.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Einige der Userland-Werkzeuge unterstützen die
	  erweiterte numerische IPv6-Syntax wie sie in
	  <filename xmlns:xlink="http://www.w3.org/1999/xlink">draft-ietf-ipngwg-scopedaddr-format-00.txt</filename>
	  beschrieben ist. Man kann die ausgehende Verbindung
	  angeben, indem man den Namen der ausgehenden Schnittstelle
	  wie folgt benutzt: "fe80::1%ne0". Auf diese Art und Weise
	  ist man in der Lage, eine link-local scoped Adresse ohne
	  viele Schwierigkeiten anzugeben.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Um die Erweiterungen im eigenen Programm zu nutzen,
	  muss man <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">getaddrinfo</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">3</manvolnum></citerefentry> und <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">getnameinfo</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">3</manvolnum></citerefentry> mit
	  NI_WITHSCOPEID verwenden. Die Implementierung setzt im
	  Moment eine 1-zu-1 Beziehung zwischen einer Verbindung und
	  einer Schnittstelle voraus, die stärker ist, als es die
	  Spezifikationen beschreiben.</para>
      </sect3>

      <sect3 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="ipv6-pnp">
	<title xmlns:xlink="http://www.w3.org/1999/xlink">Plug and Play</title>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Der grösste Teil der statuslosen
	  IPv6-Adress-Autokonfiguration ist im Kernel implementiert.
	  Neighbor-Discovery-Funktionen sind als ganzes im Kernel
	  implementiert. Router-Advertisement (RA) Eingabe für
	  Hosts ist im Kernel implementiert. Router-Solicitation (RS)
	  Ausgabe für Hosts, RS-Eingabe für Router und
	  RA-Ausgabe für Router ist im Userland
	  implementiert.</para>

        <sect4 xmlns:xlink="http://www.w3.org/1999/xlink">
	  <title xmlns:xlink="http://www.w3.org/1999/xlink">Zuweisung von link-local und speziellen
	    Adressen</title>

	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Die IPv6 link-local-Adresse wird aus einer
	    IEEE802-Adresse (Ethernet MAC address) erzeugt. Jeder
	    Schnittstelle wird automatisch eine IPv6
	    link-local-Adresse zugewiesen, sobald die Schnittstelle
	    aktiv ist (IFF_UP). Ebenso wird eine direkte Route
	    für die link-local-Adresse zur Routing-Tabelle
	    hinzugefügt.</para>

	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Hier ist eine Ausgabe des netstat-Kommandos:</para>

	  <screen xmlns:xlink="http://www.w3.org/1999/xlink">Internet6:
Destination                   Gateway                   Flags      Netif Expire
fe80:1::%ed0/64               link#1                    UC          ed0
fe80:2::%ep0/64               link#2                    UC          ep0</screen>

	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Schnittstellen, die keine IEEE802-Adresse haben
	    (Pseudo-Schnittstellen wie Tunnel-Schnittstellen oder
	    ppp-Schnittstellen), borgen sich eine IEEE802-Adresse von
	    anderen Schnittstellen wie Ethernet-Schnittstellen aus,
	    wann immer das möglich ist. Wenn keine
	    IEEE802-Geräte eingebaut sind, wird als letzte
	    Möglichkeit eine Pseudo-Zufallszahl - MD5(hostname) -
	    als Quelle für eine link-local-Adresse benutzt.
	    Falls diese für den Einsatz nicht geeignet sein
	    sollte, dann muss man eine link-local-Adresse manuell
	    konfigurieren.</para>

	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Falls eine Schnittstelle nicht imstande ist,
	    IPv6-Adressen zu handhaben (wie fehlende
	    Unterstützung des multicast), wird keine
	    link-local-Adresse der Schnittstelle zugewiesen. Siehe
	    Abschnitt 2 für weitere Details.</para>

	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Jede Schnittstelle verbindet die solicited multicast
	    Adresse und link-local all-nodes multicast-Adressen (z.B.
	    fe80::1:ff01:6317 und ff02::1, jeweils zu der Verbindung,
	    an die die Schnittstelle verbunden ist). zusätzlich
	    zu einer link-local-Adresse wird eine loopback-Adresse
	    (::1) einer loopback-Schnittstelle zugewiesen.
	    Außerdem werden ::1/128 und ff01::/32 automatisch
	    zur Routing-Tabelle hinzugefügt und die
	    loopback-Schnittstelle verbindet sich mit der node-local
	    multicast Gruppe ff01::1.</para>
        </sect4>

        <sect4 xmlns:xlink="http://www.w3.org/1999/xlink">
	  <title xmlns:xlink="http://www.w3.org/1999/xlink">Stateless address autoconfiguration beim Host</title>

	  <para xmlns:xlink="http://www.w3.org/1999/xlink">In der IPv6-Spezifikation werden Knoten in zwei
	    Kategorien unterteilt: <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">Router</emphasis> und
	    <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">Hosts</emphasis>. Router leiten Pakete, die an
	    andere adressiert sind, weiter, Hosts leiten Pakete nicht
	    weiter. net.inet6.ip6.forwarding definiert, ob dieser
	    Knoten ein Router oder ein Host ist (Router falls es 1
	    ist, Host, falls es 0 ist).</para>

	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Sobald ein Host ein Router-Advertisement vom Router
	    hört, kann er sich selbst mit statusloser
	    automatischer Adressen konfigurieren. Dieses Verhalten
	    kann mit net.inet6.ip6.accept_rtadv (der Host konfiguriert
	    sich selber, wenn es auf 1 gesetzt ist) beeinflusst
	    werden. Bei einer automatischen Konfiguration wird das
	    Netzwerkadresspräfix für die empfangende
	    Schnittstelle (für gewöhnlich das globale
	    Adresspräfix) hinzugefügt. Die Standard-Route
	    wird ebenso konfiguriert. Router erzeugen periodisch
	    Router-Advertisement-Pakete. Um einen benachbarten Router
	    aufzufordern, ein RA-Paket zu erzeugen, kann eine
	    Host-Router-Solicitation übertragen werden. Um
	    jederzeit ein RS-Paket zu erzeugen, benutzt man das
	    <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">rtsol</emphasis>-Kommando. Ein
	    <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">rtsold</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">8</manvolnum></citerefentry>-Dämon ist ebenso verfügbar.
	    <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">rtsold</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">8</manvolnum></citerefentry> erzeugt Router-Solicitation, wann immer es
	    notwendig ist und es funktioniert großartig "bei
	    normadischem Einsatz" (Notebooks/Laptops). Falls jemand
	    Router-Advertisements zu ignorieren wünscht, setzt man
	    mit sysctl et.inet6.ip6.accept_rtadv auf 0.</para>

	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Um Router-Advertisement von einem Router aus zu
	    erzeugen, benutzt man den
	    <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">rtadvd</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">8</manvolnum></citerefentry>-Dämon.</para>

	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Beachte, dass die IPv6-Spezifikation von folgenden
	    Punkte ausgeht und nicht konforme Fälle werden als
	    nicht spezifiziert ausgelassen:</para>

	  <itemizedlist xmlns:xlink="http://www.w3.org/1999/xlink">
	    <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	      <para xmlns:xlink="http://www.w3.org/1999/xlink">Nur Hosts hören auf Router-Angebote</para>
	    </listitem>

	    <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	      <para xmlns:xlink="http://www.w3.org/1999/xlink">Hosts haben eine einzige Netzwerk-Schnittstelle
		(außer loopback)</para>
	    </listitem>
	  </itemizedlist>

	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Deshalb ist es unklug, net.inet6.ip6.accept_rtadv
	    bei Routern oder bei Hosts mit mehreren Schnittstellen
	    einzuschalten. Ein falsch konfigurierter Knoten kann sich
	    seltsam verhalten (nicht konforme Konfiguration ist
	    für diejenigen erlaubt, die Experimente
	    durchführen möchten).</para>

	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Eine Zusammenfassung des sysctl-Angaben:</para>

	  <screen xmlns:xlink="http://www.w3.org/1999/xlink">	accept_rtadv forwarding Rolle des Knotens
   ---	   ---    ---
    0       0    Host (wird manuell konfiguriert)
    0       1    Router
    1       0    automatisch konfigurierter Host
	             (Die Spezifikation setzt voraus, dass der Host nur eine einzelne Schnittstelle hat, ein automatisch konfigurierter Host mit mehreren Schnittstellen ist außerhalb der Betrachtung)
    1       1    ungültig, oder für Experimentierzwecke (außerhalb der Spezifikation)</screen>

	  <para xmlns:xlink="http://www.w3.org/1999/xlink">RFC2462 hat eine Überprüfungsregel gegen
	    eingehende RA-prefix-information-option, in 5.5.3 (e).
	    Dies dient zum Schutz des Hosts vor schlecht oder falsch
	    konfigurierten Routern, die eine sehr kurze
	    Präfixlebenszeit ankündigen. Es gab
	    Aktualisierungen von Jim Bound in der ipngwg-Mailing-Liste
	    (suche nach "(ipng 6712)" im Archive) und es wurde Jims
	    Aktualisierung implementiert.</para>

	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Siehe auch <link xmlns:xlink="http://www.w3.org/1999/xlink" linkend="neighbor-discovery">23.5.1.2</link> im Dokument
	    für das Verhältnis zwischen DAD und
	    autoconfiguration.</para>
	</sect4>
      </sect3>

      <sect3 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="gif">
	<title xmlns:xlink="http://www.w3.org/1999/xlink">Generische Tunnel-Schnittstelle</title>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">GIF (Generische Schnittstelle) ist eine
	  Pseudoschnittstelle für konfigurierte Tunnel. Details
	  sind in <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">gif</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">4</manvolnum></citerefentry> beschrieben. Im Moment sind</para>

	<itemizedlist xmlns:xlink="http://www.w3.org/1999/xlink">
	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">v6 in v6</para>
	  </listitem>

	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">v6 in v4</para>
	  </listitem>

	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">v4 in v6</para>
	  </listitem>

	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">v4 in v4</para>
	  </listitem>
	</itemizedlist>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">verfügbar. Benutze <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">gifconfig</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">8</manvolnum></citerefentry>, um die
	  physikalische (außerhalb liegende) Quelle und die
	  Zieladresse den gif-Schnittstellen zuzuweisen. Eine
	  Konfiguration, die die selbe Adressfamilie für innere und
	  äußere IP-Header (v4 in v4, oder v6 in v6) benutzt, ist
	  gefährlich. Es ist sehr leicht, Schnittstellen und
	  Routing-Tabellen so zu konfigurieren, dass eine unendliche
	  Ebene von Tunneln ausgeführt wird. <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">Seien Sie
	  also gewarnt</emphasis>.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">gif kann ECN-freundlich konfiguriert werden. Beachte
	  <link xmlns:xlink="http://www.w3.org/1999/xlink" linkend="ipsec-ecn">23.5.4.5</link> für eine
	  ECN-Freundlichkeit von Tunneln und <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">gif</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">4</manvolnum></citerefentry> wie man sie
	  konfiguriert.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Falls man einen IPv4-in-IPv6-Tunnel mit einer
	  gif-Schnittstelle konfigurieren möchte, sollte man
	  <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">gif</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">4</manvolnum></citerefentry> sorgfältig lesen. Man muss die IPv6
	  link-local Adresse, die automatisch der gif-Schnittstelle
	  zugewiesen wird, entfernen.</para>
      </sect3>

      <sect3 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="ipv6-sas">
	<title xmlns:xlink="http://www.w3.org/1999/xlink">Source Address Selection</title>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Im Moment ist die Regel zur Auswahl der Quelle
	  bereichsorientiert (es gibt einige Ausnahmen - siehe unten).
	  Für ein gegebenes Ziel wird eine Quell-IPv6-Adresse
	  durch folgende Regel ausgewählt:</para>

	<orderedlist xmlns:xlink="http://www.w3.org/1999/xlink">
	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Falls die Quelladresse explizit durch den Benutzer
	      angegeben ist (z.B. über das erweiterte API), dann
	      wird die angegebene Adresse benutzt.</para>
	  </listitem>

	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Falls eine Adresse der ausgehenden Schnittstelle
	      zugewiesen wird, die den selben Bereich wie die
	      Zieladresse hat (was normalerweise durch einen Blick in
	      die Routing-Tabelle festgestellt werden kann), dann wird
	      diese Adresse benutzt.</para>

	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Dies ist ein typischer Fall.</para>
	  </listitem>

	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Falls keine Adresse der obigen Bedingung
	      genügt, dann wählt man eine globale Adresse,
	      die einer der Schnittstellen des sendenden Knotens
	      zugewiesen ist.</para>
	  </listitem>

	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Falls keine Adresse der obigen Bedingung
	      genügt und die Zieladresse ist im site
	      local-Bereich, dann wählt man eine eine site
	      local-Adresse, die einer der Schnittstellen des
	      sendenden Knotens zugewiesen ist.</para>
	  </listitem>

	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Falls keine Adresse der obigen Bedingung
	      genügt, dann wählt man eine Adresse, die mit
	      einem Eintrag in der Routing-Tabelle für das Ziel
	      verbunden ist. Dies ist die letzte Möglichkeit,
	      die eine Bereichsverletzung verursachen
	      könnte.</para>
	  </listitem>
	</orderedlist>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Zum Beispiel, ::1 ist ausgewählt für
	  ff01::1, fe80:1::200:f8ff:fe01:6317 für
	  fe80:1::2a0:24ff:feab:839b (beachte den eingebetteten
	  Schnittstelleindex - beschrieben in <link xmlns:xlink="http://www.w3.org/1999/xlink" linkend="ipv6-scope-index">23.5.1.3</link> - er hilft uns,
	  die richtige Quelladresse auszuwählen. Diese
	  eingebetteten Indexe werden nicht übertragen). Falls
	  die ausgehende Schnittstelle mehrere Adressen für einen
	  Bereich hat, wird die Quelle gewählt, die die breiteste
	  passende Basis hat (Regel 3). Angenommen
	  2001:0DB8:808:1:200:f8ff:fe01:6317 und
	  2001:0DB8:9:124:200:f8ff:fe01:6317 sind einer ausgehenden
	  Schnittstelle zugewiesen.
	  2001:0DB8:808:1:200:f8ff:fe01:6317 wird als Quelle für
	  das Ziel 2001:0DB8:800::1 ausgewählt.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Beachte, dass obige Regel nicht in der
	  IPv6-Spezifikation dokumentiert ist. Es wird als "up to
	  implementation"-Punkt betrachtet. Es gibt einige Fälle,
	  bei denen die obige Regel nicht benutzt werden soll. Ein
	  Beispiel ist die verbundene TCP-Sitzung und man benutzt die
	  Adresse, die in tcb als Quelle gehalten wird. Ein anderes
	  Beispiel ist die Quelladresse für Neighbor
	  Advertisement. Laut Spezifikation (RFC2461 7.2.2) sollte
	  die Quelle des NA die Zieladresse des korrespondierenden
	  Ziel des NS sein. In diesem Fall folgen wir eher der
	  Spezifikation, als der obigen longest-match-Regel.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Für neue Verbindungen werden (wenn Regel eins
	  nicht zutrifft) abgelehnte Adressen (Adressen mit
	  bevorzugter Lebenszeit = 0) nicht ausgewählt, wenn
	  andere Auswahlmöglichkeiten bestehen. Wenn keine
	  anderen Auswahlmöglichkeiten bestehen, werden
	  abgelehnte Adressen als letzte Möglichkeit benutzt.
	  Falls mehrere Auswahlmöglichkeiten für abgelehnte
	  Adressen bestehen, dann wird ogige Regel verwendet, um aus
	  diesen abgelehnten Adressen auszuwählen. Falls man aus
	  bestimmten Gründen die Benutzung abgelehnter Adressen
	  unterbinden möchte, dann setzt man
	  net.inet6.ip6.use_deprecated auf 0. Der Punkt
	  bezüglich der abgelehnten Adressen ist in RFC2462 5.5.4
	  beschrieben (Beachte: Im Moment wird in der IETF ipngwg
	  darüber debatiert, wie angelehnte Adressen benutzt
	  werden sollen).</para>
      </sect3>

      <sect3 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="ipv6-jumbo">
	<title xmlns:xlink="http://www.w3.org/1999/xlink">Jumbo Payload</title>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Die Jumbo-Payload hop-by-hop-Option ist implementiert
	  und kann benutzt werden, um IPv6-Pakete mit Datenpaketen
	  größer als 65.535 Oktette. Aber im Moment wird
	  keine physikalische Schnittstelle unterstützt, deren MTU
	  größer ist als 65.536, so dass diese Datenpakete
	  nur bei den loopback-Schnittstellen zu finden sind (z.B.
	  lo0).</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Falls man die Jumbo Payloads testen möchte, muss
	  man zunächst den Kernel rekonfigurieren, so dass die
	  MTU der loopback-Schnittstelle grösser 65.535 Bytes
	  sein kann. Füge folgende Zeile zur Kernel-Konfiguration
	  hinzu:</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink"><literal xmlns:xlink="http://www.w3.org/1999/xlink">
	  options		"LARGE_LOMTU"		#Um Jumbo Payload zu testen
	  </literal></para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">und dann kompiliere den Kernel neu.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Dann kann man die Jumbo-Payloads mittels
	  <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">ping6</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">8</manvolnum></citerefentry>-Kommando mit den Optionen -b und -s testen.
	  Die Option -b muss angegeben werden, um die Größe
	  des Socket-Puffers zu erhön, und die Option -s gibt die
	  Größe des Pakets an, die größer als
	  65.535 sein sollte. Beispielsweise gibt man folgendes
	  ein:</para>

	<screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">ping6 -b 70000 -s 68000 ::1</userinput></screen>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Die IPv6-Spezifikation verlangt, dass die
	  Jumbo-Payload-Option nicht in einem Paket verwendet werden
	  darf, das einen fragmentierten Header hat. Falls diese
	  Bedingung nicht zutrifft, dann muss eine
	  ICMPv6-Parameter-Problem-Nachricht an den Absender
	  geschickt werden. Die Spezifikation ist befolgt, aber man
	  kann normalerweise nicht einen ICMPv6-Fehler sehen, der
	  durch diese Forderung hervorgerufen wird.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Wenn ein IPv6-Paket empfangen wird, dann wird die
	  Rahmenlänge geprüft und sie wird mit der
	  Größe verglichen, die im Datenfeld für die
	  Paketgröße des IPv6-Headers oder im Wert für
	  die Jumbo-Payload-Option angegeben ist, sofern vorhanden.
	  Falls ersterer kleiner als letzterer ist, dann wird das
	  Paket abgelehnt und die Statistiken werden erhöht. Man
	  kann die Statistik als Ausgabe des <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">netstat</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">8</manvolnum></citerefentry>-Kommandos
	  mit der `-s -p ip6'-Option sehen:</para>

	<screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">netstat -s -p ip6</userinput>
	  ip6:
		(snip)
		1 with data size &lt; data length</screen>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">So, der Kernel sendet keinen ICMPv6-Fehler,
	  außer das fehlerhafte Paket ist ein aktuelles
	  Jumbo-Payload, dessen Paketgröße
	  größer als 65,535 Bytes ist. Wie oben
	  beschrieben, gibt es momentan keine physikalische
	  Schnittstelle, die eine so riesige MTU unterstützt,
	  daher gibt es so selten einen ICMPv6-Fehler.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">TCP/UDP over Jumbogramm wird im Moment nicht
	  unterstützt. Dies kommt daher, weil wir kein Medium
	  (außer loopback) haben, dies zu testen. Melden Sie
	  sich, falls Sie es benötigen.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">IPsec funktioniert nicht mit Jumbogramm. Dies ist
	  bedingt durch einige Änderungen an der Spezifikation,
	  welche die Unterstützung von AH mit Jumbogramm
	  betrifft (AH-Header-Größe beeinflusst die
	  Länge des Datenpakets und das macht es richtig
	  schwierig, ein eingehendes Paket mit Jumbo-Payload-Option so
	  gut zu authentifizieren wie ein AH).</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Es gibt grundlegende Punkte in der
	  *BSD-Unterstützung für Jumbogramms. Wir
	  würden jene gerne ansprechen, aber wir benötigen
	  mehr Zeit diese fertig zu stellen. Um ein paar zu
	  benennen:</para>

	<itemizedlist xmlns:xlink="http://www.w3.org/1999/xlink">
	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">mbuf pkthdr.len-Feld ist in 4.4BSD typisiert als
	      "int", so dass es kein Jumbogramm mit len &gt; 2G bei
	      32Bit-Architekturen aufnehmen kann. Wenn wir
	      Jumbogramme geeignet unterstützen wollten, dann
	      muss das Feld erweitert werden, damit es 4G +
	      IPv6-Header + link-layer-Header aufnehmen kann. Deshalb
	      muss es schließlich auf int64_t (u_int32_t ist
	      NICHT genug) erweitert werden.</para>
	  </listitem>

	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Irrigerweise benutzen wir "int" an vielen Stellen,
	      um die Paketlänge aufzunehmen. Wir müssen sie
	      in einen größeren ganzzahligen Typ
	      konvertieren. Es braucht große Vorsicht, weil wir
	      sonst einen Überlauf während der Berechnung
	      der Paketlänge erleben können.</para>
	  </listitem>

	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Irrigerweise prüfen wir das ip6_plen-Feld des
	      IPv6-Header für packet payload length an
	      verschiedenen Stellen. Wir sollten mbuf pkthdr.len
	      stattdessen prüfen. ip6_input() wird bei der
	      Eingabe eine Prüfung der Jumbo -Payload-Option
	      durchführen und wir können danach mbuf
	      pkthdr.len sicher benutzen.</para>
	  </listitem>

	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Natürlich braucht der TCP-Kode an einigen
	      Stellen eine sorgfältige Aktualisierung.</para>
	  </listitem>
	</itemizedlist>
      </sect3>

      <sect3 xmlns:xlink="http://www.w3.org/1999/xlink">
	<title xmlns:xlink="http://www.w3.org/1999/xlink">Verhindern von Schleifen beim Verarbeiten von
	  Headern</title>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Die IPv6-Spezifikation erlaubt eine willkürliche
	  Zahl von Erweiterungs-Headern, die in einem Paket platziert
	  werden können. Wenn wir IPv6-Kode für die
	  Paketverarbeitung auf die Art und Weise implementieren wie
	  wir es beim BSD-IPv4-Kode geschehen ist, dann würde
	  wegen einer lange Kette von Funktionsaufrufen der
	  Kernel-Stack überlaufen. sys/netinet6-Kode ist
	  behutsam entwickelt wurden, um einen Überlauf des
	  Kernel-Stacks zu verhindern. Deswegen definiert der
	  sys/netinet6-Kode seine eigene Protocol-Switch-Struktur
	  "struct ip6protosw" (siehe auch
	  <filename xmlns:xlink="http://www.w3.org/1999/xlink">netinet6/ip6protosw.h</filename>). Aus
	  Gründen der Kompatibilität gibt es keine solche
	  Aktualisierung im IPv4-Teil (sys/netinet), aber eine kleine
	  Änderung ist zum pr_input()-Prototyp hinzugefügt
	  worden. So ist "struct ipprotosw" ebenso definiert.
	  Deswegen kann der Kernel-Stack sich aufblähen, wenn man
	  ein IPsec-over-IPv4-Paket mit einer massiven Zahl von
	  IPSec-Header empfängt. IPsec-over-IPv6 ist in Ordnung.
	  (Natürlich muss für all diese zu verarbeitenden
	  IPSec-Header jeder einzelne IPSec-Header jede
	  IPSec-Prüfung durchlaufen. So wird es einem anonymen
	  Angreifer unmöglich gemacht eine Attacke
	  durchzuführen.)</para>
      </sect3>

      <sect3 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="icmpv6">
	<title xmlns:xlink="http://www.w3.org/1999/xlink">ICMPv6</title>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Nachdem RFC2463 veröffentlicht worden war, hat
	  die IETF-ipngwg beschlossen ICMPv6-Fehler-Pakete gegen
	  ICMPv6 umzuleiten, um einen ICMPv6-Sturm auf einem
	  Netzwerkmedium zu unterbinden. Dies ist bereits im Kernel
	  implementiert.</para>
      </sect3>

      <sect3 xmlns:xlink="http://www.w3.org/1999/xlink">
	<title xmlns:xlink="http://www.w3.org/1999/xlink">Anwendungen</title>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Für Programmierung des Userland unterstützen
	  wir das IPv6-Socket-API wie es in RFC2553, RFC2292 und in
	  aufkommenden Internet-Konzepten beschrieben ist.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">TCP/UDP über IPv6 ist verfügbar und ziemlich
	  stabil. Man kann sich an <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">telnet</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">1</manvolnum></citerefentry>, <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">ftp</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">1</manvolnum></citerefentry>,
	  <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">rlogin</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">1</manvolnum></citerefentry>, <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">rsh</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">1</manvolnum></citerefentry>, <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">ssh</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">1</manvolnum></citerefentry>, usw. erfreuen.
	  Diese Anwendungen sind unabhängig vom Protokoll. Das
	  liegt daran, weil diese Programme automatisch IPv4 oder IPv6
	  entsprechend des DNS auswählen.</para>
      </sect3>

      <sect3 xmlns:xlink="http://www.w3.org/1999/xlink">
	<title xmlns:xlink="http://www.w3.org/1999/xlink">Kernel Interna</title>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Während ip_forward() ip_output() aufruft, ruft
	  ip6_forward() direkt if_output() auf, da Router IPv6-Pakete
	  nicht in Fragmente teilen dürfen.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">ICMPv6 sollte das original Paket so lang wie
	  möglich bis maximal 1280 halten. UDP6/IP6 port
	  unreach, zum Beispiel, sollte alle Erweiterungs-Header und
	  die unveränderten UDP6- und IP6-Header enthalten. Um
	  das originale Paket zu erhalten, konvertieren alle
	  IP6-Funktionen außer TCP niemals Network-Byte-Order in
	  Host-Byte-Order.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">tcp_input(), udp6_input() und icmp6_input()
	  können nicht voraussetzen, dass der IP6-Header vor dem
	  Transport-Header, der zum Extension-Header gehört,
	  kommt. Deshalb wurde in6_cksum() implementiert, um Pakete,
	  deren IP6-Header und Transport-Header nicht fortlaufend ist,
	  zu behandeln. Weder TCP/IP6- noch
	  UDP6/IP6-Header-Strukturen existieren, um eine Prüsumme
	  zu bilden.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Um IP6-Header, Extension-Header und Transport-Headers
	  leichter verarbeiten zu können, werden nun
	  Netzwerktreiber benötigt, die Pakete in einem internen
	  mbuf oder in einem oder mehreren externen mbuf speichern
	  können. Ein typischer alter Treiber legt zwei interne
	  mbuf für 96 - 204 Bytes an Daten an, wie auch immer
	  wird ein solches Paket jetzt in einem externen mbuf
	  gespeichert.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink"><command xmlns:xlink="http://www.w3.org/1999/xlink">netstat -s -p ip6</command> ermittelt, ob der
	  Treiber sich nach solchen Erfordernissen richtet, oder
	  nicht. Im folgenden Beispiel verletzt "cce0" dies
	  Erfordernisse (Für weitere Informationen, siehe
	  Abschnitt 2.).</para>

	<screen xmlns:xlink="http://www.w3.org/1999/xlink">Mbuf statistics:
                317 one mbuf
                two or more mbuf::
                        lo0 = 8
			cce0 = 10
                3282 one ext mbuf
                0 two or more ext mbuf</screen>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Jede Eingabefunktion ruft IP6_EXTHDR_CHECK am Anfang
	  auf, um zu prüfen, ob der Bereich zwischen IP6 und
	  seinen Header durchgehend ist. IP6_EXTHDR_CHECK ruft
	  m_pullup() nur dann auf, wenn mbuf das M_LOOP-Flag gestzt
	  hat, weil das Paket von der Loopback-Schnittstelle kommt.
	  m_pullup() wird niemals aufgerufen, wenn Pakete von
	  physikalischen Netzwerkschnittstellen kommen.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">IP- und IP6-Reassemble-Funktionen rufen niemals
	  m_pullup() auf.</para>
      </sect3>

      <sect3 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="ipv6-wildcard-socket">
	<title xmlns:xlink="http://www.w3.org/1999/xlink">IPv4-Mapped-Address und IPv6-Wildcard-Socket</title>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">RFC2553 beschreibt IPv4-Mapped-Address (3.7) und die
	  spezielle Verhaltensweise des IPv6-Wildcard-Bind-Socket
	  (3.8). Die Spezifikation gestattet es:</para>

	<itemizedlist xmlns:xlink="http://www.w3.org/1999/xlink">
	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">IPv4-Verbindungen von AF_INET6-Wildcard-Bind-Socket
	      zu erlauben.</para>
	  </listitem>

	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">IPv4-Pakete über AF_INET6-Socket zu
	      transportieren, indem eine spezielle Form der Adresse
	      wie ::ffff:10.1.1.1 benutzt wird.</para>
	  </listitem>
	</itemizedlist>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Aber die Spezifikation ist sehr kompliziert und
	  spezifiziert nicht, wie der Socket-Layer sich verhalten
	  soll. Darauf Bezug nehmend nennen wir hier ersteren
	  "hörende Seite" und letzteren "beginnende
	  Seite".</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Man kann einen Wildcard-Bind auf demselben Port bei
	  beiden Adressfamilien durchführen.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Die folgende Tabelle zeigt das Verhalten von FreeBSD
	  4.x.</para>

	<screen xmlns:xlink="http://www.w3.org/1999/xlink">Hörende Seite          Beginnende Seite
                (AF_INET6-Wildcard-      (Verbindung zu ::ffff:10.1.1.1)
                Socket erreicht IPv4 Verb.)
                ---                     ---
FreeBSD 4.x     Konfigurierbar            unterstützt
                Standard: erlaubt</screen>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Die folgende Abschnitte zeigen mehr Details und wie
	  man das Verhalten konfigurieren kann.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Kommentare auf der hörenden Seite:</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Es sieht so aus, dass RFC2553 zu wenig zu den Punkten
	  über Wildcard-Bind erläutert, speziell zum
	  Punkt über Port-Space, Fehler-Modus und Beziehung
	  zwischen AF_INET/INET6 wildcard bind. Es kann mehrere
	  unterschiedliche Interpretationen zu diesem RFC geben, die
	  sich nach diesen richten, aber sich unterschiedlich
	  verhalten. Um eine portable Anwendung zu implementieren,
	  sollte man deshalb nicht ein bestimmtes Verhalten des
	  Kernels voraussetzen. Der Einsatz von <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">getaddrinfo</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">3</manvolnum></citerefentry>
	  ist der sicherste Weg. Port number space und wildcard bind
	  issues wurden Mitte Mai 1999 detailliert in der
	  Ipv6imp-Mailing-Liste diskutiert und es sieht so aus, als ob
	  es keinen konkreten Konsens gab (means, up to implementers).
	  Vielleicht sollte man die Archive der Mailing-Liste
	  prüfen.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Wenn eine Server-Anwendung IPv4- und IPv6-Verbindungen
	  annehmen möchte, dann gibt es zwei Alternativen.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Eine benutzt AF_INET- und AF_INET6-Socket (man
	  benötigt zwei Sockets). Benutze <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">getaddrinfo</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">3</manvolnum></citerefentry>
	  mit gesetztem AI_PASSIVE-Bit in ai_flags, <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">socket</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">2</manvolnum></citerefentry> und
	  <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">bind</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">2</manvolnum></citerefentry> für alle zurückgegebenen Adressen.
	  Mit dem öffnen mehrerer Sockets kann man Verbindungen
	  an dem Socket mit der richtigen Adressfamilie annehmen.
	  IPv4-Verbindungen werden vom AF_INET-Socket und
	  IPv6-Verbindungen vom AF_INET6-Socket angenommen.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Ein anderer Weg ist einen AF_INET6 wildcard
	  bind-Socket zu verwenden. Man benutzt <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">getaddrinfo</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">3</manvolnum></citerefentry>
	  mit AI_PASSIVE in ai_flags, mit AF_INET6 in ai_family, man
	  setzt das erste Argument hostname auf NULL, <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">socket</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">2</manvolnum></citerefentry>
	  und <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">bind</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">2</manvolnum></citerefentry> auf die zurückgegebene Adresse (es
	  sollte eine unspezifizierte IPv6-Adresse sein). Man kann
	  IPv4- und IPv6-Paket über diesen Socket
	  annehmen.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Um nur IPv6-Datenverkehr portabel an AF_INET6 wildcard
	  gebundenen Socket zu unterstützen, prüft man,
	  sobald die Verbindung Zustande gekommen ist, immer die
	  Peer-Adresse gegen den hörenden AF_INET6-Socket. Wenn
	  die Adresse eine IPv4-Mapped-Adresse ist, dann sollte man
	  die Verbindung zurückweisen. Man kann die Bedingung
	  mit dem IN6_IS_ADDR_V4MAPPED()-Makro prüfen.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Um diesen Punkt leichter lösen zu können,
	  gibt es für <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">setsockopt</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">2</manvolnum></citerefentry> die System
	  abhängige Option IPV6_BINDV6ONLY, die wie folgt benutzt
	  wird.</para>

	<screen xmlns:xlink="http://www.w3.org/1999/xlink">	int on;

	setsockopt(s, IPPROTO_IPV6, IPV6_BINDV6ONLY,
		   (char *)&amp;on, sizeof (on)) &lt; 0));</screen>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Wenn der Aufruf erfolgreich ist, dann empfängt
	  dieser Socket nur IPv6-Pakete.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Kommentare zur sendenden Seite:</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Ratschlag an Anwendungsentwickler: um eine portable
	  IPv6-Anwendung zu implementieren (die mit verschiedenen
	  IPv6-Kerneln funktioniert), ist das Folgende der
	  Schlüssel zum Erfolg wie wir glauben:</para>

	<itemizedlist xmlns:xlink="http://www.w3.org/1999/xlink">
	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">NIEMALS AF_INET oder AF_INET6 hart kodieren.</para>
	  </listitem>

	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Benutze <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">getaddrinfo</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">3</manvolnum></citerefentry> und
	      <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">getnameinfo</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">3</manvolnum></citerefentry> überall im System. Benutze
	      niemals gethostby*(), getaddrby*(), inet_*() oder
	      getipnodeby*() (Um bestehende Applikationen leicht IPv6
	      fähig zu machen, wird getipnodeby*() manchmal
	      nützlich sein. Falss es aber möglich sein
	      sollte, versuche den Kode neu zu schreiben und
	      <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">getaddrinfo</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">3</manvolnum></citerefentry> und <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">getnameinfo</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">3</manvolnum></citerefentry> zu
	      benutzen)</para>
	  </listitem>

	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Wenn man sich an ein Ziel verbinden möchte,
	      benutze <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">getaddrinfo</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">3</manvolnum></citerefentry> und versuche alle
	      zurückgegebenen Ziele, wie <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">telnet</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">1</manvolnum></citerefentry> es
	      macht.</para>
	  </listitem>

	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Einige IPv6-Stacks sind mit fehlerhafter
	      <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">getaddrinfo</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">3</manvolnum></citerefentry> verschickt worden. Man verschickt
	      als letzte Möglichkeit eine minimal arbeitende
	      Version der Anwendung.</para>
	  </listitem>
	</itemizedlist>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Wenn man einen AF_INET6-Socket für jeweils eine
	  ausgehende IPv4- und IPv6-Verbingung benutzen möchte,
	  dann muss man <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">getipnodebyname</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">3</manvolnum></citerefentry> benutzen. Wenn man
	  seine existierende Anwendung mit wenig Aufwand
	  IPv6-fähig machen möchte, dann sollte dieser
	  Versuch gewählt werden. Aber beachte bitte, dass dies
	  eine temporäre Lösung ist, weil
	  <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">getipnodebyname</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">3</manvolnum></citerefentry> selber noch zu empfehlen ist, da es
	  noch keine Adressbereiche verarbeitet. Für eine
	  IPv6-NAmensauflösung ist <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">getaddrinfo</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">3</manvolnum></citerefentry> das
	  bevorzugte API. Deshalb sollte man seine Anwendung so
	  umschreiben, dass <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">getaddrinfo</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">3</manvolnum></citerefentry> benutzt wird, wann man
	  Zeit dazu hat.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Wenn man Anwendungen schreibt, die ausgehende
	  Verbindungen herstellen, wird die Geschichte viel einfacher,
	  wenn man AF_INET und AF_INET6 als total getrennte
	  Adressfamilien behandelt. {set,get}sockopt funktioniert
	  viel einfacher, DNS-Angelegenheiten werden einfacher
	  gemacht. Wir empfehlen sich nicht auf IPv4-Mapped-Adressen
	  zu verlassen.</para>

	<sect4 xmlns:xlink="http://www.w3.org/1999/xlink">
	  <title xmlns:xlink="http://www.w3.org/1999/xlink">Einheitlicher TCP-und INPCB-Kode</title>

	  <para xmlns:xlink="http://www.w3.org/1999/xlink">FreeBSD 4.x benutzt shared TCP-Kode zwischen IPv4
	    und IPv6 (von sys/netinet/tcp*) und separaten udp4/6-Kode.
	    Es benutzt eine vereinheitlichte inpcb-Struktur.</para>

	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Die Plattform kann für eine Unterstützung
	    von IPv4-mapped-Adressen konfiguriert werden. Die
	    Kernel-Konfiguration läßt sich wie folgt
	    zusammenfassen:</para>

	  <itemizedlist xmlns:xlink="http://www.w3.org/1999/xlink">
	    <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	      <para xmlns:xlink="http://www.w3.org/1999/xlink">By default, AF_INET6 socket will grab IPv4
		connections in certain condition, and can initiate
		connection to IPv4 destination embedded in IPv4 mapped
		IPv6 address.</para>
	    </listitem>

	    <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	      <para xmlns:xlink="http://www.w3.org/1999/xlink">Man kann es wie unten beschrieben
		abschalten.</para>

	      <para xmlns:xlink="http://www.w3.org/1999/xlink"><command xmlns:xlink="http://www.w3.org/1999/xlink">sysctl
		net.inet6.ip6.mapped_addr=0</command></para>
	    </listitem>
	  </itemizedlist>

	  <sect5 xmlns:xlink="http://www.w3.org/1999/xlink">
	    <title xmlns:xlink="http://www.w3.org/1999/xlink">Hörende Seite</title>

	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Jeder Socket kann für eine Unterstützung
	      eines speziellen AF_INET6 wildcard bind
	      (Standardmäßig eingeschaltet) konfiguriert
	      werden. Man kann es auf Socket-Basis mit
	      <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">setsockopt</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">2</manvolnum></citerefentry> wie unten beschrieben
	      abschalten.</para>

	    <screen xmlns:xlink="http://www.w3.org/1999/xlink">	int on;

	setsockopt(s, IPPROTO_IPV6, IPV6_BINDV6ONLY,
		   (char *)&amp;on, sizeof (on)) &lt; 0));</screen>

	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Wildcard-AF_INET6-Socket schnappt sich die
	      IPv4-Verbindung, wenn, und nur wenn folgende Bedingungen
	      erfüllt sind::</para>

	    <itemizedlist xmlns:xlink="http://www.w3.org/1999/xlink">
	      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
		<para xmlns:xlink="http://www.w3.org/1999/xlink">Es gibt keinen AF_INET-Socket, der zu einer
		  IPv4-Verbindung passt</para>
	      </listitem>

	      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
		<para xmlns:xlink="http://www.w3.org/1999/xlink">Der AF_INET6-Socket ist so konfiguriert, dass er
		  IPv4-Datenverkehr akzeptiert, z.B. gibt
		  getsockopt(IPV6_BINDV6ONLY) 0 zurück.</para>
	      </listitem>
	    </itemizedlist>

	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Es gibt kein Problem mit der
	      Öffnen/Schließen-Reihenfolge.</para>
	  </sect5>

	  <sect5 xmlns:xlink="http://www.w3.org/1999/xlink">
	    <title xmlns:xlink="http://www.w3.org/1999/xlink">initiating side</title>

	    <para xmlns:xlink="http://www.w3.org/1999/xlink">FreeBSD 4.x unterstützt ausgehende
	      Verbindungen zu IPv4 mapped Adressen (::ffff:10.1.1.1),
	      falls der Knoten so konfiguriert ist, dass er IPv4
	      mapped Adressen unterstützt.</para>
	  </sect5>
	</sect4>
      </sect3>

      <sect3 xmlns:xlink="http://www.w3.org/1999/xlink">
	<title xmlns:xlink="http://www.w3.org/1999/xlink">sockaddr_storage</title>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Als RFC2553 kurz vor der Vollendung stand, gab es eine
	  Diskussion, wie struct sockaddr_storage Mitglieder benannt
	  werden sollten. Ein Vorschlag war "__" den Mitgliedern (wie
	  "__ss_len") voranzustellen und es sollten sie nicht
	  verändert werden. Der andere Vorschlag war, nichts
	  voranzustellen (wie "ss_len") also mußten wir solche
	  Mitglieder direkt verändern. Es gab keinen klaren
	  Konsens.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Als Ergebnis definiert RFC2553 die Struktur
	  sockaddr_storage wie folgt:</para>

	<screen xmlns:xlink="http://www.w3.org/1999/xlink">	struct sockaddr_storage {
		u_char	__ss_len;	/* address length */
		u_char	__ss_family;	/* address family */
		/* and bunch of padding */
	};</screen>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Im Gegensatz dazu definiert der XNET-Entwurf die
	  Struktur wie folgt:</para>

	<screen xmlns:xlink="http://www.w3.org/1999/xlink">	struct sockaddr_storage {
		u_char	ss_len;		/* address length */
		u_char	ss_family;	/* address family */
		/* and bunch of padding */
	};</screen>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Im Dezember 1999 kam man überein, dass RFC2553bis
	  letztere Definition (XNET) aufnehmen sollte.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Die aktuelle Implementierung ist konform zur
	  XNET-Definition basierend auf der RFC2553bis
	  Diskussion.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Wenn man mehrere IPv6-Implementierungen betrachtet, wird
	  man beide Definitionen sehen. Für Userland-Programmierer
	  ist der folgende Weg der meist portable um damit
	  umzugehen:</para>

	<orderedlist xmlns:xlink="http://www.w3.org/1999/xlink">
	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Man versichert sich, dass ss_family und/oder
	      ss_len für die Plattform verfügbar sind, indem
	      man GNU autoconf verwendet,</para>
	  </listitem>

	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Man benutzet -Dss_family=__ss_family um alle
	      Vorkommen (einschließlich der Header-Files) zu
	      __ss_family zu vereinheitlichen, oder</para>
	  </listitem>

	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Man benutzt niemals __ss_family. Man führe
	      einen Typecast nach sockaddr * durch und verwendet
	      sa_family wie folgt:</para>

	    <screen xmlns:xlink="http://www.w3.org/1999/xlink">	struct sockaddr_storage ss;
	family = ((struct sockaddr *)&amp;ss)-&gt;sa_family</screen>
	  </listitem>
	</orderedlist>
      </sect3>
    </sect2>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Netzwerktreiber</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Die beiden folgenden Dinge müssen zwingend von
	Standardtreibern unterstützt werden:</para>

      <orderedlist xmlns:xlink="http://www.w3.org/1999/xlink">
	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Mbuf-Clustering-Erfordernis. In diesem stabilen
	    Release haben wir für alle Betriebssystem MINCLSIZE
	    in MHLEN+1 geändert, damit sich alle Treiber wie
	    erwartet verhalten.</para>
	</listitem>

	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Multicast. Falls <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">ifmcstat</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">8</manvolnum></citerefentry> keine
	    Multicast-Gruppe für die Schnittstelle liefert, dann muss
	    diese Schnittstelle überarbeitet werden.</para>
	</listitem>
      </orderedlist>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Falls keiner der Treiber die Erfordernisse erfüllt,
	dann können die Treiber nicht für
	IPv6/IPSec-Kommunikation verwendet werden. Falls man ein
	Problem beim Einsatz von IPv6/IPSec mit seiner Karte hat, dann
	melde es bitte bei <link xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://lists.FreeBSD.org/mailman/listinfo/freebsd-bugs">FreeBSD problem reports</link>.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">(Beachte: In der Vergangenheit haben wir gefordert, dass
	alle PCMCIA-Treiber einen Aufruf nach in6_ifattach() haben.
	Inzwischen haben wir keine solche Forderung mehr)</para>
    </sect2>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Translator</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Wir kategorisieren einen IPv4/IPv6-Translator in 4
	Typen:</para>

      <itemizedlist xmlns:xlink="http://www.w3.org/1999/xlink">
	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink"><emphasis xmlns:xlink="http://www.w3.org/1999/xlink">Translator A</emphasis> --- Er wird im
	    frühen Stadium des Übergangs benutzt um es zu
	    ermöglichen, dass eine Verbindung von einem IPv6-Host
	    auf einer IPv6-Insel zu einem IPv4-Host im IPv4-Ozean
	    hergestellt wird.</para>
	</listitem>

	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink"><emphasis xmlns:xlink="http://www.w3.org/1999/xlink">Translator B</emphasis> --- Er wird im
	    frühen Stadium des Übergangs benutzt um es zu
	    ermöglichen, dass eine Verbindung von einem IPv4-Host
	    im IPv4-Ozean zu einem IPv6-Host auf einer IPv6-Insel
	    hergestellt wird.</para>
	</listitem>

	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink"><emphasis xmlns:xlink="http://www.w3.org/1999/xlink">Translator C</emphasis> --- Er wird im
	    frühen Stadium des Übergangs benutzt um es zu
	    ermöglichen, dass eine Verbindung von einem IPv4-Host
	    auf einer IPv4-Insel zu einem IPv6-Host im IPv6-Ozean
	    hergestellt wird.</para>
	</listitem>

	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink"><emphasis xmlns:xlink="http://www.w3.org/1999/xlink">Translator D</emphasis> --- Er wird im
	    frühen Stadium des Übergangs benutzt um es zu
	    ermöglichen, dass eine Verbindung von einem IPv6-Host
	    im IPv6-Ozean zu einem IPv4-Host auf einer IPv4-Insel
	    hergestellt wird.</para>
	</listitem>
      </itemizedlist>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Ein TCP-Relay-Translator der Kategorie A wird
	unterstützt. Er wird "FAITH" genannt. Wir stellen
	ebenso einen IP-Header-Translator der Kataegorie A zur
	Verfügung (Letzterer ist noch nicht in FreeBSD 4.x
	übernommen).</para>

      <sect3 xmlns:xlink="http://www.w3.org/1999/xlink">
	<title xmlns:xlink="http://www.w3.org/1999/xlink">FAITH TCP-Relay-Translator</title>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Das FAITH-System benutzt mit Hilfe des Kernels den
	  <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">faithd</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">8</manvolnum></citerefentry> genannten TCP-Relay-Daemon. FAITH wird einen
	  IPv6-Adress-Präfix reservieren und eine
	  TCP-Verbindungen an diesen Präfix zum IPv4-Ziel
	  weiterleiten.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Wenn beispielsweise der IPv6-Präfix
	  2001:0DB8:0200:ffff:: ist und das IPv6-Ziel für
	  TCP-Verbindungen 2001:0DB8:0200:ffff::163.221.202.12 ist,
	  dann wird die Verbindung an das IPv4-Ziel 163.221.202.12
	  weitergeleitet.</para>

	<screen xmlns:xlink="http://www.w3.org/1999/xlink">	IPv4-Ziel-Knoten (163.221.202.12)
	  ^
	  | IPv4 tcp toward 163.221.202.12
	FAITH-relay dual stack node
	  ^
	  | IPv6 TCP toward 2001:0DB8:0200:ffff::163.221.202.12
	source IPv6 node</screen>

	<para xmlns:xlink="http://www.w3.org/1999/xlink"><citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">faithd</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">8</manvolnum></citerefentry> muss auf FAITH-relay dual stack node
	  aufgerufen werden.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Für weitere Details siehe
	  <filename xmlns:xlink="http://www.w3.org/1999/xlink">src/usr.sbin/faithd/README</filename></para>
      </sect3>
    </sect2>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="ipsec-implementation">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">IPsec</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">IPsec besteht hauptsächlich aus drei
	Komponenten.</para>

      <orderedlist xmlns:xlink="http://www.w3.org/1999/xlink">
	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Policy Management</para>
	</listitem>

	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Key Management</para>
	</listitem>

	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">AH und ESP Behandlung</para>
	</listitem>
      </orderedlist>

      <sect3 xmlns:xlink="http://www.w3.org/1999/xlink">
	<title xmlns:xlink="http://www.w3.org/1999/xlink">Regel Management</title>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Im Kernel ist experimenteller Kode für
	  Regel-Management implementiert. Es gibt zwei Wege eine
	  Sicherheitsregel zu handhaben. Einer ist eine Regel
	  für jeden Socket mithilfe von <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">setsockopt</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">2</manvolnum></citerefentry> zu
	  konfigurieren. Für diesen Fall ist die Konfiguration
	  der Regel in <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">ipsec_set_policy</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">3</manvolnum></citerefentry> beschrieben. Der
	  andere Weg ist eine auf einem Kernel-Packet-Filter
	  basierende Regel mithilfe der PF_KEY-Schnittstelle mittels
	  <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">setkey</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">8</manvolnum></citerefentry> zu konfigurieren.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Der Regeleintrag mit seinen Indices wird nicht
	  sortiert, so dass es sehr wichtig ist, wann ein Eintrag
	  hinzugefügt wird.</para>
      </sect3>

      <sect3 xmlns:xlink="http://www.w3.org/1999/xlink">
	<title xmlns:xlink="http://www.w3.org/1999/xlink">Key Management</title>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Der in dieser Bibliothek (sys/netkey) implementierte
	  Kode für das key management ist eine Eigenentwicklung
	  der PFKEYv2-Implementierung.
	  Er ist konform zu RFC2367.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Die Eigenentwicklung des IKE-Daemons "racoon" ist in
	  der Bibliothek (kame/kame/racoon) implementiert.
	  Grundsätzlich muss man racoon als Dämonprozess
	  laufen lassen, dann setzt man eine Regel auf, die
	  Schlüssel erwartet (ähnlich wie <command xmlns:xlink="http://www.w3.org/1999/xlink">ping -P
	  'out ipsec esp/transport//use'</command>). Der Kernel wird
	  den racoon-Dämon wegen des notwendigen Austauschs der
	  Schlüssel kontaktieren.</para>
      </sect3>

      <sect3 xmlns:xlink="http://www.w3.org/1999/xlink">
	<title xmlns:xlink="http://www.w3.org/1999/xlink">AH- und ESP-Handhabung</title>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Das IPsec-Modul ist als "hook" in die
	  Standard-IPv4/IPv6-Verarbeitung implementiert. Sobald ein
	  Paket gesendet wird, prüft ip{,6_output(), ob eine
	  ESP/AH-Verarbeitung notwendig ist. Es findet eine
	  Überprüfung statt, ob eine passende SPD (Security
	  Policy Database) gefunden wurde. Wenn ESP/AH benötigt
	  wird, dann wird {esp,ah}{4,6}_output() aufgerufen und mbuf
	  wird folglich aktualisiert. Wenn ein Paket empfangen wird,
	  dann wird {esp,ah}4_input() basierend auf der Protokollnummer
	  aufgerufen, z.B. (*inetsw[proto])(). {esp,ah}4_input()
	  entschlüsselt/prüft die Authentizität des
	  Pakets und entfernt den daisy-chained-Header und das Padding
	  des ESP/AH. Es ist sicherer den ESP/AH-Header beim Empfang
	  zu entfernen, weil man das empfangene Paket niemals so wie
	  es ist benutzt.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Mit der Verwendung von ESP/AH wird die effektive
	  TCP4/6-Datensegmentgröße durch weitere von ESP/AH
	  eingefügte Daisy-chained-Headers beeinflußt.
	  Unser Kode berücksichtigt dies.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Grundlegende Crypto-Funktionen sind im Verzeichnis
	  "sys/crypto" zu finden. ESP/AH-Umformungen sind zusammen mit
	  den Wrapper-Funktionen in {esp,ah}_core.c gelistet. Wenn
	  man einige Algorithmen hinzufügen möchte, dann
	  fügt man in {esp,ah}_core.c eine Wrapper-Funktion hinzu
	  und trägt seinen Crypto-Algorithmus in sys/crypto
	  ein.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Der Tunnel-Modus wird in diesem Release teilweise mit
	  den folgenden Restriktionen unterstützt:</para>

	<itemizedlist xmlns:xlink="http://www.w3.org/1999/xlink">
	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Der IPsec-Tunnel ist nicht mit der generischen
	      Tunnelschnittstelle kombiniert. Man muss sehr
	      vorsichtig sein, weil man sonst eine Endlosschleife
	      zwischen ip_output() und tunnelifp-&gt;if_output()
	      aufbaut. Die Meinungen gehen auseinander, ob es besser
	      ist dies zu vereinheitlichen, oder nicht.</para>
	  </listitem>

	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Die Betrachtung von MTU und des "Don't
	      Fragment"-Bits (IPv4) müssen mehr geprüft
	      werden, aber grundsätzlichen arbeiten sie
	      gut.</para>
	  </listitem>

	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Das Authentifizierungsmodel für einen
	      AH-Tunnel muss überarbeitet werden. Man muss
	      eventuell die "policy management engine"
	      überarbeiten.</para>
	  </listitem>
	</itemizedlist>
      </sect3>

      <sect3 xmlns:xlink="http://www.w3.org/1999/xlink">
	<title xmlns:xlink="http://www.w3.org/1999/xlink">Konformität zu RFCs und IDs</title>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Der IPsec-Kode im Kernel ist konform (oder versucht
	  konform zu sein) zu den folgenden Standards:</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Die "alte IPsec"-Spezifikation, die in
	  <filename xmlns:xlink="http://www.w3.org/1999/xlink">rfc182[5-9].txt</filename> dokumentiert ist</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Die "neue IPsec"-Spezifikation, die
	  <filename xmlns:xlink="http://www.w3.org/1999/xlink">rfc240[1-6].txt</filename>,
	  <filename xmlns:xlink="http://www.w3.org/1999/xlink">rfc241[01].txt</filename>,
	  <filename xmlns:xlink="http://www.w3.org/1999/xlink">rfc2451.txt</filename> und
	  <filename xmlns:xlink="http://www.w3.org/1999/xlink">draft-mcdonald-simple-ipsec-api-01.txt</filename>
	  (Der Entwurf ist erloschen, aber man kann ihn sich von
	  <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ftp://ftp.kame.net/pub/internet-drafts/">
	  ftp://ftp.kame.net/pub/internet -drafts/</link> holen)
	  dokumentiert ist (Beachte: Die IKE-Spezifikationen
	  <filename xmlns:xlink="http://www.w3.org/1999/xlink">rfc241[7-9].txt</filename> sind im Userland als
	  "racoon"-IKE-Daemon implementiert).</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Aktuell werden folgende Algorithmen
	  unterstützt:</para>

	<itemizedlist xmlns:xlink="http://www.w3.org/1999/xlink">
	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">altes IPsec-AH</para>

	    <itemizedlist xmlns:xlink="http://www.w3.org/1999/xlink">
	      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
		<para xmlns:xlink="http://www.w3.org/1999/xlink">null crypto Prüfsumme (Kein Dokument, nur
		  für Debug-Zwecke)</para>
	      </listitem>

	      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
		<para xmlns:xlink="http://www.w3.org/1999/xlink">keyed MD5 mit 128bit crypto Prüfsumme
		  (<filename xmlns:xlink="http://www.w3.org/1999/xlink">rfc1828.txt</filename>)</para>
	      </listitem>

	      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
		<para xmlns:xlink="http://www.w3.org/1999/xlink">keyed SHA1 mit 128bit crypto Prüfsumme
		  (kein Document)</para>
	      </listitem>

	      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
		<para xmlns:xlink="http://www.w3.org/1999/xlink">HMAC MD5 mit 128bit crypto Prüfsumme
		  (<filename xmlns:xlink="http://www.w3.org/1999/xlink">rfc2085.txt</filename>)</para>
	      </listitem>

	      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
		<para xmlns:xlink="http://www.w3.org/1999/xlink">HMAC SHA1 mit 128bit crypto Prüfsumme (kein
		  Dokument)</para>
	      </listitem>
	    </itemizedlist>
	  </listitem>

	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
            <para xmlns:xlink="http://www.w3.org/1999/xlink">altes IPsec-ESP</para>

	    <itemizedlist xmlns:xlink="http://www.w3.org/1999/xlink">
	      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
		<para xmlns:xlink="http://www.w3.org/1999/xlink">null encryption (kein Dokument, ähnlich zu
		  <filename xmlns:xlink="http://www.w3.org/1999/xlink">rfc2410.txt</filename>)</para>
	      </listitem>

	      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
		<para xmlns:xlink="http://www.w3.org/1999/xlink">DES-CBC-Modus
		  (<filename xmlns:xlink="http://www.w3.org/1999/xlink">rfc1829.txt</filename>)</para>
	      </listitem>
	    </itemizedlist>
	  </listitem>

	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">neues IPsec-AH</para>

	    <itemizedlist xmlns:xlink="http://www.w3.org/1999/xlink">
	      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
		<para xmlns:xlink="http://www.w3.org/1999/xlink">null crypto Prüfsumme (kein Dokument, nur
		  für Debug-Zwecke)</para>
	      </listitem>

	      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
		<para xmlns:xlink="http://www.w3.org/1999/xlink">keyed MD5 mit 96bit crypto Prüfsumme (kein
		  Dokument)</para>
	      </listitem>

	      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
		<para xmlns:xlink="http://www.w3.org/1999/xlink">keyed SHA1 mit 96bit crypto Prüfsumme (kein
		  Dokument)</para>
	      </listitem>

	      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
		<para xmlns:xlink="http://www.w3.org/1999/xlink">HMAC MD5 mit 96bit crypto Prüfsumme
		  (<filename xmlns:xlink="http://www.w3.org/1999/xlink">rfc2403.txt</filename>)</para>
	      </listitem>

	      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
		<para xmlns:xlink="http://www.w3.org/1999/xlink">HMAC SHA1 mit 96bit crypto Prüfsumme
		  (<filename xmlns:xlink="http://www.w3.org/1999/xlink">rfc2404.txt</filename>)</para>
	      </listitem>
	    </itemizedlist>
	  </listitem>

	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
            <para xmlns:xlink="http://www.w3.org/1999/xlink">neues IPsec-ESP</para>

	    <itemizedlist xmlns:xlink="http://www.w3.org/1999/xlink">
	      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
		<para xmlns:xlink="http://www.w3.org/1999/xlink">null encryption
		  (<filename xmlns:xlink="http://www.w3.org/1999/xlink">rfc2410.txt</filename>)</para>
	      </listitem>

	      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
		<para xmlns:xlink="http://www.w3.org/1999/xlink">DES-CBC mit abgeleiteter IV
		  (<filename xmlns:xlink="http://www.w3.org/1999/xlink">draft-ietf-ipsec-ciph-des-derived-01.txt</filename>,
		  Entwurf abgelaufen)</para>
	      </listitem>

	      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
		<para xmlns:xlink="http://www.w3.org/1999/xlink">DES-CBC mit expliziter IV
		  (<filename xmlns:xlink="http://www.w3.org/1999/xlink">rfc2405.txt</filename>)</para>
	      </listitem>

	      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
		<para xmlns:xlink="http://www.w3.org/1999/xlink">3DES-CBC mit expliziter IV
		  (<filename xmlns:xlink="http://www.w3.org/1999/xlink">rfc2451.txt</filename>)</para>
	      </listitem>

	      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
		<para xmlns:xlink="http://www.w3.org/1999/xlink">BLOWFISH CBC
		  (<filename xmlns:xlink="http://www.w3.org/1999/xlink">rfc2451.txt</filename>)</para>
	      </listitem>

	      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
		<para xmlns:xlink="http://www.w3.org/1999/xlink">CAST128 CBC
		  (<filename xmlns:xlink="http://www.w3.org/1999/xlink">rfc2451.txt</filename>)</para>
	      </listitem>

	      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
		<para xmlns:xlink="http://www.w3.org/1999/xlink">RC5 CBC
		  (<filename xmlns:xlink="http://www.w3.org/1999/xlink">rfc2451.txt</filename>)</para>
	      </listitem>

	      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
		<para xmlns:xlink="http://www.w3.org/1999/xlink">Jeder Algorithmus kann kombiniert werden
		  mit:</para>

	 	<itemizedlist xmlns:xlink="http://www.w3.org/1999/xlink">
		  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
		    <para xmlns:xlink="http://www.w3.org/1999/xlink">ESP-Beglaubigung mit HMAC-MD5(96bit)</para>
		  </listitem>

		  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
		    <para xmlns:xlink="http://www.w3.org/1999/xlink">ESP-Beglaubigung mit HMAC-SHA1(96bit)</para>
		  </listitem>
	        </itemizedlist>
	      </listitem>
	    </itemizedlist>
	  </listitem>
	</itemizedlist>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Die folgenden Algorithmen werden NICHT
	  unterstützt:</para>

	<itemizedlist xmlns:xlink="http://www.w3.org/1999/xlink">
	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">altes IPsec-AH</para>

	    <itemizedlist xmlns:xlink="http://www.w3.org/1999/xlink">
	      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
		<para xmlns:xlink="http://www.w3.org/1999/xlink">HMAC MD5 mit 128bit crypto Prüfsumme +
		  64bit replay prevention
		  (<filename xmlns:xlink="http://www.w3.org/1999/xlink">rfc2085.txt</filename>)</para>
	      </listitem>

	      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
		<para xmlns:xlink="http://www.w3.org/1999/xlink">keyed SHA1 mit 160bit crypto Prüfsumme +
		  32bit padding
		  (<filename xmlns:xlink="http://www.w3.org/1999/xlink">rfc1852.txt</filename>)</para>
	      </listitem>
	    </itemizedlist>
	  </listitem>
	</itemizedlist>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">IPsec (im Kernel) und IKE (im Userland als "racoon")
	  wurden bei unterschiedlichen Interoperabilitätstests
	  geprüft und es ist bekannt, dass es mit vielen anderen
	  Implementierungen gut zusammenarbeitet. Außerdem
	  wurde die IPsec-Implementierung sowie die breite Abdeckung
	  mit IPsec-Crypto-Algorithmen, die in den RFCs dokumentiert
	  sind, geprüft (es werden nur Algorithmen ohne
	  intellektuelle Besitzansprüche behandelt).</para>
      </sect3>

      <sect3 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="ipsec-ecn">
	<title xmlns:xlink="http://www.w3.org/1999/xlink">ECN-Betrachtung von IPsec-Tunneln</title>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">ECN-freundliche IPsec-Tunnel werden unterstützt wie
	  es in <filename xmlns:xlink="http://www.w3.org/1999/xlink">draft-ipsec-ecn-00.txt</filename>
	  beschrieben ist.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Normale IPsec-Tunnel sind in RFC2401 beschrieben.
	  Für eine Kapselung wird das IPv4-TOS-Feld (oder das
	  IPv6-Traffic-Class-Feld) vom inneren in den
	  äußeren IP-Header kopiert. Für eine
	  Entkapselung wird der ässere IP-Header einfach
	  verworfen. Die Entkapselungsregel ist nicht mit ECN
	  kompatibel, sobald das ECN-Bit im äußeren
	  IP-TOS/Traffic-Class-Feld verloren geht.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Um einen IPsec-Tunnel ECN-freundlich zu machen, sollte
	  man die Kapselungs- und Entkapselungsprozeduren
	  modifizieren. Dies ist in <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://www.aciri.org/floyd/papers/draft-ipsec-ecn-00.txt">
	  http://www.aciri.org/floyd/papers/draft-ipsec-ecn-00.txt</link>,
	  Kapitel 3, beschrieben.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Die IPsec-Tunnel-Implementierung kann drei
	  Zustände annehmen, indem man net.inet.ipsec.ecn (oder
	  net.inet6.ipsec6.ecn) auf diese Werte setzt:</para>

	<itemizedlist xmlns:xlink="http://www.w3.org/1999/xlink">
	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">RFC2401: Keine Betrachtung von ECN (Sysctl-Wert
	      -1)</para>
	  </listitem>

	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">ECN verboten (Sysctl-Wert 0)</para>
	  </listitem>

	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">ECN erlaubt (Sysctl-Wert 1)</para>
	  </listitem>
	</itemizedlist>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Beachte, dass dieses Verhalten per-node konfigurierbar
	  ist und nicht per-SA (draft-ipsec-ecn-00 möchte per-SA
	  Konfiguration).</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Das Verhalten ist wie folgt zusammengefaßt (man
	  beachte auch den Quelltext für weitere
	  Details):</para>

	<screen xmlns:xlink="http://www.w3.org/1999/xlink">                encapsulate                     decapsulate
                ---                             ---
RFC2401         kopiere alle TOS-Bits               lösche TOS-Bits im äußeren
                von innen nach außen.            (benutze innere TOS-Bits so wie sie sind)

ECN verboten   kopiere TOS-Bits außer für ECN    lösche TOS-Bits im äußeren
                (maskiert mit 0xfc) von innen   (benutze innere TOS-Bits so wie sie sind)
                nach außen.  Setze ECN-Bits auf 0.

ECN erlaubt     kopiere TOS-Bits außer für ECN    benutze innere TOS-Bits mit einigen Änderungen.
                CE (maskiert mit 0xfe) von      Wenn das äußere ECN-CE-Bit 1 ist,
                innen nach außen.                 setze das ECN-CE-Bit im
                Setze ECN-CE-Bit auf 0.            Inneren.</screen>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Allgemeine Strategie zur Konfiguration:</para>

	<itemizedlist xmlns:xlink="http://www.w3.org/1999/xlink">
	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Wenn beide IPsec-Tunnel-Endpunkte ein
	      ECN-freundliches Verhalten beherrschen, dann sollte man
	      besser beide Endpunkte auf <quote xmlns:xlink="http://www.w3.org/1999/xlink">ECN allowed</quote>
	      (Sysctl-Wert 1) setzen.</para>
	  </listitem>

	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Wenn das andere Ende das TOS-Bit sehr strikt
	      handhabt, dann benutzt man "RFC2401" (Sysctl-Wert
	      -1).</para>
	  </listitem>

	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">in den anderen Fällen benutzt man "ECN
	      verboten" (Sysctl-Wert 0).</para>
	  </listitem>
	</itemizedlist>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Der Standard ist "ECN verboten" (Sysctl-Wert 0).</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Für weitere Informationen siehe auch:</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink"><link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://www.aciri.org/floyd/papers/draft-ipsec-ecn-00.txt">
	  http://www.aciri.org/floyd/papers/draft-ipsec-ecn-00.txt</link>,
	  RFC2481 (Explicit Congestion Notification),
	  src/sys/netinet6/{ah,esp}_input.c</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">(Dank gebührt Kenjiro Cho
	  <email xmlns:xlink="http://www.w3.org/1999/xlink">kjc@csl.sony.co.jp</email> für seine detailliert
	  Analyse)</para>
      </sect3>

      <sect3 xmlns:xlink="http://www.w3.org/1999/xlink">
	<title xmlns:xlink="http://www.w3.org/1999/xlink">Interoperabilität</title>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Hier sind einige Plattformen angegeben, die in der
	  Vergangenheit die IPsec/IKE-Interoperabilität mit dem
	  KAME-Kode getestet haben. Beachte, dass beide Enden
	  vielleicht ihre Implementierung verändert haben,
	  deshalb sollte man folgende Liste nur für
	  Referenzzwecke benutzen.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Altiga, Ashley-laurent (vpcom.com), Data Fellows
	  (F-Secure), Ericsson ACC, FreeS/WAN, HITACHI, IBM <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">AIX</trademark>,
	  IIJ, Intel, <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">Microsoft</trademark> <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">Windows NT</trademark>, NIST (linux IPsec +
	  plutoplus), Netscreen, OpenBSD, RedCreek, Routerware, SSH,
	  Secure Computing, Soliton, Toshiba, VPNet, Yamaha
	  RT100i</para>
      </sect3>
    </sect2>
  </sect1>
</chapter>

  </part>

  <part xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="kernel">
    <title xmlns:xlink="http://www.w3.org/1999/xlink">Kernel</title>

    
<!--
     The FreeBSD Documentation Project
     The FreeBSD German Documentation Project

     $FreeBSD$
     $FreeBSDde: de-docproj/books/developers-handbook/kernelbuild/chapter.xml,v 1.5 2009/02/21 19:22:07 jkois Exp $
     basiert auf: 1.3
-->
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="kernelbuild">
  <info><title xmlns:xlink="http://www.w3.org/1999/xlink">Einen FreeBSD-Kernel bauen und installieren</title>
    <authorgroup xmlns:xlink="http://www.w3.org/1999/xlink">
      <author xmlns:xlink="http://www.w3.org/1999/xlink"><personname xmlns:xlink="http://www.w3.org/1999/xlink"><firstname xmlns:xlink="http://www.w3.org/1999/xlink">Johann</firstname><surname xmlns:xlink="http://www.w3.org/1999/xlink">Kois</surname></personname><contrib xmlns:xlink="http://www.w3.org/1999/xlink">Übersetzt von </contrib></author>
    </authorgroup>
  </info>

  

  <para xmlns:xlink="http://www.w3.org/1999/xlink">Ein Kernelentwickler muss wissen, wie der Bau eines angepassten
    Kernels funktioniert, da das Debuggen des FreeBSD-Kernels nur durch den
    Bau eines neuen Kernels möglich ist. Es gibt zwei Wege, einen
    angepassten Kernel zu bauen:</para>

  <itemizedlist xmlns:xlink="http://www.w3.org/1999/xlink">
    <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
      <para xmlns:xlink="http://www.w3.org/1999/xlink">Den <quote xmlns:xlink="http://www.w3.org/1999/xlink">traditionellen</quote> Weg</para>
    </listitem>

    <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
      <para xmlns:xlink="http://www.w3.org/1999/xlink">Den <quote xmlns:xlink="http://www.w3.org/1999/xlink">neuen</quote> Weg</para>
    </listitem>
  </itemizedlist>

  <note xmlns:xlink="http://www.w3.org/1999/xlink">
    <para xmlns:xlink="http://www.w3.org/1999/xlink">Die folgenden Ausführungen setzen voraus, dass Sie
      den Abschnitt <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="../handbook/kernelconfig-building.html">
      Erstellen und Installation eines angepassten Kernels</link> des
      FreeBSD-Handbuchs gelesen haben und daher wissen, wie man einen
      FreeBSD-Kernel baut.</para>
  </note>

  <sect1 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="kernelbuild-traditional">
    <title xmlns:xlink="http://www.w3.org/1999/xlink">Einen Kernel auf die <quote xmlns:xlink="http://www.w3.org/1999/xlink">traditionelle</quote> Art und
      Weise bauen</title>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Bis FreeBSD 4.X wurde dieser Weg zum Bau eines angepassten
      Kernels empfohlen. Sie können Ihren Kernel nach wie vor
      auf diese Art und Weise bauen (anstatt das Target
      <quote xmlns:xlink="http://www.w3.org/1999/xlink">buildkernel</quote> der Makefiles im Verzeichnis
      <filename xmlns:xlink="http://www.w3.org/1999/xlink">/usr/src/</filename> zu verwenden).
      Dies kann beispielsweise sinnvoll sein, wenn Sie am
      Kernel-Quellcode arbeiten. Haben Sie nur ein oder zwei Optionen
      der Kernelkonfigurationsdatei geändert, ist dieser Weg in
      der Regel schneller als der <quote xmlns:xlink="http://www.w3.org/1999/xlink">neue</quote> Weg.
      Andererseits kann es aber auch zu unerwarteten Fehlern beim
      Bau des Kernels kommen, wenn Sie Ihren Kernel unter aktuellen
      FreeBSD-Versionen auf diese Art und Weise bauen.</para>

    <procedure xmlns:xlink="http://www.w3.org/1999/xlink">
      <step xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Erzeugen Sie den Kernel-Quellcode mit
	  <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">config</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">8</manvolnum></citerefentry>:</para>

	<screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">#</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">/usr/sbin/config MYKERNEL</userinput></screen>
      </step>

      <step xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Wechseln Sie in das Build-Verzeichnis. <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">config</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">8</manvolnum></citerefentry>
	  gibt den Namen dieses Verzeichnisses aus, wenn die Erzeugung
	  des Kernel-Quellcodes im vorherigen Schritt erfolgreich
	  abgeschlossen wurde.</para>

	<screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">#</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">cd ../compile/MYKERNEL</userinput></screen>
      </step>

      <step xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Kompilieren Sie den neuen Kernel:</para>

	<screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">#</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">make depend</userinput>
<prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">#</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">make</userinput></screen>
      </step>

      <step xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Installieren Sie den neuen Kernel:</para>

	<screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">#</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">make install</userinput></screen>
      </step>
    </procedure>
  </sect1>

  <sect1 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="kernelbuild-new">
    <title xmlns:xlink="http://www.w3.org/1999/xlink">Einen Kernel auf die <quote xmlns:xlink="http://www.w3.org/1999/xlink">neue</quote> Art und Weise
      bauen</title>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Dieser Weg wird für alle aktuellen FreeBSD-Versionen
      empfohlen. Lesen Sie bitte den Abschnitt <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="../handbook/kernelconfig-building.html">Erstellen und
      Installation eines angepassten Kernels</link> des
      FreeBSD-Handbuchs, wenn Sie Ihren Kernel auf diese Art und Weise
      bauen wollen.</para>
  </sect1>
</chapter>

    
<!--
      The FreeBSD Documentation Project
      The FreeBSD German Documentation Project

      $FreeBSD$
      $FreeBSDde: de-docproj/books/developers-handbook/kerneldebug/chapter.xml,v 1.16 2012/03/25 14:33:52 bcr Exp $
      basiert auf: 1.81
-->
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="kerneldebug">
  <info><title xmlns:xlink="http://www.w3.org/1999/xlink">Kernel-Fehlersuche</title>
    <authorgroup xmlns:xlink="http://www.w3.org/1999/xlink">
      <author xmlns:xlink="http://www.w3.org/1999/xlink"><personname xmlns:xlink="http://www.w3.org/1999/xlink"><firstname xmlns:xlink="http://www.w3.org/1999/xlink">Paul</firstname><surname xmlns:xlink="http://www.w3.org/1999/xlink">Richards</surname></personname><contrib xmlns:xlink="http://www.w3.org/1999/xlink">Contributed by </contrib></author>
      <author xmlns:xlink="http://www.w3.org/1999/xlink"><personname xmlns:xlink="http://www.w3.org/1999/xlink"><firstname xmlns:xlink="http://www.w3.org/1999/xlink">Jörg</firstname><surname xmlns:xlink="http://www.w3.org/1999/xlink">Wunsch</surname></personname></author>
      <author xmlns:xlink="http://www.w3.org/1999/xlink"><personname xmlns:xlink="http://www.w3.org/1999/xlink"><firstname xmlns:xlink="http://www.w3.org/1999/xlink">Robert</firstname><surname xmlns:xlink="http://www.w3.org/1999/xlink">Watson</surname></personname></author>
    </authorgroup>
    <authorgroup xmlns:xlink="http://www.w3.org/1999/xlink">
      <author xmlns:xlink="http://www.w3.org/1999/xlink"><personname xmlns:xlink="http://www.w3.org/1999/xlink"><firstname xmlns:xlink="http://www.w3.org/1999/xlink">Fabian</firstname><surname xmlns:xlink="http://www.w3.org/1999/xlink">Ruch</surname></personname><contrib xmlns:xlink="http://www.w3.org/1999/xlink">Übersetzt von </contrib></author>
    </authorgroup>
  </info>

  

  <sect1 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="kerneldebug-obtain">
    <title xmlns:xlink="http://www.w3.org/1999/xlink">Besorgen eines Speicherauszugs nach einem
      Kernel-Absturz (Kernel-Crash-Dump)</title>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Wenn ein Entwicklungs-Kernel (z.B. FreeBSD-CURRENT) wie zum
      Beispiel ein Kernel unter Extrembedingungen (z.B. sehr hohe
      Belastungsraten (Load), eine äußerst hohe Anzahl an
      gleichzeitigen Benutzern, Hunderte <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">jail</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">8</manvolnum></citerefentry>s usw.)
      eingesetzt oder eine neue Funktion oder ein neuer
      Gerätetreiber in FreeBSD-STABLE verwendet wird (z.B.
      <acronym xmlns:xlink="http://www.w3.org/1999/xlink">PAE</acronym>), tritt manchmal eine Kernel-Panic ein.
      In einem solchen Fall zeigt dieses Kapitel, wie dem Absturz
      nützliche Informationen entnommen werden
      können.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Bei Kernel-Panics ist ein Neustart unvermeidlich. Nachdem
      ein System neu gestartet wurde, ist der Inhalt des
      physikalischen Speichers (<acronym xmlns:xlink="http://www.w3.org/1999/xlink">RAM</acronym>), genauso wie
      jedes Bit, das sich vor der Panic auf dem Swap-Gerät
      befand, verloren. Um die Bits im physikalischen Speicher zu
      erhalten, zieht der Kernel Nutzen aus dem Swap-Gerät als
      vorübergehenden Ablageort, wo die Bits, welche sich im RAM
      befinden, auch nach einem Neustart nach einem Absturz
      verfügbar sind. Durch diese Vorgehensweise kann ein
      Kernel-Abbild, wenn FreeBSD nach einem Absturz startet, abgezogen
      und mit der Fehlersuche begonnen werden.</para>

    <note xmlns:xlink="http://www.w3.org/1999/xlink">
      <para xmlns:xlink="http://www.w3.org/1999/xlink">Ein Swap-Gerät, das als Ausgabegerät
	(Dump-Device) konfiguriert wurde, verhält sich immer noch
	wie ein Swap-Gerät. Die Ausgabe auf
	Nicht-Swap-Geräte (wie zum Beispiel Bänder oder
	CDRWs) wird zur Zeit nicht unterstützt. Ein
	<quote xmlns:xlink="http://www.w3.org/1999/xlink">Swap-Gerät</quote> ist gleichbedeutend mit einer
	<quote xmlns:xlink="http://www.w3.org/1999/xlink">Swap-Partition</quote>.</para>
    </note>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Es stehen verschiedene Arten von Speicherabzügen zur
      Verfügung: komplette Speicherabzüge (full memory dumps), welche
      den gesamten Inhalt des physischen Speichers beinhalten, Miniauszüge
      (minidumps), die nur die gerade verwendeten Speicherseiten des Kernels
      enthalten (FreeBSD 6.2 und höhere Versionen) und Textauszüge
      (textdumps), welche geskriptete oder Debugger-Ausgaben enthalten
      (FreeBSD 7.1 und höher).  Miniauszüge sind der Standardtyp
      der Abzüge seit FreeBSD 7.0 und fangen in den meisten Fällen
      alle nötigen Informationen ein, die in einem kompletten
      Kernel-Speicherabzug enthalten sind, da die meisten Probleme nur durch
      den Zustand des Kernels isoliert werden können.</para>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="config-dumpdev">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Konfigurieren des Ausgabegeräts</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Bevor der Kernel den Inhalt seines physikalischen
	Speichers auf einem Ausgabegerät ablegt, muss ein solches
	konfiguriert werden. Ein Ausgabegerät wird durch Benutzen
	des <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">dumpon</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">8</manvolnum></citerefentry>-Befehls festgelegt, um dem Kernel
	mitzuteilen, wohin die Speicherauszüge bei einem
	Kernel-Absturz gesichert werden sollen. Das
	<citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">dumpon</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">8</manvolnum></citerefentry>-Programm muss aufgerufen werden, nachdem die
	Swap-Partition mit <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">swapon</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">8</manvolnum></citerefentry> konfiguriert wurde. Dies
	wird normalerweise durch Setzen der
	<varname xmlns:xlink="http://www.w3.org/1999/xlink">dumpdev</varname>-Variable in <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">rc.conf</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">5</manvolnum></citerefentry> auf den
	Pfad des Swap-Geräts (der empfohlene Weg, um einen
	Kernel-Speicherauszug zu entnehmen) bewerkstelligt, oder über
	<literal xmlns:xlink="http://www.w3.org/1999/xlink">AUTO</literal>, um die erste konfigurierte Swap-Partition
	zu verwenden. In HEAD ist die Standardeinstellung für
        <varname xmlns:xlink="http://www.w3.org/1999/xlink">dumpdev</varname> <filename xmlns:xlink="http://www.w3.org/1999/xlink">AUTO</filename> und
        änderte sich in den RELENG_*-Zweigen (mit Ausnahme von
        RELENG_7, bei dem <literal xmlns:xlink="http://www.w3.org/1999/xlink">AUTO</literal> beibehalten wurde) auf
        <literal xmlns:xlink="http://www.w3.org/1999/xlink">NO</literal>.  In FreeBSD 9.0-RELEASE und späteren
        Versionen fragt <application xmlns:xlink="http://www.w3.org/1999/xlink">bsdinstall</application>, ob
        Speicherauszüge für das Zielsystem während des
        Installationsvorgangs aktiviert werden sollen.</para>

      <tip xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Vergleichen Sie <filename xmlns:xlink="http://www.w3.org/1999/xlink">/etc/fstab</filename> oder
	  <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">swapinfo</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">8</manvolnum></citerefentry> für eine Liste der
	  Swap-Geräte.</para>
      </tip>

      <important xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Stellen Sie sicher, dass das in <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">rc.conf</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">5</manvolnum></citerefentry>
	  festgelegte <varname xmlns:xlink="http://www.w3.org/1999/xlink">dumpdir</varname> vor einem
	  Kernel-Absturz vorhanden ist.</para>

	<screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">#</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">mkdir /var/crash</userinput>
<prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">#</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">chmod 700 /var/crash</userinput></screen>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Denken Sie auch daran, dass der Inhalt von
	  <filename xmlns:xlink="http://www.w3.org/1999/xlink">/var/crash</filename> heikel ist und sehr
	  wahrscheinlich vertrauliche Informationen wie
	  Passwörter enthält.</para>
      </important>
    </sect2>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="extract-dump">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Entnehmen eines Kernel-Speicherauszugs
	(Kernel-Dump)</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Sobald ein Speicherauszug auf ein Ausgabegerät
	geschrieben wurde, muss er entnommen werden, bevor das
	Swap-Gerät eingehängt wird. Um einen Speicherauszug
	aus einem Ausgabegerät zu entnehmen, benutzen Sie das
	<citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">savecore</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">8</manvolnum></citerefentry>-Programm. Falls <varname xmlns:xlink="http://www.w3.org/1999/xlink">dumpdev</varname> in
	<citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">rc.conf</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">5</manvolnum></citerefentry> gesetzt wurde, wird <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">savecore</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">8</manvolnum></citerefentry>
	automatisch beim ersten Start in den Multiuser-Modus nach dem
	Absturz und vor dem Einhängen des Swap-Geräts
	aufgerufen. Der Speicherort des entnommenen Kernels ist im
	<citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">rc.conf</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">5</manvolnum></citerefentry>-Wert <varname xmlns:xlink="http://www.w3.org/1999/xlink">dumpdir</varname>,
	standardmäßig <filename xmlns:xlink="http://www.w3.org/1999/xlink">/var/crash</filename>,
	festgelegt und der Dateiname wird
	<filename xmlns:xlink="http://www.w3.org/1999/xlink">vmcore.0</filename> sein.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">In dem Fall, dass bereits eine Datei mit dem Namen
	<filename xmlns:xlink="http://www.w3.org/1999/xlink">vmcore.0</filename> in
	<filename xmlns:xlink="http://www.w3.org/1999/xlink">/var/crash</filename> (oder auf was auch immer
	<varname xmlns:xlink="http://www.w3.org/1999/xlink">dumpdir</varname> gesetzt ist) vorhanden ist,
	erhöht der Kernel die angehängte Zahl bei jedem
	Absturz um eins und verhindert damit, dass ein vorhandener
	<filename xmlns:xlink="http://www.w3.org/1999/xlink">vmcore</filename> (z.B.
	<filename xmlns:xlink="http://www.w3.org/1999/xlink">vmcore.1</filename>) überschrieben wird.
	Während der Fehlersuche, möchten Sie höchst
	wahrscheinlich den <filename xmlns:xlink="http://www.w3.org/1999/xlink">vmcore</filename> mit der
	höchsten Version in <filename xmlns:xlink="http://www.w3.org/1999/xlink">/var/crash</filename>
	benutzen, wenn Sie den passenden <filename xmlns:xlink="http://www.w3.org/1999/xlink">vmcore</filename>
	suchen.</para>

      <tip xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Falls Sie einen neuen Kernel testen, aber einen anderen
	  starten müssen, um Ihr System wieder in Gang zu
	  bringen, starten Sie es nur in den Singleuser-Modus, indem
	  Sie das <option xmlns:xlink="http://www.w3.org/1999/xlink">-s</option>-Flag an der
	  Boot-Eingabeaufforderung benutzen, und nehmen dann folgende
	  Schritte vor:</para>

	<screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">#</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">fsck -p</userinput>
<prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">#</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">mount -a -t ufs</userinput>       # make sure /var/crash is writable
<prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">#</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">savecore /var/crash /dev/ad0s1b</userinput>
<prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">#</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">exit</userinput>                  # exit to multi-user</screen>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Dies weist <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">savecore</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">8</manvolnum></citerefentry> an, einen
	  Kernel-Speicherauszug aus <filename xmlns:xlink="http://www.w3.org/1999/xlink">/dev/ad0s1b</filename>
	  zu entnehmen und den Inhalt in
	  <filename xmlns:xlink="http://www.w3.org/1999/xlink">/var/crash</filename> abzulegen. Vergessen Sie
	  nicht sicherzustellen, dass das Zielverzeichnis
	  <filename xmlns:xlink="http://www.w3.org/1999/xlink">/var/crash</filename> genug freien Speicherplatz
	  für den Speicherauszug zur Verfügung hat.
	  Vergessen Sie auch nicht, den korrekten Pfad des
	  Swap-Geräts anzugeben, da es sehr wahrscheinlich anders
	  als <filename xmlns:xlink="http://www.w3.org/1999/xlink">/dev/ad0s1b</filename> lautet!</para>
      </tip>
    </sect2>
  </sect1>

  <sect1 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="kerneldebug-gdb">
    <title xmlns:xlink="http://www.w3.org/1999/xlink">Fehlersuche in einem Speicherauszug nach einem
      Kernel-Absturz mit <command xmlns:xlink="http://www.w3.org/1999/xlink">kgdb</command></title>

    <note xmlns:xlink="http://www.w3.org/1999/xlink">
      <para xmlns:xlink="http://www.w3.org/1999/xlink">Dieser Abschnitt deckt <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">kgdb</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">1</manvolnum></citerefentry> ab, wie es in FreeBSD 5.3
	und später zu finden ist. In früheren Versionen muss
	<command xmlns:xlink="http://www.w3.org/1999/xlink">gdb -k</command> benutzt werden, um einen
	Kernspeicherauszug auszulesen.</para>
    </note>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Sobald ein Speicherauszug zur Verfügung steht, ist es
      recht einfach nützliche Informationen für einfache
      Probleme daraus zu bekommen. Bevor Sie sich auf die Interna von
      <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">kgdb</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">1</manvolnum></citerefentry> stürzen, um die Fehler im Kernspeicherauszug
      zu suchen und zu beheben, machen Sie die Debug-Version Ihres
      Kernels (normalerweise <filename xmlns:xlink="http://www.w3.org/1999/xlink">kernel.debug</filename>
      genannt) und den Pfad der Quelldateien, die zum Bau Ihres
      Kernels verwendet wurden (normalerweise
      <filename xmlns:xlink="http://www.w3.org/1999/xlink">/usr/obj/usr/src/sys/KERNCONF</filename>,
      wobei <filename xmlns:xlink="http://www.w3.org/1999/xlink">KERNCONF</filename>
      das in einer Kernel-<citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">config</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">5</manvolnum></citerefentry> festgelegte
      <varname xmlns:xlink="http://www.w3.org/1999/xlink">ident</varname> ist), ausfindig. Mit diesen beiden
      Informationen kann die Fehlersuche beginnen.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Um in den Debugger zu gelangen und mit dem
      Informationserhalt aus dem Speicherauszug zu beginnen, sind
      zumindest folgende Schritte nötig:</para>

    <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">#</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">cd /usr/obj/usr/src/sys/KERNCONF</userinput>
<prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">#</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">kgdb kernel.debug /var/crash/vmcore.0</userinput></screen>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Sie können Fehler im Speicherauszug nach dem Absturz
      suchen, indem Sie die Kernel-Quellen benutzen, genauso wie Sie
      es bei jedem anderen Programm können.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Dieser erste Speicherauszug ist aus einem 5.2-BETA-Kernel
      und der Absturz ist tief im Kernel begründet. Die Ausgabe
      unten wurde dahingehend bearbeitet, dass sie nun Zeilennummern
      auf der linken Seite einschließt. Diese erste
      Ablaufverfolgung (Trace) untersucht den Befehlszeiger
      (Instruction-Pointer) und beschafft eine Zurückverfolgung
      (Back-Trace). Die Adresse, die in Zeile 41 für den
      <command xmlns:xlink="http://www.w3.org/1999/xlink">list</command>-Befehl benutzt wird, ist der
      Befehlszeiger und kann in Zeile 17 gefunden werden. Die meisten
      Entwickler wollen zumindest dies zugesendet bekommen, falls Sie
      das Problem nicht selber untersuchen und beheben können.
      Falls Sie jedoch das Problem lösen, stellen Sie sicher,
      dass Ihr Patch seinen Weg in den Quellbaum mittels eines
      Fehlerberichts, den Mailinglisten oder ihres Privilegs, zu
      committen, findet!</para>

    <screen xmlns:xlink="http://www.w3.org/1999/xlink"> 1:<prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">#</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">cd /usr/obj/usr/src/sys/KERNCONF</userinput>
 2:<prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">#</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">kgdb kernel.debug /var/crash/vmcore.0</userinput>
 3:GNU gdb 5.2.1 (FreeBSD)
 4:Copyright 2002 Free Software Foundation, Inc.
 5:GDB is free software, covered by the GNU General Public License, and you are
 6:welcome to change it and/or distribute copies of it under certain conditions.
 7:Type "show copying" to see the conditions.
 8:There is absolutely no warranty for GDB.  Type "show warranty" for details.
 9:This GDB was configured as "i386-undermydesk-freebsd"...
10:panic: page fault
11:panic messages:
12:---
13:Fatal trap 12: page fault while in kernel mode
14:cpuid = 0; apic id = 00
15:fault virtual address   = 0x300
16:fault code:             = supervisor read, page not present
17:instruction pointer     = 0x8:0xc0713860
18:stack pointer           = 0x10:0xdc1d0b70
19:frame pointer           = 0x10:0xdc1d0b7c
20:code segment            = base 0x0, limit 0xfffff, type 0x1b
21:                        = DPL 0, pres 1, def32 1, gran 1
22:processor eflags        = resume, IOPL = 0
23:current process         = 14394 (uname)
24:trap number             = 12
25:panic: page fault
26      cpuid = 0;
27:Stack backtrace:
28
29:syncing disks, buffers remaining... 2199 2199 panic: mi_switch: switch in a critical section
30:cpuid = 0;
31:Uptime: 2h43m19s
32:Dumping 255 MB
33: 16 32 48 64 80 96 112 128 144 160 176 192 208 224 240
34:---
35:Reading symbols from /boot/kernel/snd_maestro3.ko...done.
36:Loaded symbols for /boot/kernel/snd_maestro3.ko
37:Reading symbols from /boot/kernel/snd_pcm.ko...done.
38:Loaded symbols for /boot/kernel/snd_pcm.ko
39:#0  doadump () at /usr/src/sys/kern/kern_shutdown.c:240
40:240             dumping++;
41:<prompt xmlns:xlink="http://www.w3.org/1999/xlink">(kgdb)</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">list *0xc0713860</userinput>
42:0xc0713860 is in lapic_ipi_wait (/usr/src/sys/i386/i386/local_apic.c:663).
43:658                     incr = 0;
44:659                     delay = 1;
45:660             } else
46:661                     incr = 1;
47:662             for (x = 0; x &lt; delay; x += incr) {
48:663                     if ((lapic-&gt;icr_lo &amp; APIC_DELSTAT_MASK) == APIC_DELSTAT_IDLE)
49:664                             return (1);
50:665                     ia32_pause();
51:666             }
52:667             return (0);
53:<prompt xmlns:xlink="http://www.w3.org/1999/xlink">(kgdb)</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">backtrace</userinput>
54:#0  doadump () at /usr/src/sys/kern/kern_shutdown.c:240
55:#1  0xc055fd9b in boot (howto=260) at /usr/src/sys/kern/kern_shutdown.c:372
56:#2  0xc056019d in panic () at /usr/src/sys/kern/kern_shutdown.c:550
57:#3  0xc0567ef5 in mi_switch () at /usr/src/sys/kern/kern_synch.c:470
58:#4  0xc055fa87 in boot (howto=256) at /usr/src/sys/kern/kern_shutdown.c:312
59:#5  0xc056019d in panic () at /usr/src/sys/kern/kern_shutdown.c:550
60:#6  0xc0720c66 in trap_fatal (frame=0xdc1d0b30, eva=0)
61:    at /usr/src/sys/i386/i386/trap.c:821
62:#7  0xc07202b3 in trap (frame=
63:      {tf_fs = -1065484264, tf_es = -1065484272, tf_ds = -1065484272, tf_edi = 1, tf_esi = 0, tf_ebp = -602076292, tf_isp = -602076324, tf_ebx = 0, tf_edx = 0, tf_ecx = 1000000, tf_eax = 243, tf_trapno = 12, tf_err = 0, tf_eip = -1066321824, tf_cs = 8, tf_eflags = 65671, tf_esp = 243, tf_ss = 0})
64:    at /usr/src/sys/i386/i386/trap.c:250
65:#8  0xc070c9f8 in calltrap () at {standard input}:94
66:#9  0xc07139f3 in lapic_ipi_vectored (vector=0, dest=0)
67:    at /usr/src/sys/i386/i386/local_apic.c:733
68:#10 0xc0718b23 in ipi_selected (cpus=1, ipi=1)
69:    at /usr/src/sys/i386/i386/mp_machdep.c:1115
70:#11 0xc057473e in kseq_notify (ke=0xcc05e360, cpu=0)
71:    at /usr/src/sys/kern/sched_ule.c:520
72:#12 0xc0575cad in sched_add (td=0xcbcf5c80)
73:    at /usr/src/sys/kern/sched_ule.c:1366
74:#13 0xc05666c6 in setrunqueue (td=0xcc05e360)
75:    at /usr/src/sys/kern/kern_switch.c:422
76:#14 0xc05752f4 in sched_wakeup (td=0xcbcf5c80)
77:    at /usr/src/sys/kern/sched_ule.c:999
78:#15 0xc056816c in setrunnable (td=0xcbcf5c80)
79:    at /usr/src/sys/kern/kern_synch.c:570
80:#16 0xc0567d53 in wakeup (ident=0xcbcf5c80)
81:    at /usr/src/sys/kern/kern_synch.c:411
82:#17 0xc05490a8 in exit1 (td=0xcbcf5b40, rv=0)
83:    at /usr/src/sys/kern/kern_exit.c:509
84:#18 0xc0548011 in sys_exit () at /usr/src/sys/kern/kern_exit.c:102
85:#19 0xc0720fd0 in syscall (frame=
86:      {tf_fs = 47, tf_es = 47, tf_ds = 47, tf_edi = 0, tf_esi = -1, tf_ebp = -1077940712, tf_isp = -602075788, tf_ebx = 672411944, tf_edx = 10, tf_ecx = 672411600, tf_eax = 1, tf_trapno = 12, tf_err = 2, tf_eip = 671899563, tf_cs = 31, tf_eflags = 642, tf_esp = -1077940740, tf_ss = 47})
87:    at /usr/src/sys/i386/i386/trap.c:1010
88:#20 0xc070ca4d in Xint0x80_syscall () at {standard input}:136
89:---Can't read userspace from dump, or kernel process---
90:<prompt xmlns:xlink="http://www.w3.org/1999/xlink">(kgdb)</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">quit</userinput></screen>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Diese nächste Ablaufverfolgung ist ein älterer
      Speicherauszug aus FreeBSD 2-Zeiten, aber ist komplizierter und
      zeigt mehr der <command xmlns:xlink="http://www.w3.org/1999/xlink">gdb</command>-Funktionen. Lange Zeilen
      wurden gefaltet, um die Lesbarkeit zu verbessern, und die Zeilen
      wurden zur Verweisung nummeriert. Trotzdem ist es eine reale
      Fehlerverfolgung (Error-Trace), die während der Entwicklung
      des pcvt-Konsolentreibers entstanden ist.</para>

<screen xmlns:xlink="http://www.w3.org/1999/xlink"> 1:Script started on Fri Dec 30 23:15:22 1994
 2:<prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">#</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">cd /sys/compile/URIAH</userinput>
 3:<prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">#</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">gdb -k kernel /var/crash/vmcore.1</userinput>
 4:Reading symbol data from /usr/src/sys/compile/URIAH/kernel
...done.
 5:IdlePTD 1f3000
 6:panic: because you said to!
 7:current pcb at 1e3f70
 8:Reading in symbols for ../../i386/i386/machdep.c...done.
 9:<prompt xmlns:xlink="http://www.w3.org/1999/xlink">(kgdb)</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">backtrace</userinput>
10:#0  boot (arghowto=256) (../../i386/i386/machdep.c line 767)
11:#1  0xf0115159 in panic ()
12:#2  0xf01955bd in diediedie () (../../i386/i386/machdep.c line 698)
13:#3  0xf010185e in db_fncall ()
14:#4  0xf0101586 in db_command (-266509132, -266509516, -267381073)
15:#5  0xf0101711 in db_command_loop ()
16:#6  0xf01040a0 in db_trap ()
17:#7  0xf0192976 in kdb_trap (12, 0, -272630436, -266743723)
18:#8  0xf019d2eb in trap_fatal (...)
19:#9  0xf019ce60 in trap_pfault (...)
20:#10 0xf019cb2f in trap (...)
21:#11 0xf01932a1 in exception:calltrap ()
22:#12 0xf0191503 in cnopen (...)
23:#13 0xf0132c34 in spec_open ()
24:#14 0xf012d014 in vn_open ()
25:#15 0xf012a183 in open ()
26:#16 0xf019d4eb in syscall (...)
27:<prompt xmlns:xlink="http://www.w3.org/1999/xlink">(kgdb)</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">up 10</userinput>
28:Reading in symbols for ../../i386/i386/trap.c...done.
29:#10 0xf019cb2f in trap (frame={tf_es = -260440048, tf_ds = 16, tf_\
30:edi = 3072, tf_esi = -266445372, tf_ebp = -272630356, tf_isp = -27\
31:2630396, tf_ebx = -266427884, tf_edx = 12, tf_ecx = -266427884, tf\
32:_eax = 64772224, tf_trapno = 12, tf_err = -272695296, tf_eip = -26\
33:6672343, tf_cs = -266469368, tf_eflags = 66066, tf_esp = 3072, tf_\
34:ss = -266427884}) (../../i386/i386/trap.c line 283)
35:283                             (void) trap_pfault(&amp;frame, FALSE);
36:<prompt xmlns:xlink="http://www.w3.org/1999/xlink">(kgdb)</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">frame frame-&gt;tf_ebp frame-&gt;tf_eip</userinput>
37:Reading in symbols for ../../i386/isa/pcvt/pcvt_drv.c...done.
38:#0  0xf01ae729 in pcopen (dev=3072, flag=3, mode=8192, p=(struct p\
39:roc *) 0xf07c0c00) (../../i386/isa/pcvt/pcvt_drv.c line 403)
40:403             return ((*linesw[tp-&gt;t_line].l_open)(dev, tp));
41:<prompt xmlns:xlink="http://www.w3.org/1999/xlink">(kgdb)</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">list</userinput>
42:398
43:399             tp-&gt;t_state |= TS_CARR_ON;
44:400             tp-&gt;t_cflag |= CLOCAL;  /* cannot be a modem (:-) */
45:401
46:402     #if PCVT_NETBSD || (PCVT_FREEBSD &gt;= 200)
47:403             return ((*linesw[tp-&gt;t_line].l_open)(dev, tp));
48:404     #else
49:405             return ((*linesw[tp-&gt;t_line].l_open)(dev, tp, flag));
50:406     #endif /* PCVT_NETBSD || (PCVT_FREEBSD &gt;= 200) */
51:407     }
52:<prompt xmlns:xlink="http://www.w3.org/1999/xlink">(kgdb)</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">print tp</userinput>
53:Reading in symbols for ../../i386/i386/cons.c...done.
54:$1 = (struct tty *) 0x1bae
55:<prompt xmlns:xlink="http://www.w3.org/1999/xlink">(kgdb)</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">print tp-&gt;t_line</userinput>
56:$2 = 1767990816
57:<prompt xmlns:xlink="http://www.w3.org/1999/xlink">(kgdb)</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">up</userinput>
58:#1  0xf0191503 in cnopen (dev=0x00000000, flag=3, mode=8192, p=(st\
59:ruct proc *) 0xf07c0c00) (../../i386/i386/cons.c line 126)
60:       return ((*cdevsw[major(dev)].d_open)(dev, flag, mode, p));
61:<prompt xmlns:xlink="http://www.w3.org/1999/xlink">(kgdb)</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">up</userinput>
62:#2  0xf0132c34 in spec_open ()
63:<prompt xmlns:xlink="http://www.w3.org/1999/xlink">(kgdb)</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">up</userinput>
64:#3  0xf012d014 in vn_open ()
65:<prompt xmlns:xlink="http://www.w3.org/1999/xlink">(kgdb)</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">up</userinput>
66:#4  0xf012a183 in open ()
67:<prompt xmlns:xlink="http://www.w3.org/1999/xlink">(kgdb)</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">up</userinput>
68:#5  0xf019d4eb in syscall (frame={tf_es = 39, tf_ds = 39, tf_edi =\
69: 2158592, tf_esi = 0, tf_ebp = -272638436, tf_isp = -272629788, tf\
70:_ebx = 7086, tf_edx = 1, tf_ecx = 0, tf_eax = 5, tf_trapno = 582, \
71:tf_err = 582, tf_eip = 75749, tf_cs = 31, tf_eflags = 582, tf_esp \
72:= -272638456, tf_ss = 39}) (../../i386/i386/trap.c line 673)
73:673             error = (*callp-&gt;sy_call)(p, args, rval);
74:<prompt xmlns:xlink="http://www.w3.org/1999/xlink">(kgdb)</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">up</userinput>
75:Initial frame selected; you cannot go up.
76:<prompt xmlns:xlink="http://www.w3.org/1999/xlink">(kgdb)</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">quit</userinput></screen>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Kommentare zum Skript oben:</para>

    <variablelist xmlns:xlink="http://www.w3.org/1999/xlink">
      <varlistentry xmlns:xlink="http://www.w3.org/1999/xlink">
	<term xmlns:xlink="http://www.w3.org/1999/xlink">Zeile 6:</term>

	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Dies ist ein Speicherauszug, der innerhalb von DDB
	    genommen wurde (siehe unten), deswegen der Kommentar zur
	    Panic <quote xmlns:xlink="http://www.w3.org/1999/xlink">because you said to!</quote> und die eher
	    lange Stack-Ablaufverfolgung (Stack-Trace); der
	    anfängliche Grund für das Starten von DDB war
	    jedoch ein Seitenfehler-Trap (Page-Fault-Trap).</para>
	</listitem>
      </varlistentry>

      <varlistentry xmlns:xlink="http://www.w3.org/1999/xlink">
	<term xmlns:xlink="http://www.w3.org/1999/xlink">Zeile 20:</term>

	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Dies ist die Position der Funktion
	    <function xmlns:xlink="http://www.w3.org/1999/xlink">trap()</function> in der
	    Stack-Ablaufverfolgung.</para>
	</listitem>
      </varlistentry>

      <varlistentry xmlns:xlink="http://www.w3.org/1999/xlink">
	<term xmlns:xlink="http://www.w3.org/1999/xlink">Zeile 36:</term>

	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Erzwingt die Benutzung eines neuen Stack-Frames; dies
	    ist nicht mehr notwendig. Die Stack-Frames sollen jetzt an
	    die richtige Stelle im Speicher zeigen, selbst im Falle
	    eines Traps. Nach einem Blick auf den Code in Zeile 403
	    ergibt sich mit hoher Wahrscheinlichkeit, dass entweder
	    der Zeigerzugriff auf <quote xmlns:xlink="http://www.w3.org/1999/xlink">tp</quote> fehlerbehaftet
	    oder der Array-Zugriff unerlaubt war.</para>
	</listitem>
      </varlistentry>

      <varlistentry xmlns:xlink="http://www.w3.org/1999/xlink">
	<term xmlns:xlink="http://www.w3.org/1999/xlink">Zeile 52:</term>

	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Der Zeiger scheint verdächtig, aber besitzt
	    zufällig eine gültige Adresse.</para>
	</listitem>
      </varlistentry>

      <varlistentry xmlns:xlink="http://www.w3.org/1999/xlink">
	<term xmlns:xlink="http://www.w3.org/1999/xlink">Zeile 56:</term>

	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Jedoch zeigt er offensichtlich auf nichts und so haben
	    wir unseren Fehler gefunden! (Für diejenigen, die
	    nichts mit diesem speziellen Stück Code anfangen
	    können: <literal xmlns:xlink="http://www.w3.org/1999/xlink">tp-&gt;t_line</literal> verweist
	    hier auf das Zeilenverhalten (Line-Discipline) des
	    Konsolen-Geräts, was eine ziemlich kleine Ganzzahl
	    (Integer) sein muss.)</para>
	</listitem>
      </varlistentry>
    </variablelist>

    <tip xmlns:xlink="http://www.w3.org/1999/xlink">
      <para xmlns:xlink="http://www.w3.org/1999/xlink">Falls Ihr System regelmäßig abstürzt und
	und Sie bald keinen freien Speicherplatz mehr zur
	Verfügung haben, könnte das Löschen alter
	<filename xmlns:xlink="http://www.w3.org/1999/xlink">vmcore</filename>-Dateien in
	<filename xmlns:xlink="http://www.w3.org/1999/xlink">/var/core</filename> einen beträchtlichen
	Betrag an Speicherplatz einsparen.</para>
    </tip>
  </sect1>

  <sect1 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="kerneldebug-ddd">
    <title xmlns:xlink="http://www.w3.org/1999/xlink">Fehlersuche in einem Speicherauszug nach einem Absturz mit
      DDD</title>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Die Untersuchung eines Speicherauszugs nach einem
      Kernel-Absturz mit einem grafischen Debugger wie
      <command xmlns:xlink="http://www.w3.org/1999/xlink">ddd</command> ist auch möglich (Sie müssen
      den <package xmlns:xlink="http://www.w3.org/1999/xlink">devel/ddd</package>-Port
      installieren, um den <command xmlns:xlink="http://www.w3.org/1999/xlink">ddd</command>-Debugger benutzen zu
      können). Nehmen Sie die <option xmlns:xlink="http://www.w3.org/1999/xlink">-k</option> mit in die
      <command xmlns:xlink="http://www.w3.org/1999/xlink">ddd</command>-Kommandozeile auf, die Sie normalerweise
      benutzen würden. Zum Beispiel:</para>

    <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">#</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">ddd --debugger kgdb kernel.debug /var/crash/vmcore.0</userinput></screen>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Sie sollten nun in der Lage sein, die Untersuchung des
      Speicherauszugs nach dem Absturz unter Benutzung der grafischen
      Schnittstelle von <command xmlns:xlink="http://www.w3.org/1999/xlink">ddd</command> anzugehen.</para>
  </sect1>



  <sect1 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="kerneldebug-online-ddb">
    <title xmlns:xlink="http://www.w3.org/1999/xlink">Online-Kernel-Fehlersuche mit DDB</title>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Während <command xmlns:xlink="http://www.w3.org/1999/xlink">kgdb</command> als Offline-Debugger
      eine Benutzerschnittstelle auf höchster Ebene bietet, gibt
      es einige Dinge, die es nicht kann. Die wichtigsten sind das
      Setzen von Breakpoints und das Abarbeiten des Kernel-Codes in
      Einzelschritten (Single-Stepping).</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Falls Sie eine systemnahe Fehlersuche an Ihrem Kernel
      vorhaben, steht Ihnen ein Online-Debugger mit dem Namen DDB zur
      Verfügung. Er erlaubt Ihnen das Setzen von Breakpoints, die
      Abarbeitung von Kernel-Funktionen in Einzelschritten, das
      Untersuchen und Verändern von Kernel-Variablen usw. Jedoch
      hat er keinen Zugriff auf Kernel-Quelldateien, sondern kann nur,
      im Gegensatz zu <command xmlns:xlink="http://www.w3.org/1999/xlink">gdb</command>, welches auf die ganzen
      Informationen zur Fehlersuche zurückgreifen kann, auf
      globale und statische Symbole zugreifen.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Um DDB in Ihren Kernel einzubinden, fügen Sie die
      Optionen

      <programlisting xmlns:xlink="http://www.w3.org/1999/xlink">options KDB</programlisting>
      <programlisting xmlns:xlink="http://www.w3.org/1999/xlink">options DDB</programlisting>

      Ihrer Konfigurationsdatei hinzu und bauen Sie den Kernel neu.
      (Details zur Konfiguration des FreeBSD-Kernels finden Sie im
      <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://www.FreeBSD.org/doc/de_DE.ISO8859-1/books/handbook/index.html">FreeBSD-Handbuch</link>).</para>

    <note xmlns:xlink="http://www.w3.org/1999/xlink">
      <para xmlns:xlink="http://www.w3.org/1999/xlink">Falls Sie eine ältere Version des Boot-Blocks haben,
	könnte es sein, dass Ihre Symbole zur Fehlersuche noch
	nicht einmal geladen werden. Aktualisieren Sie den Boot-Block;
	aktuelle Versionen laden die DDB-Symbole automatisch.</para>
    </note>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Sobald Ihr Kernel mit DDB startet, gibt es mehrere Wege, um
      in DDB zu gelangen. Der erste und früheste Weg ist, das
      Boot-Flag <option xmlns:xlink="http://www.w3.org/1999/xlink">-d</option> gleich an der
      Boot-Eingabeaufforderung einzugeben. Der Kernel startet dann in
      den Debug-Modus und betritt DDB noch vor jedweder
      Gerätesuche. Somit können Sie Funktionen zur
      Gerätesuche/-bereitstellung auf Fehler untersuchen.
      FreeBSD-CURRENT-Benutzer müssen die sechste Option im
      Boot-Menü auswählen, um an eine Eingabeaufforderung zu
      gelangen.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Das zweite Szenario ist der Gang in den Debugger, sobald das
      System schon gestartet ist. Es gibt zwei einfache Wege dies zu
      erreichen. Falls Sie von der Eingabeaufforderung aus in den
      Debugger gelangen möchten, geben Sie einfach folgenden
      Befehl ab:</para>

    <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">#</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">sysctl debug.kdb.enter=1</userinput></screen>

    <note xmlns:xlink="http://www.w3.org/1999/xlink">
      <para xmlns:xlink="http://www.w3.org/1999/xlink">Um eine schnelle Panic zu erzwingen, geben Sie das folgende
        Kommando ein:</para>
      <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">#</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">sysctl debug.kdb.panic=1</userinput></screen>
    </note>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Anderenfalls können Sie ein Tastenkürzel auf der
      Tastatur benutzen, wenn Sie an der Systemkonsole sind. Die
      Voreinstellung für die break-to-debugger-Sequenz ist
      <keycombo xmlns:xlink="http://www.w3.org/1999/xlink" action="simul"><keycap xmlns:xlink="http://www.w3.org/1999/xlink">Ctrl</keycap><keycap xmlns:xlink="http://www.w3.org/1999/xlink">Alt</keycap><keycap xmlns:xlink="http://www.w3.org/1999/xlink">ESC</keycap></keycombo>.
      In syscons kann diese Sequenz auf eine andere Tastenkombination
      gelegt werden (remap) und manche der verfügbaren
      Tastaturlayouts tun dies, stellen Sie also sicher, dass Sie die
      richtige Sequenz kennen, die benutzt werden soll. Für
      serielle Konsolen ist eine Option vorhanden, die die Benutzung
      einer Unterbrechung der seriellen Verbindung (BREAK) auf der
      Kommandozeile erlaubt, um in DDB zu gelangen (<literal xmlns:xlink="http://www.w3.org/1999/xlink">options
      BREAK_TO_DEBUGGER</literal> in der Kernel-Konfigurationsdatei).
      Dies ist jedoch nicht der Standard, da viele serielle Adapter in
      Verwendung sind, die grundlos eine BREAK-Bedingung erzeugen, zum
      Beispiel bei Ziehen des Kabels.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Die dritte Möglichkeit ist, dass jede Panic-Bedingung
      in DDB springt, falls der Kernel hierfür konfiguriert ist.
      Aus diesem Grund ist es nicht sinnvoll einen Kernel mit DDB
      für ein unbeaufsichtigtes System zu konfigurieren.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Um die unbeaufsichtigte Funktionsweise zu erreichen
      fügen Sie:</para>

    <programlisting xmlns:xlink="http://www.w3.org/1999/xlink">options	KDB_UNATTENDED</programlisting>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">der Kernel-Konfigurationsdatei hinzu und bauen/installieren
      Sie den Kernel neu.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Die DDB-Befehle ähneln grob einigen
      <command xmlns:xlink="http://www.w3.org/1999/xlink">gdb</command>-Befehlen. Das Erste, das Sie vermutlich
      tun müssen, ist einen Breakpoint zu setzen:</para>

    <screen xmlns:xlink="http://www.w3.org/1999/xlink"><userinput xmlns:xlink="http://www.w3.org/1999/xlink">break function-name address</userinput></screen>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Zahlen werden standardmäßig hexadezimal
      angegeben, aber um sie von Symbolnamen zu unterscheiden, muss
      Zahlen, die mit den Buchstaben <literal xmlns:xlink="http://www.w3.org/1999/xlink">a-f</literal> beginnen,
      <literal xmlns:xlink="http://www.w3.org/1999/xlink">0x</literal> vorangehen (dies ist für andere
      Zahlen beliebig). Einfache Ausdrücke sind erlaubt, zum
      Beispiel: <literal xmlns:xlink="http://www.w3.org/1999/xlink">function-name + 0x103</literal>.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Um den Debugger zu verlassen und mit der Abarbeitung
      fortzufahren, geben Sie ein:</para>

    <screen xmlns:xlink="http://www.w3.org/1999/xlink"><userinput xmlns:xlink="http://www.w3.org/1999/xlink">continue</userinput></screen>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Um eine Stack-Ablaufverfolgung zu erhalten, benutzen
      Sie:</para>

    <screen xmlns:xlink="http://www.w3.org/1999/xlink"><userinput xmlns:xlink="http://www.w3.org/1999/xlink">trace</userinput></screen>

    <note xmlns:xlink="http://www.w3.org/1999/xlink">
      <para xmlns:xlink="http://www.w3.org/1999/xlink">Beachten Sie, dass wenn Sie DDB mittels einer
	Schnelltaste betreten, der Kernel zurzeit einen Interrupt
	bereitstellt, sodass die Stack-Ablaufverfolgung Ihnen nicht
	viel nützen könnte.</para>
    </note>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Falls Sie einen Breakpoint entfernen möchten, benutzen
      Sie</para>

    <screen xmlns:xlink="http://www.w3.org/1999/xlink"><userinput xmlns:xlink="http://www.w3.org/1999/xlink">del</userinput>
<userinput xmlns:xlink="http://www.w3.org/1999/xlink">del address-expression</userinput></screen>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Die erste Form wird direkt, nachdem ein Breakpoint anschlug,
      angenommen und entfernt den aktuellen Breakpoint. Die zweite
      kann jeden Breakpoint löschen, aber Sie müssen die
      genaue Adresse angeben; diese kann bezogen werden durch:</para>

    <screen xmlns:xlink="http://www.w3.org/1999/xlink"><userinput xmlns:xlink="http://www.w3.org/1999/xlink">show b</userinput></screen>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">oder:</para>

    <screen xmlns:xlink="http://www.w3.org/1999/xlink"><userinput xmlns:xlink="http://www.w3.org/1999/xlink">show break</userinput></screen>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Um den Kernel in Einzelschritten auszuführen, probieren
      Sie:</para>

    <screen xmlns:xlink="http://www.w3.org/1999/xlink"><userinput xmlns:xlink="http://www.w3.org/1999/xlink">s</userinput></screen>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Dies springt in Funktionen, aber Sie können DDB
      veranlassen, diese schrittweise zu verfolgen, bis die passende
      Rückkehranweisung (Return-Statement) erreicht ist. Nutzen
      Sie hierzu:</para>

    <screen xmlns:xlink="http://www.w3.org/1999/xlink"><userinput xmlns:xlink="http://www.w3.org/1999/xlink">n</userinput></screen>

    <note xmlns:xlink="http://www.w3.org/1999/xlink">
      <para xmlns:xlink="http://www.w3.org/1999/xlink">Dies ist nicht das gleiche wie die
	<command xmlns:xlink="http://www.w3.org/1999/xlink">next</command>-Anweisung von <command xmlns:xlink="http://www.w3.org/1999/xlink">gdb</command>;
	es ist wie <command xmlns:xlink="http://www.w3.org/1999/xlink">gdb</command>s <command xmlns:xlink="http://www.w3.org/1999/xlink">finish</command>.
	Mehrmaliges Drücken von <keycap xmlns:xlink="http://www.w3.org/1999/xlink">n</keycap> führt zu
	einer Fortsetzung.</para>
    </note>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Um Daten aus dem Speicher zu untersuchen, benutzen Sie (zum
      Beispiel):

      <screen xmlns:xlink="http://www.w3.org/1999/xlink"><userinput xmlns:xlink="http://www.w3.org/1999/xlink">x/wx 0xf0133fe0,40</userinput>
<userinput xmlns:xlink="http://www.w3.org/1999/xlink">x/hd db_symtab_space</userinput>
<userinput xmlns:xlink="http://www.w3.org/1999/xlink">x/bc termbuf,10</userinput>
<userinput xmlns:xlink="http://www.w3.org/1999/xlink">x/s stringbuf</userinput></screen>

      für Word/Halfword/Byte-Zugriff und
      Hexadezimal/Dezimal/Character/String-Ausgabe. Die Zahl nach dem
      Komma ist der Objektzähler. Um die nächsten 0x10
      Objekte anzuzeigen benutzen Sie einfach:</para>

    <screen xmlns:xlink="http://www.w3.org/1999/xlink"><userinput xmlns:xlink="http://www.w3.org/1999/xlink">x ,10</userinput></screen>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Gleichermaßen benutzen Sie

      <screen xmlns:xlink="http://www.w3.org/1999/xlink"><userinput xmlns:xlink="http://www.w3.org/1999/xlink">x/ia foofunc,10</userinput></screen>

      um die ersten 0x10 Anweisungen aus <function xmlns:xlink="http://www.w3.org/1999/xlink">foofunc</function>
      zu zerlegen (disassemble) und Sie zusammen mit ihrem
      Adressabstand (Offset) vom Anfang von
      <function xmlns:xlink="http://www.w3.org/1999/xlink">foofunc</function> auszugeben.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Um Speicher zu verändern benutzen Sie den
      Schreibbefehl:</para>

    <screen xmlns:xlink="http://www.w3.org/1999/xlink"><userinput xmlns:xlink="http://www.w3.org/1999/xlink">w/b termbuf 0xa 0xb 0</userinput>
<userinput xmlns:xlink="http://www.w3.org/1999/xlink">w/w 0xf0010030 0 0</userinput></screen>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Die Befehlsoption
      (<literal xmlns:xlink="http://www.w3.org/1999/xlink">b</literal>/<literal xmlns:xlink="http://www.w3.org/1999/xlink">h</literal>/<literal xmlns:xlink="http://www.w3.org/1999/xlink">w</literal>)
      legt die Größe der Daten fest, die geschrieben werden
      sollen, der erste Ausdruck danach ist die Adresse, wohin
      geschrieben werden soll, und der Rest wird als Daten
      verarbeitet, die in aufeinander folgende Speicherstellen
      geschrieben werden.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Falls Sie die aktuellen Register wissen möchten,
      benutzen Sie:</para>

    <screen xmlns:xlink="http://www.w3.org/1999/xlink"><userinput xmlns:xlink="http://www.w3.org/1999/xlink">show reg</userinput></screen>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Alternativ können Sie den Inhalt eines einzelnen
      Registers ausgeben mit z.B.

      <screen xmlns:xlink="http://www.w3.org/1999/xlink"><userinput xmlns:xlink="http://www.w3.org/1999/xlink">p $eax</userinput></screen>

      und ihn bearbeiten mit:</para>

    <screen xmlns:xlink="http://www.w3.org/1999/xlink"><userinput xmlns:xlink="http://www.w3.org/1999/xlink">set $eax new-value</userinput></screen>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Sollten Sie irgendeine Kernel-Funktion aus DDB heraus
      aufrufen wollen, geben Sie einfach ein:</para>

    <screen xmlns:xlink="http://www.w3.org/1999/xlink"><userinput xmlns:xlink="http://www.w3.org/1999/xlink">call func(arg1, arg2, ...)</userinput></screen>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Der Rückgabewert wird ausgegeben.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Für eine Zusammenfassung aller laufenden Prozesse im
      Stil von <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">ps</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">1</manvolnum></citerefentry> benutzen Sie:</para>

    <screen xmlns:xlink="http://www.w3.org/1999/xlink"><userinput xmlns:xlink="http://www.w3.org/1999/xlink">ps</userinput></screen>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Nun haben Sie herausgefunden, warum Ihr Kernel
      fehlschlägt, und möchten neu starten. Denken Sie
      daran, dass, abhängig von der Schwere vorhergehender
      Störungen, nicht alle Teile des Kernels wie gewohnt
      funktionieren könnten. Führen Sie eine der folgenden
      Aktionen durch, um Ihr System herunterzufahren und neu zu
      starten:</para>

    <screen xmlns:xlink="http://www.w3.org/1999/xlink"><userinput xmlns:xlink="http://www.w3.org/1999/xlink">panic</userinput></screen>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Dies wird Ihren Kernel dazu veranlassen abzustürzen,
      einen Speicherauszug abzulegen und neu zu starten, sodass Sie
      den Kernspeicherauszug später auf höherer Ebene mit
      <command xmlns:xlink="http://www.w3.org/1999/xlink">gdb</command> auswerten können. Diesem Befehl muss
      normalerweise eine weitere <command xmlns:xlink="http://www.w3.org/1999/xlink">continue</command>-Anweisung
      folgen.</para>

    <screen xmlns:xlink="http://www.w3.org/1999/xlink"><userinput xmlns:xlink="http://www.w3.org/1999/xlink">call boot(0)</userinput></screen>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Dürfte ein guter Weg sein, um das laufende System
      sauber herunterzufahren, alle Festplatten mittels
      <function xmlns:xlink="http://www.w3.org/1999/xlink">sync()</function> zu schreiben und schließlich,
      in manchen Fällen, neu zu starten. Solange die Festplatten-
      und Dateisystemschnittstellen des Kernels nicht beschädigt
      sind, könnte dies ein guter Weg für ein beinahe
      sauberes Abschalten sein.</para>

    <screen xmlns:xlink="http://www.w3.org/1999/xlink"><userinput xmlns:xlink="http://www.w3.org/1999/xlink">call cpu_reset()</userinput></screen>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Dies ist der letzte Ausweg aus der Katastrophe und kommt
      beinahe dem Drücken des Ausschaltknopfes gleich.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Falls Sie eine kurze Zusammenfassung aller Befehle
      benötigen, geben Sie einfach ein:</para>

    <screen xmlns:xlink="http://www.w3.org/1999/xlink"><userinput xmlns:xlink="http://www.w3.org/1999/xlink">help</userinput></screen>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Es ist strengstens empfohlen, eine ausgedruckte Version der
      <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">ddb</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">4</manvolnum></citerefentry>-Manualpage während der Fehlersuche neben sich
      liegen zu haben. Denken Sie daran, dass es schwer ist, die
      Online-Hilfe zu lesen, während der Ausführung des
      Kernels in Einzelschritten.</para>
  </sect1>

  <sect1 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="kerneldebug-online-gdb">
    <title xmlns:xlink="http://www.w3.org/1999/xlink">Online-Kernel-Fehlersuche mit GDB auf einem entfernten
      System</title>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Diese Funktion wird seit FreeBSD 2.2 unterstützt und
      ist wirklich sehr geschickt.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">GDB unterstützt <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">die Fehlersuche von einem
      entfernten System aus</emphasis> bereits einige Zeit. Dies
      geschieht unter Benutzung eines sehr einfachen Protokolls
      über eine serielle Verbindung. Anders als bei den anderen,
      oben beschriebenen, Vorgehensweisen werden hier zwei Systeme
      benötigt. Das eine ist das Hostsystem, welches die Umgebung
      zur Fehlersuche, einschließlich aller Quellen und einer
      Kopie der Kernel-Binärdatei mit allen Symbolen
      bereitstellt, und das andere das Zielsystem, welches einfach nur
      eine Kopie desselben Kernels ausführt (ohne die
      Informationen zur Fehlersuche).</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Sie sollten den Kernel im Zweifelsfall mit <command xmlns:xlink="http://www.w3.org/1999/xlink">config
      -g</command> konfigurieren, <option xmlns:xlink="http://www.w3.org/1999/xlink">DDB</option> in die
      Konfiguration aufnehmen und den Kernel, wie sonst auch,
      kompilieren. Dies ergibt, aufgrund der zusätzlichen
      Informationen zur Fehlersuche, eine umfangreiche
      Binärdatei. Kopieren Sie diesen Kernel auf das Zielsystem,
      entfernen Sie die Symbole zur Fehlersuche mit <command xmlns:xlink="http://www.w3.org/1999/xlink">strip
      -x</command> und starten Sie ihn mit der
      <option xmlns:xlink="http://www.w3.org/1999/xlink">-d</option>-Boot-Option. Stellen Sie die serielle
      Verbindung zwischen dem Zielsystem, welches "flags 80" für
      dessen sio-Gerät gesetzt hat, und dem Hostsystem, welches
      die Fehlersuche übernimmt, her. Nun wechseln Sie auf dem
      Hostsystem in das Bauverzeichnis des Ziel-Kernels und starten
      <command xmlns:xlink="http://www.w3.org/1999/xlink">gdb</command>:</para>

    <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">kgdb kernel</userinput>
GDB is free software and you are welcome to distribute copies of it
 under certain conditions; type "show copying" to see the conditions.
There is absolutely no warranty for GDB; type "show warranty" for details.
GDB 4.16 (i386-unknown-freebsd),
Copyright 1996 Free Software Foundation, Inc...
<prompt xmlns:xlink="http://www.w3.org/1999/xlink">(kgdb)</prompt> </screen>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Stellen Sie die entfernte Sitzung zur Fehlersuche ein mit
      (angenommen, der erste serielle Port ist in Verwendung):</para>

    <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns:xlink="http://www.w3.org/1999/xlink">(kgdb)</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">target remote /dev/cuaa0</userinput></screen>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Jetzt geben Sie auf dem Zielsystem, welches noch vor Beginn
      der Gerätesuche in DDB gelangt ist, ein:</para>

    <screen xmlns:xlink="http://www.w3.org/1999/xlink">Debugger("Boot flags requested debugger")
Stopped at Debugger+0x35: movb  $0, edata+0x51bc
<prompt xmlns:xlink="http://www.w3.org/1999/xlink">db&gt;</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">gdb</userinput></screen>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">DDB antwortet dann mit:</para>

    <screen xmlns:xlink="http://www.w3.org/1999/xlink">Next trap will enter GDB remote protocol mode</screen>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Jedesmal wenn Sie <command xmlns:xlink="http://www.w3.org/1999/xlink">gdb</command> eingeben, wird
      zwischen dem lokalen DDB und entfernten GDB umgeschaltet. Um
      einen nächsten Trap sofort zu erzwingen, geben Sie einfach
      <command xmlns:xlink="http://www.w3.org/1999/xlink">s</command> (step) ein. Ihr GDB auf dem Hostsystem
      erhält nun die Kontrolle über den Ziel-Kernel:</para>

    <screen xmlns:xlink="http://www.w3.org/1999/xlink">Remote debugging using /dev/cuaa0
Debugger (msg=0xf01b0383 "Boot flags requested debugger")
    at ../../i386/i386/db_interface.c:257
<prompt xmlns:xlink="http://www.w3.org/1999/xlink">(kgdb)</prompt></screen>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Sie können mit dieser Sitzung wie mit jeder anderen
      GDB-Sitzung umgehen, einschließlich vollem Zugriff auf die
      Quellen, Starten im gud-Modus innerhalb eines Emacs-Fensters
      (was Ihnen automatische Quelltext-Ausgabe in einem weiteren
      Emacs-Fenster bietet), usw.</para>
  </sect1>

  <sect1 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="kerneldebug-console">
    <title xmlns:xlink="http://www.w3.org/1999/xlink">Fehlersuche bei einem Konsolen-Treiber</title>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Da Sie nunmal einen Konsolen-Treiber benötigen, um DDB
      zu starten, ist alles ein wenig komplizierter, sobald der
      Konsolen-Treiber selbst versagt. Sie erinnern sich vielleicht an
      die Benutzung einer seriellen Konsole (entweder durch
      Verändern des Boot-Blocks oder Eingabe von
      <option xmlns:xlink="http://www.w3.org/1999/xlink">-h</option> an der
      <prompt xmlns:xlink="http://www.w3.org/1999/xlink">Boot:</prompt>-Eingabeaufforderung) und das
      Anschließen eines Standard-Terminals an Ihren ersten
      seriellen Port. DDB funktioniert auf jedem konfigurierten
      Konsolen-Treiber, auch auf einer seriellen Konsole.</para>
  </sect1>

  <sect1 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="kerneldebug-deadlocks">
    <title xmlns:xlink="http://www.w3.org/1999/xlink">Fehlersuche bei Deadlocks</title>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Sie erleben vielleicht mal sogenannte Deadlocks, wobei ein
      System aufhört, nützliche Arbeit zu machen. Um in
      einer solchen Situation einen hilfreichen Fehlerbericht zu
      liefern, benutzen Sie <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">ddb</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">4</manvolnum></citerefentry>, wie oben beschrieben.
      Hängen Sie die Ausgabe von <command xmlns:xlink="http://www.w3.org/1999/xlink">ps</command> und
      <command xmlns:xlink="http://www.w3.org/1999/xlink">trace</command> für verdächtige Prozesse an
      den Bericht an.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Falls möglich, versuchen Sie, weitere Untersuchungen
      anzustellen. Der Empfang der Ausgaben unten ist besonders dann
      nützlich, wenn Sie den Auslöser für die Blockade
      des Systems auf VFS-Ebene vermuten. Fügen Sie die folgenden
      Optionen

      <programlisting xmlns:xlink="http://www.w3.org/1999/xlink">makeoptions		DEBUG=-g
	options		INVARIANTS
	options		INVARIANT_SUPPORT
	options		WITNESS
	options		DEBUG_LOCKS
	options		DEBUG_VFS_LOCKS
	options		DIAGNOSTIC</programlisting>

      der Kernel-Konfigurationsdatei hinzu. Wenn die Blockade
      ausgelöst wird, stellen Sie, zusätzlich der Ausgabe
      vom <command xmlns:xlink="http://www.w3.org/1999/xlink">ps</command>-Befehl, die Informationen aus
      <command xmlns:xlink="http://www.w3.org/1999/xlink">show pcpu</command>, <command xmlns:xlink="http://www.w3.org/1999/xlink">show allpcpu</command>,
      <command xmlns:xlink="http://www.w3.org/1999/xlink">show locks</command>, <command xmlns:xlink="http://www.w3.org/1999/xlink">show alllocks</command>,
      <command xmlns:xlink="http://www.w3.org/1999/xlink">show lockedvnods</command> und
      <command xmlns:xlink="http://www.w3.org/1999/xlink">alltrace</command> bereit.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Um aussagekräftige Zurückverfolgungen von in
      Threads aufgeteilten Prozesse zu erhalten, benutzen Sie
      <command xmlns:xlink="http://www.w3.org/1999/xlink">thread thread-id</command>, um zum Thread-Stack zu
      wechseln und eine Zurückverfolgung mit
      <command xmlns:xlink="http://www.w3.org/1999/xlink">where</command> anzustellen.</para>
  </sect1>

  <sect1 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="kerneldebug-options">
    <title xmlns:xlink="http://www.w3.org/1999/xlink">Glossar der Kernel-Optionen zur Fehlersuche</title>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Dieser Abschnitt bietet ein kurzes Glossar der zur
      Kompilierzeit verfügbaren Kernel-Optionen, die die
      Fehlersuche unterstützen:</para>

    <itemizedlist xmlns:xlink="http://www.w3.org/1999/xlink">
      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink"><literal xmlns:xlink="http://www.w3.org/1999/xlink">options KDB</literal>: Kompiliert das
	  Kernel-Debugger-Framework ein. Wird von <literal xmlns:xlink="http://www.w3.org/1999/xlink">options
	  DDB</literal> und <literal xmlns:xlink="http://www.w3.org/1999/xlink">options GDB</literal>
	  benötigt. Kein oder nur geringer Leistungs-Overhead.
	  Standardmäßig wird bei einer Panic der Debugger
	  gestartet, anstatt automatisch neu zu starten.</para>
      </listitem>

      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink"><literal xmlns:xlink="http://www.w3.org/1999/xlink">options KDB_UNATTENDED</literal>: Setzt den
	  Standard des
	  <literal xmlns:xlink="http://www.w3.org/1999/xlink">debug.debugger_on_panic</literal>-sysctl-Werts auf
	  0, welcher regelt, ob der Debugger bei einer Panic gestartet
	  wird. Solange <literal xmlns:xlink="http://www.w3.org/1999/xlink">options KDB</literal> nicht in den
	  Kernel einkompiliert ist, wird bei einer Panic automatisch
	  neu gestartet; sobald es in den Kernel einkompiliert ist,
	  wird standardmäßig der Debugger gestartet,
	  solange <literal xmlns:xlink="http://www.w3.org/1999/xlink">options KDB_UNATTENDED</literal> nicht
	  einkompiliert ist. Falls Sie den Kernel-Debugger in den
	  Kernel einkompiliert lassen wollen, aber möchten, dass
	  das System neu startet, wenn Sie nicht zur Stelle sind, um
	  den Debugger zur Diagnose zu benutzen, wählen Sie diese
	  Option.</para>
      </listitem>

      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink"><literal xmlns:xlink="http://www.w3.org/1999/xlink">options KDB_TRACE</literal>: Setzt den Standard
	  des <literal xmlns:xlink="http://www.w3.org/1999/xlink">debug.trace_on_panic</literal>-sysctl-Werts auf
	  1, welcher regelt, ob der Debugger bei einer Panic
	  automatisch eine Stack-Ablaufverfolgung ausgibt. Besonders
	  wenn der Kernel mit <literal xmlns:xlink="http://www.w3.org/1999/xlink">KDB_UNATTENDED</literal>
	  läuft, kann dies hilfreich sein, um grundlegende
	  Informationen zur Fehlersuche auf der seriellen oder
	  Firewire-Konsole zu erhalten, während immer noch zur
	  Wiederherstellung neu gestartet wird.</para>
      </listitem>

      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink"><literal xmlns:xlink="http://www.w3.org/1999/xlink">options DDB</literal>: Kompiliert die
	  Unterstützung für den Konsolen-Debugger DDB ein.
	  Dieser interaktive Debugger läuft auf was auch immer
	  die aktive Konsole des Systems auf niedrigster Ebene ist,
	  dazu gehören die Video-, serielle und Firewire-Konsole.
	  Er bietet grundlegende, eingebaute Möglichkeiten zur
	  Fehlersuche wie zum Beispiel das Erstellen von
	  Stack-Ablaufverfolgungen, das Auflisten von Prozessen und
	  Threads, das Ablegen des Lock-, VM- und Dateisystemstatus
	  und die Verwaltung des Kernel-Speichers. DDB benötigt
	  keine Software, die auf einem zweiten System läuft,
	  oder die Fähigkeit, einen Kernspeicherauszug oder
	  Kernel-Symbole zur vollen Fehlersuche zu erzeugen und bietet
	  detaillierte Fehlerdiagnose des Kernels zur Laufzeit. Viele
	  Fehler können allein unter Benutzung der DDB-Ausgabe
	  untersucht werden. Diese Option hängt von
	  <literal xmlns:xlink="http://www.w3.org/1999/xlink">options KDB</literal> ab.</para>
      </listitem>

      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink"><literal xmlns:xlink="http://www.w3.org/1999/xlink">options GDB</literal>: Kompiliert die
	  Unterstützung für den Debugger GDB ein, welcher
	  von einem entfernten System aus über ein serielles
	  Kabel oder Firewire agieren kann. Wenn der Debugger
	  gestartet ist, kann GDB dazu verwendet werden, um
	  Struktur-Inhalte einzusehen, Stack-Ablaufverfolgungen zu
	  erzeugen, usw. Bei manchem Kernel-Status ist der Zugriff
	  ungeschickter als mit DDB, welcher dazu in der Lage ist,
	  nützliche Zusammenfassungen des Kernel-Status
	  automatisch zu erstellen wie zum Beispiel das automatische
	  Abgehen der Lock-Fehlersuche oder der Strukturen zur
	  Kernel-Speicher-Verwaltung, und es wird ein zweites System
	  benötigt. Auf der anderen Seite verbindet GDB
	  Informationen aus den Kernel-Quellen mit vollständigen
	  Symbolen zur Fehlersuche, erkennt komplette
	  Datenstrukturdefinitionen, lokale Variablen und ist in
	  Skripten einsetzbar. Diese Option hängt von
	  <literal xmlns:xlink="http://www.w3.org/1999/xlink">options KDB</literal> ab, ist aber nicht zur
	  Benutzung von GDB auf einem Kernel-Kernspeicherauszug
	  nötig.</para>
      </listitem>

      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink"><literal xmlns:xlink="http://www.w3.org/1999/xlink">options BREAK_TO_DEBUGGER</literal>,
	  <literal xmlns:xlink="http://www.w3.org/1999/xlink">options ALT_BREAK_TO_DEBUGGER</literal>: Erlaubt
	  ein Abbruch- oder Alternativ-Signal auf der Konsole, um in
	  den Debugger zu gelangen. Falls sich das System ohne eine
	  Panic aufhängt, ist dies ein nützlicher Weg, um
	  den Debugger zu erreichen. Aufgrund der aktuellen
	  Verriegelung durch den Kernel ist ein Abbruch-Signal, das
	  auf einer seriellen Konsole erzeugt wurde, deutlich
	  vertrauenswürdiger beim Gelangen in den Debugger und
	  wird allgemein empfohlen. Diese Option hat kaum oder keine
	  Auswirkung auf den Durchsatz.</para>
      </listitem>

      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink"><literal xmlns:xlink="http://www.w3.org/1999/xlink">options INVARIANTS</literal>: Kompiliert eine
	  große Anzahl an Aussageprüfungen und -tests
	  (Assertion-Checks und -Tests) ein, welche ständig die
	  Intaktheit der Kernel-Datenstrukturen und die Invarianten
	  der Kernel-Algorithmen prüfen. Diese Tests können
	  aufwendig sein und sind deswegen nicht von Anfang an
	  einkompiliert, aber helfen nützliches "fail
	  stop"-Verhalten, wobei bestimmte Gruppen nicht
	  erwünschten Verhaltens den Debugger öffnen, bevor
	  Beschädigungen an Kernel-Daten auftreten,
	  bereitzustellen, welches es einfacher macht, diese auf
	  Fehler hin zu untersuchen. Die Tests beinhalten Säubern
	  von Speicher und use-after-free-Prüfungen, was eine der
	  bedeutenderen Quellen von Overhead ist. Diese Option
	  hängt von <literal xmlns:xlink="http://www.w3.org/1999/xlink">options INVARIANT_SUPPORT</literal>
	  ab.</para>
      </listitem>

      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink"><literal xmlns:xlink="http://www.w3.org/1999/xlink">options INVARIANT_SUPPORT</literal>: Viele der
	  in <literal xmlns:xlink="http://www.w3.org/1999/xlink">options INVARIANTS</literal> vorhandenen Tests
	  benötigen veränderte Datenstrukturen und
	  zusätzliche Kernel-Symbole, die festgelegt werden
	  müssen.</para>
      </listitem>

      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink"><literal xmlns:xlink="http://www.w3.org/1999/xlink">options WITNESS</literal>: Diese Option
	  aktiviert Verfolgung und Prüfung von Lock-Anforderungen
	  zur Laufzeit und ist als Werkzeug für die
	  Deadlock-Diagnose von unschätzbarem Wert. WITNESS
	  pflegt ein Diagramm mit erworbenen Lock-Anträgen nach
	  Typ geordnet und prüft bei jedem Erwerb nach Zyklen
	  (implizit oder explizit). Falls ein Zyklus entdeckt wird,
	  werden eine Warnung und eine Stack-Ablaufverfolgung erzeugt
	  und als Hinweis, dass ein möglicher Deadlock gefunden
	  wurde, auf der Konsole ausgegeben. WITNESS wird
	  benötigt, um die DDB-Befehle <command xmlns:xlink="http://www.w3.org/1999/xlink">show
	  locks</command>, <command xmlns:xlink="http://www.w3.org/1999/xlink">show witness</command> und
	  <command xmlns:xlink="http://www.w3.org/1999/xlink">show alllocks</command> benutzen zu können.
	  Diese Debug-Option hat einen bedeutenden Leistung-Overhead,
	  welcher ein ein wenig durch Benutzung von <literal xmlns:xlink="http://www.w3.org/1999/xlink">options
	  WITNESS_SKIPSPIN</literal> gemildert werden kann.
	  Detaillierte Dokumentation kann in <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">witness</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">4</manvolnum></citerefentry> gefunden
	  werden.</para>
      </listitem>

      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink"><literal xmlns:xlink="http://www.w3.org/1999/xlink">options WITNESS_SKIPSPIN</literal>: Deaktiviert
	  die Prüfung von Spinlock-Lock-Anforderungen mit WITNESS
	  zur Laufzeit. Da Spinlocks am häufigsten im Scheduler
	  angefordert werden und Scheduler-Ereignisse oft auftreten,
	  kann diese Option Systeme, die mit WITNESS laufen, merklich
	  beschleunigen. Diese Option hängt von <literal xmlns:xlink="http://www.w3.org/1999/xlink">options
	  WITNESS</literal> ab.</para>
      </listitem>

      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink"><literal xmlns:xlink="http://www.w3.org/1999/xlink">options WITNESS_KDB</literal>: Setzt den
	  Standard des
	  <literal xmlns:xlink="http://www.w3.org/1999/xlink">debug.witness.kdb</literal>-sysctl-Werts auf 1, was
	  bewirkt, dass WITNESS den Debugger aufruft, sobald eine
	  Lock-Anforderungsverletzung vorliegt, anstatt einfach nur
	  eine Warnung auszugeben. Diese Option hängt von
	  <literal xmlns:xlink="http://www.w3.org/1999/xlink">options WITNESS</literal> ab.</para>
      </listitem>

      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink"><literal xmlns:xlink="http://www.w3.org/1999/xlink">options SOCKBUF_DEBUG</literal>: Führt
	  umfassende Beschaffenheitsprüfungen in Socket-Puffern
	  durch, was nützlich zur Fehlersuche bei Socket-Fehlern
	  und Anzeichen für Ressourceblockaden (Race) in
	  Protokollen und Gerätetreibern, die mit Sockets
	  arbeiten, sein kann. Diese Option hat bedeutende Auswirkung
	  auf die Netzwerkleistung und kann die Zeitverhältnisse
	  bei gegenseitiger Ressourceblockade in Gerätetreibern
	  ändern.</para>
      </listitem>

      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink"><literal xmlns:xlink="http://www.w3.org/1999/xlink">options DEBUG_VFS_LOCKS</literal>: Verfolgt
	  Lock-Anforderungs-Einzelheiten bei lockmgr/vnode-Locks, was
	  die Menge der Informationen, die von <command xmlns:xlink="http://www.w3.org/1999/xlink">show
	  lockdevnods</command> in DDB angezeigt werden,
	  vergrößert. Diese Option hat messbare Auswirkung
	  auf die Leistung.</para>
      </listitem>

      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink"><literal xmlns:xlink="http://www.w3.org/1999/xlink">options DEBUG_MEMGUARD</literal>: Ein Ersatz
	  für die Kernel-Speicher-Zuweisung durch <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">malloc</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">9</manvolnum></citerefentry>,
	  die das VM-System benutzt, um Lese- und Schreibzugriffe auf
	  zugewiesenen Speicher nach der Freigabe zu entdecken.
	  Details können in <citerefentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">memguard</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">9</manvolnum></citerefentry> gefunden werden.
	  Diese Option hat bedeutende Auswirkung auf die Leistung,
	  aber kann sehr nützlich bei der Fehlersuche sein, wenn
	  Kernel-Speicher-Beschädigungen durch Fehler verursacht
	  werden.</para>
      </listitem>

      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink"><literal xmlns:xlink="http://www.w3.org/1999/xlink">options DIAGNOSTIC</literal>: Aktiviert
	  zusätzliche, aufwendigere Diagnosetests analog zu
	  <literal xmlns:xlink="http://www.w3.org/1999/xlink">options INVARIANTS</literal>.</para>
      </listitem>
    </itemizedlist>
  </sect1>
</chapter>

  </part>

  <part xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="architectures">
    <title xmlns:xlink="http://www.w3.org/1999/xlink">Architekturen</title>

    
<!--
     The FreeBSD Documentation Project
     The FreeBSD German Documentation Project

     This file is automatically generated. Please do not make commits
     to this file. Updates should be sent to the author :

     G. Adam Stanislav (adam@redprince.net)

     This chapter is an exception to our general rule, and the author
     retains the copyright. Among other things, this means that this
     chapter should not be included in any printed version of the
     Developer's Handbook without Adam's explicit permission.

     Eventually we will have to replace this chapter or convince the
     author to assign us the copyright. For now, it is valuable
     content so it should stay.

     $FreeBSD$
     $FreeBSDde: de-docproj/books/developers-handbook/x86/chapter.xml,v 1.24 2010/12/15 19:03:52 bcr Exp $
     basiert auf: 1.19
-->
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="x86">
  <title xmlns:xlink="http://www.w3.org/1999/xlink">x86-Assembler-Programmierung</title>

  <para xmlns:xlink="http://www.w3.org/1999/xlink"><emphasis xmlns:xlink="http://www.w3.org/1999/xlink">Dieses Kapitel wurde geschrieben von
    G. Adam Stanislav.</emphasis></para>

  <sect1 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="x86-intro">
    <info><title xmlns:xlink="http://www.w3.org/1999/xlink">Synopsis</title>
      <authorgroup xmlns:xlink="http://www.w3.org/1999/xlink">
	<author xmlns:xlink="http://www.w3.org/1999/xlink"><personname xmlns:xlink="http://www.w3.org/1999/xlink"><firstname xmlns:xlink="http://www.w3.org/1999/xlink">Hagen</firstname><surname xmlns:xlink="http://www.w3.org/1999/xlink">Kühl</surname></personname><contrib xmlns:xlink="http://www.w3.org/1999/xlink">Übersetzt von </contrib></author>
      </authorgroup>
    </info>

    

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Assembler-Programmierung unter <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark> ist höchst
      undokumentiert. Es wird allgemein angenommen, dass niemand sie
      jemals benutzen will, da <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark>-Systeme auf verschiedenen
      Mikroprozessoren laufen, und man deshalb aus Gründen der
      Portabilität alles in C schreiben sollte.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">In Wirklichkeit ist die Portabilität von C
      größtenteils ein Mythos. Auch C-Programme müssen
      angepasst werden, wenn man sie von einem <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark> auf ein anderes
      portiert, egal auf welchem Prozessor jedes davon läuft.
      Typischerweise ist ein solches Programm voller Bedingungen, die
      unterscheiden für welches System es kompiliert wird.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Sogar wenn wir glauben, dass jede <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark>-Software in C, oder
      einer anderen High-Level-Sprache geschrieben werden sollte,
      brauchen wir dennoch Assembler-Programmierer: Wer sonst sollte
      den Abschnitt der C-Bibliothek schreiben, die auf den Kernel
      zugreift?</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">In diesem Kapitel möchte ich versuchen zu zeigen, wie
      man Assembler-Sprache verwenden kann, um <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark>-Programme,
      besonders unter FreeBSD, zu schreiben.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Dieses Kapitel erklärt nicht die Grundlagen der
      Assembler-Sprache. Zu diesem Thema gibt es bereits genug Quellen
      (einen vollständigen Online-Kurs finden Sie in Randall
      Hydes <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://webster.cs.ucr.edu/">Art of Assembly
      Language</link>; oder falls Sie ein gedrucktes Buch bevorzugen,
      können Sie einen Blick auf Jeff Duntemanns <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://www.int80h.org/cgi-bin/isbn?isbn=0471375233">Assembly
      Language Step-by-Step</link> werfen). Jedenfalls sollte jeder
      Assembler-Programmierer nach diesem Kapitel schnell und
      effizient Programme für FreeBSD schreiben
      können.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Copyright © 2000-2001 G. Adam Stanislav. All rights
      reserved.</para>
  </sect1>

  <sect1 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="x86-the-tools">
    <info><title xmlns:xlink="http://www.w3.org/1999/xlink">Die Werkzeuge</title>
      <authorgroup xmlns:xlink="http://www.w3.org/1999/xlink">
	<author xmlns:xlink="http://www.w3.org/1999/xlink"><personname xmlns:xlink="http://www.w3.org/1999/xlink"><firstname xmlns:xlink="http://www.w3.org/1999/xlink">Hagen</firstname><surname xmlns:xlink="http://www.w3.org/1999/xlink">Kühl</surname></personname><contrib xmlns:xlink="http://www.w3.org/1999/xlink">Übersetzt von </contrib></author>
      </authorgroup>
    </info>

    

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="x86-the-assembler">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Der Assembler</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Das wichtigste Werkzeug der Assembler-Programmierung ist
	der Assembler, diese Software übersetzt Assembler-Sprache
	in Maschinencode.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Für FreeBSD stehen zwei verschiedene Assembler zur
	Verfügung. Der erste ist
	<citerefentry xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">as</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">1</manvolnum></citerefentry>,
	der die traditionelle <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark>-Assembler-Sprache verwendet.
	Dieser ist Teil des Systems.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Der andere ist
	<application xmlns:xlink="http://www.w3.org/1999/xlink">/usr/ports/devel/nasm</application>. Dieser
	benutzt die Intel-Syntax und sein Vorteil ist, dass es Code
	fü viele Vetriebssysteme übersetzen kann. Er muss
	gesondert installiert werden, aber ist völlig
	frei.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">In diesem Kapitel wird die
	<application xmlns:xlink="http://www.w3.org/1999/xlink">nasm</application>-Syntax verwendet. Einerseits
	weil es die meisten Assembler-Programmierer, die von anderen
	Systemen zu FreeBSD kommen, leichter verstehen werden. Und
	offen gesagt, weil es das ist, was ich gewohnt bin.</para>
    </sect2>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="x86-the-linker">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Der Linker</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Die Ausgabe des Assemblers muss, genau wie der Code jedes
	Compilers, gebunden werden, um eine ausführbare Datei zu
	bilden.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Der Linker
	<citerefentry xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">ld</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">1</manvolnum></citerefentry>
	ist der Standard und Teil von FreeBSD. Er funktioniert mit dem
	Code beider Assembler.</para>
    </sect2>
  </sect1>

  <sect1 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="x86-system-calls">
    <info><title xmlns:xlink="http://www.w3.org/1999/xlink">Systemaufrufe</title>
      <authorgroup xmlns:xlink="http://www.w3.org/1999/xlink">
	<author xmlns:xlink="http://www.w3.org/1999/xlink"><personname xmlns:xlink="http://www.w3.org/1999/xlink"><firstname xmlns:xlink="http://www.w3.org/1999/xlink">Hagen</firstname><surname xmlns:xlink="http://www.w3.org/1999/xlink">Kühl</surname></personname><contrib xmlns:xlink="http://www.w3.org/1999/xlink">Übersetzt von </contrib></author>
      </authorgroup>
    </info>

    

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="x86-default-calling-convention">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Standard-Aufrufkonvention</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Standardmäßig benutzt der FreeBSD-Kernel die
	C-Aufrufkonvention. Weiterhin wird, obwohl auf den Kernel
	durch <function xmlns:xlink="http://www.w3.org/1999/xlink" role="opcode">int 80h</function> zugegriffen
	wird, angenommen, dass das Programm eine Funktion aufruft, die
	<function xmlns:xlink="http://www.w3.org/1999/xlink" role="opcode">int 80h</function> verwendet, anstatt
	<function xmlns:xlink="http://www.w3.org/1999/xlink" role="opcode">int 80h</function> direkt
	aufzurufen.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Diese Konvention ist sehr praktisch und der
	<trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">Microsoft</trademark>-Konvention von <acronym xmlns:xlink="http://www.w3.org/1999/xlink"><trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">MS-DOS</trademark></acronym>
	überlegen. Warum? Weil es die <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark>-Konvention jedem
	Programm, egal in welcher Sprache es geschrieben ist, erlaubt
	auf den Kernel zuzugreifen.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Ein Assembler-Programm kann das ebenfalls. Beispielsweise
	könnten wir eine Datei öffnen:</para>

      <programlisting xmlns:xlink="http://www.w3.org/1999/xlink">kernel:
	int	80h	; Call kernel
	ret

open:
	push	dword mode
	push	dword flags
	push	dword path
	mov	eax, 5
	call	kernel
	add	esp, byte 12
	ret</programlisting>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Das ist ein sehr sauberer und portabler Programmierstil.
	Wenn Sie das Programm auf ein anderes <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark> portieren, das
	einen anderen Interrupt oder eie andere Art der
	Parameterübergabe verwendet, müssen sie nur die
	Prozedur kernel ändern.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Aber Assembler-Programmierer lieben es Taktzyklen zu
	schinden. Das obige Beispiel benötigt eine <function xmlns:xlink="http://www.w3.org/1999/xlink" role="opcode">call/ret</function>-Kombination. Das können
	wir entfernen, indem wir einen weiteren Parameter mit
	<function xmlns:xlink="http://www.w3.org/1999/xlink" role="opcode">push</function> übergeben:</para>

      <programlisting xmlns:xlink="http://www.w3.org/1999/xlink">open:
	push	dword mode
	push	dword flags
	push	dword path
	mov	eax, 5
	push	eax		; Or any other dword
	int	80h
	add	esp, byte 16</programlisting>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Die Konstante <constant xmlns:xlink="http://www.w3.org/1999/xlink">5</constant>, die wir in <varname xmlns:xlink="http://www.w3.org/1999/xlink" role="register">EAX</varname> ablegen, identifiziert die
	Kernel-Funktion, die wir aufrufen. In diesem Fall ist das
	<function xmlns:xlink="http://www.w3.org/1999/xlink" role="syscall">open</function>.</para>
    </sect2>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="x86-alternate-calling-convention">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Alternative Aufruf-Konvention</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">FreeBSD ist ein extrem flexibles System. Es bietet noch
	andere Wege, um den Kernel aufzurufen. Damit diese
	funktionieren muss allerdings die Linux-Emulation installiert
	sein.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Linux ist ein <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark>-artiges System. Allerdings verwendet
	dessen Kernel die gleiche Systemaufruf-Konvention, bei der
	Parameter in Registern abgelegt werden, wie
	<acronym xmlns:xlink="http://www.w3.org/1999/xlink"><trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">MS-DOS</trademark></acronym>. Genau wie bei der
	<trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark>-Konvention wird die Nummer der Funktion in <varname xmlns:xlink="http://www.w3.org/1999/xlink" role="register">EAX</varname> abgelegt. Allerdings werden die
	Parameter nicht auf den Stack gelegt, sondern in die Register
	<varname xmlns:xlink="http://www.w3.org/1999/xlink" role="register">EBX, ECX, EDX, ESI, EDI,
	EBP</varname>:</para>

      <programlisting xmlns:xlink="http://www.w3.org/1999/xlink">open:
	mov	eax, 5
	mov	ebx, path
	mov	ecx, flags
	mov	edx, mode
	int	80h</programlisting>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Diese Konvention hat einen großen Nachteil
	gegenüber der von <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark>, was die
	Assembler-Programmierung angeht: Jedesmal, wenn Sie einen
	Kernel-Aufruf machen, müssen Sie die Register <function xmlns:xlink="http://www.w3.org/1999/xlink" role="opcode">push</function>en und sie später <function xmlns:xlink="http://www.w3.org/1999/xlink" role="opcode">pop</function>en. Das macht Ihren Code
	unförmiger und langsamer. Dennoch lässt FreeBSD
	ihnen die Wahl.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Wenn Sie sich für die Linux-Konvention entscheiden,
	müssen Sie es das System wissen lassen. Nachdem ihr
	Programm übersetzt und gebunden wurde, müssen Sie
	die ausführbare Datei kennzeichnen:</para>

      <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt>
	<userinput xmlns:xlink="http://www.w3.org/1999/xlink">brandelf -t Linux
	filename</userinput></screen>
    </sect2>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="x86-use-geneva">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Welche Konvention Sie verwenden sollten</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Wenn Sie speziell für FreeBSD programmieren, sollten
	Sie die <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark>-Konvention verwenden: Diese ist schneller, Sie
	können globale Variablen in Registern ablegen, Sie
	müssen die ausführbare Datei nicht kennzeichnen und
	Sie erzwingen nicht die Installation der Linux-Emulation auf
	dem Zielsystem.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Wenn Sie portablen Programmcode erzeugen wollen, der auch
	unter Linux funktioniert, wollen Sie den FreeBSD-Nutzern
	vielleicht dennoch den effizientesten Programmcode bieten, der
	möglich ist. Ich werde Ihnen zeigen, wie Sie das
	erreichen können, nachdem ich die Grundlagen erklärt
	habe.</para>
    </sect2>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="x86-call-numbers">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Aufruf-Nummern</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Um dem Kernel mitzuteilen welchen Dienst Sie aufrufen,
	legen Sie dessen Nummer in <varname xmlns:xlink="http://www.w3.org/1999/xlink" role="register">EAX</varname> ab. Natürlich müssen
	Sie dazu wissen welche Nummer die Richtige ist.</para>

      <sect3 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="x86-the-syscalls-file">
	<title xmlns:xlink="http://www.w3.org/1999/xlink">Die Datei <filename xmlns:xlink="http://www.w3.org/1999/xlink">syscalls</filename></title>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Die Nummer der Funktionen sind in der Datei
	  <filename xmlns:xlink="http://www.w3.org/1999/xlink">syscalls</filename> aufgeführt. Mittels
	  <command xmlns:xlink="http://www.w3.org/1999/xlink">locate syscalls</command> finden Sie diese in
	  verschiedenen Formaten, die alle auf die gleiche Weise aus
	  <filename xmlns:xlink="http://www.w3.org/1999/xlink">syscalls.master</filename> erzeugt werden.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Die Master-Datei für die
	  <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark>-Standard-Aufrufkonvention finden sie unter
	  <filename xmlns:xlink="http://www.w3.org/1999/xlink">/usr/src/sys/kern/syscalls.master</filename>.
	  Falls Sie die andere Konvention, die im
	  Linux-Emulations-Modus implementiert ist, verwenden
	  möchten, lesen Sie bitte
	  <filename xmlns:xlink="http://www.w3.org/1999/xlink">/usr/src/sys/i386/linux/syscalls.master</filename>.</para>

	<note xmlns:xlink="http://www.w3.org/1999/xlink"><para xmlns:xlink="http://www.w3.org/1999/xlink">FreeBSD und Linux unterscheiden sich nicht nur in
	  den Aufrufkonventionen, sie haben teilweise auch
	  verschiedene Nummern für die gleiche
	  Funktion.</para></note>

	<para xmlns:xlink="http://www.w3.org/1999/xlink"><filename xmlns:xlink="http://www.w3.org/1999/xlink">syscalls.master</filename> beschreibt, wie der
	  Aufruf gemacht werden muss:</para>

	<programlisting xmlns:xlink="http://www.w3.org/1999/xlink">0	STD	NOHIDE	{ int nosys(void); } syscall nosys_args int
1	STD	NOHIDE	{ void exit(int rval); } exit rexit_args void
2	STD	POSIX	{ int fork(void); }
3	STD	POSIX	{ ssize_t read(int fd, void *buf, size_t nbyte); }
4	STD	POSIX	{ ssize_t write(int fd, const void *buf, size_t nbyte); }
5	STD	POSIX	{ int open(char *path, int flags, int mode); }
6	STD	POSIX	{ int close(int fd); }
etc...</programlisting>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">In der ersten Spalte steht die Nummer, die in <varname xmlns:xlink="http://www.w3.org/1999/xlink" role="register">EAX</varname> abgelegt werden muss.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Die Spalte ganz rechts sagt uns welche Parameter wir
	  <function xmlns:xlink="http://www.w3.org/1999/xlink" role="opcode">push</function>en müssen. Die
	  Reihenfolge ist dabei <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">von rechts nach
	  links</emphasis>.</para>

	<informalexample xmlns:xlink="http://www.w3.org/1999/xlink"><para xmlns:xlink="http://www.w3.org/1999/xlink">Um beispielsweise eine Datei mittels
	  <function xmlns:xlink="http://www.w3.org/1999/xlink">open</function> zu öffnen, müssen wir
	  zuerst den <varname xmlns:xlink="http://www.w3.org/1999/xlink">mode</varname> auf den Stack <function xmlns:xlink="http://www.w3.org/1999/xlink" role="opcode">push</function>en, danach die
	  <varname xmlns:xlink="http://www.w3.org/1999/xlink">flags</varname>, dann die Adresse an der der
	  <varname xmlns:xlink="http://www.w3.org/1999/xlink">path</varname> gespeichert
	  ist.</para></informalexample>

      </sect3>
    </sect2>
  </sect1>

  <sect1 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="x86-return-values">
    <info><title xmlns:xlink="http://www.w3.org/1999/xlink">Rückgabewerte</title>
      <authorgroup xmlns:xlink="http://www.w3.org/1999/xlink">
	<author xmlns:xlink="http://www.w3.org/1999/xlink"><personname xmlns:xlink="http://www.w3.org/1999/xlink"><firstname xmlns:xlink="http://www.w3.org/1999/xlink">Hagen</firstname><surname xmlns:xlink="http://www.w3.org/1999/xlink">Kühl</surname></personname><contrib xmlns:xlink="http://www.w3.org/1999/xlink">Übersetzt von </contrib></author>
      </authorgroup>
    </info>

    

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Ein Systemaufruf wäre meistens nicht sehr
      nützlich, wenn er nicht irgendeinen Wert zurückgibt:
      Beispielsweise den Dateideskriptor einer geöffneten Datei,
      die Anzahl an Bytes die in einen Puffer gelesen wurde, die
      Systemzeit, etc.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Außerdem muss Sie das System informieren, falls ein
      Fehler auftritt: Wenn eine Datei nicht existiert, die
      Systemressourcen erschöpft sind, wir ein ungültiges
      Argument übergeben haben, etc.</para>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="x86-man-pages">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Manualpages</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Der herkömmliche Ort, um nach Informationen über
	verschiedene Systemaufrufe unter <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark>-Systemen zu suchen,
	sind die Manualpages. FreeBSD beschreibt seine Systemaufrufe
	in Abschnitt 2, manchmal auch Abschnitt 3.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">In
	<citerefentry xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">open</refentrytitle><manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">2</manvolnum></citerefentry>
	steht beispielsweise:</para>

      <blockquote xmlns:xlink="http://www.w3.org/1999/xlink"><para xmlns:xlink="http://www.w3.org/1999/xlink">Falls erfolgreich, gibt
	<function xmlns:xlink="http://www.w3.org/1999/xlink">open()</function> einen nicht negativen Integerwert,
	als Dateideskriptor bezeichnet, zurück. Es gibt
	<varname xmlns:xlink="http://www.w3.org/1999/xlink">-1</varname> im Fehlerfall zurück und setzt
	<varname xmlns:xlink="http://www.w3.org/1999/xlink">errno</varname> um den Fehler
	anzuzeigen.</para></blockquote>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Ein Assembler-Programmierer, der neu bei <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark> und
	FreeBSD ist, wird sich sofort fragen: Wo finde ich
	<varname xmlns:xlink="http://www.w3.org/1999/xlink">errno</varname> und wie erreiche ich es?</para>

      <note xmlns:xlink="http://www.w3.org/1999/xlink"><para xmlns:xlink="http://www.w3.org/1999/xlink">Die Information der Manualpage bezieht sich auf
	C-Programme. Der Assembler-Programmierer benötigt
	zusätzliche Informationen.</para></note>
    </sect2>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="x86-where-return-values">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Wo sind die Rückgabewerde?</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Leider gilt: Es kommt darauf an... Für die meisten
	Systemaufrufe liegt er in <varname xmlns:xlink="http://www.w3.org/1999/xlink" role="register">EAX</varname>, aber nicht für alle. Eine
	gute Daumenregel, wenn man zum ersten Mal mit einem
	Systemaufruf arbeitet, ist in <varname xmlns:xlink="http://www.w3.org/1999/xlink" role="register">EAX</varname> nach dem Rückgabewert zu
	suchen. Wenn er nicht dort ist, sind weitere Untersuchungen
	nötig.</para>

      <note xmlns:xlink="http://www.w3.org/1999/xlink"><para xmlns:xlink="http://www.w3.org/1999/xlink">Mir ist ein Systemaufruf bekannt, der den
	Rückgabewert in <varname xmlns:xlink="http://www.w3.org/1999/xlink" role="register">EDX</varname>
	ablegt: <function xmlns:xlink="http://www.w3.org/1999/xlink" role="syscall">SYS_fork</function> Alle
	anderen mit denen ich bisher gearbeitet habe verwenden
	<varname xmlns:xlink="http://www.w3.org/1999/xlink" role="register">EAX</varname>. Allerdings habe ich
	noch nicht mit allen gearbeitet.</para></note>

      <tip xmlns:xlink="http://www.w3.org/1999/xlink"><para xmlns:xlink="http://www.w3.org/1999/xlink">Wenn Sie die Antwort weder hier, noch irgendwo anders
	finden, studieren Sie den Quelltext von
	<application xmlns:xlink="http://www.w3.org/1999/xlink">libc</application> und sehen sich an, wie es mit
	dem Kernel zusammenarbeitet.</para></tip>
    </sect2>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="x86-where-errno">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Wo ist <varname xmlns:xlink="http://www.w3.org/1999/xlink">errno</varname>?</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Tatsächlich, nirgendwo...</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink"><varname xmlns:xlink="http://www.w3.org/1999/xlink">errno</varname> ist ein Teil der Sprache C, nicht
	des <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark>-Kernels. Wenn man direkt auf Kernel-Dienste
	zugreift, wird der Fehlercode in <varname xmlns:xlink="http://www.w3.org/1999/xlink" role="register">EAX</varname> zurückgegeben, das selbe
	Register in dem der Rückgabewert, bei einem erfolgreichen
	Aufruf landet.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Das macht auch Sinn. Wenn kein Fehler auftritt, gibt es
	keinen Fehlercode. Wenn ein Fehler auftritt, gibt es keinen
	Rückgabewert. Ein einziges Register kann also beides
	enthalten.</para>
    </sect2>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="x86-how-to-know-error">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Feststellen, dass ein Fehler aufgetreten ist</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Wenn Sie die Standard FreeBSD-Aufrufkonvention verwenden
	wird das <varname xmlns:xlink="http://www.w3.org/1999/xlink" role="register">carry flag</varname>
	gelöscht wenn der Aufruf erfolgreich ist und gesetzt wenn
	ein Fehler auftritt.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Wenn Sie den Linux-Emulationsmodus verwenden ist der
	vorzeichenbehaftete Wert in <varname xmlns:xlink="http://www.w3.org/1999/xlink" role="register">EAX</varname> nicht negativ, bei einem
	erfolgreichen Aufruf. Wenn ein Fehler auftritt ist der Wert
	negativ, also <varname xmlns:xlink="http://www.w3.org/1999/xlink">-errno</varname>.</para>
    </sect2>
  </sect1>

  <sect1 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="x86-portable-code">
    <info><title xmlns:xlink="http://www.w3.org/1999/xlink">Portablen Code erzeugen</title>
      <authorgroup xmlns:xlink="http://www.w3.org/1999/xlink">
	<author xmlns:xlink="http://www.w3.org/1999/xlink"><personname xmlns:xlink="http://www.w3.org/1999/xlink"><firstname xmlns:xlink="http://www.w3.org/1999/xlink">Hagen</firstname><surname xmlns:xlink="http://www.w3.org/1999/xlink">Kühl</surname></personname><contrib xmlns:xlink="http://www.w3.org/1999/xlink">Übersetzt von </contrib></author>
      </authorgroup>
    </info>

    

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Portabilität ist im Allgemeinen keine Stärke der
      Assembler-Programmierung. Dennoch ist es, besonders mit
      <application xmlns:xlink="http://www.w3.org/1999/xlink">nasm</application>, möglich
      Assembler-Programme für verschiedene Plattformen zu
      schreiben. Ich selbst habe bereits Assembler-Bibliotheken
      geschrieben die auf so unterschiedlichen Systemen wie <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">Windows</trademark>
      und FreeBSD übersetzt werden können.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Das ist um so besser möglich, wenn Ihr Code auf zwei
      Plattformen laufen soll , die, obwohl sie verschieden sind, auf
      ähnlichen Architekturen basieren.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Beispielsweise ist FreeBSD ein <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark>, während Linux
      <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark>-artig ist. Ich habe bisher nur drei Unterschiede zwischen
      beiden (aus Sicht eines Assembler-Programmierers) erwähnt:
      Die Aufruf-Konvention, die Funktionsnummern und die Art der
      Übergabe von Rückgabewerten.</para>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="x86-deal-with-function-numbers">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Mit Funktionsnummern umgehen</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">In vielen Fällen sind die Funktionsnummern die
	selben. Allerdings kann man auch wenn sie es nicht sind
	leicht mit diesem Problem umgehen: Anstatt die Nummern in
	Ihrem Code zu verwenden, benutzen Sie Konstanten, die Sie
	abhängig von der Zielarchitektur unterschiedlich
	definieren:</para>

      <programlisting xmlns:xlink="http://www.w3.org/1999/xlink">%ifdef	LINUX
%define	SYS_execve	11
%else
%define	SYS_execve	59
%endif</programlisting>
    </sect2>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="x86-deal-with-geneva">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Umgang mit Konventionen</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Sowohl die Aufrufkonvention, als auch die
	Rückgabewerte (das <varname xmlns:xlink="http://www.w3.org/1999/xlink">errno</varname> Problem) kann
	man mit Hilfe von Makros lösen:</para>

      <programlisting xmlns:xlink="http://www.w3.org/1999/xlink">%ifdef	LINUX

%macro	system	0
	call	kernel
%endmacro

align 4
kernel:
	push	ebx
	push	ecx
	push	edx
	push	esi
	push	edi
	push	ebp

	mov	ebx, [esp+32]
	mov	ecx, [esp+36]
	mov	edx, [esp+40]
	mov	esi, [esp+44]
	mov	ebp, [esp+48]
	int	80h

	pop	ebp
	pop	edi
	pop	esi
	pop	edx
	pop	ecx
	pop	ebx

	or	eax, eax
	js	.errno
	clc
	ret

.errno:
	neg	eax
	stc
	ret

%else

%macro	system	0
	int	80h
%endmacro

%endif</programlisting>
    </sect2>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="x86-deal-with-other-portability">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Umgang mit anderen
	Portabilitätsangelegenheiten</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Die oben genannte Lösung funktioniert in den meisten
	Fällen, wenn man Code schreibt, der zwischen FreeBSD und
	Linux portierbar sein soll. Allerdings sind die Unterschiede
	bei einigen Kernel-Diensten tiefgreifender.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">In diesem Fällen müssen Sie zwei verschiedene
	Handler für diese Systemaufrufe schreiben und bedingte
	Assemblierung benutzen, um diese zu übersetzen.
	Glücklicherweise wird der größte Teil Ihres
	Codes nicht den Kernel aufrufen und Sie werden deshalb nur
	wenige solcher bedingten Abschnitte benötigen.</para>
	</sect2>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="x86-portable-library">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Eine Bibliothek benutzen</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Sie können Portabilitätsprobleme im Hauptteil
	ihres Codes komplett vermeiden, indem Sie eine Bibliothek
	für Systemaufrufe schreiben. Erstellen Sie eine
	Bibliothek für FreeBSD, eine für Linux und weitere
	für andere Betriebssysteme.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Schreiben Sie in ihrer Bibliothek eine gesonderte Funktion
	(oder Prozedur, falls Sie die traditionelle
	Assembler-Terminologie bevorzugen) für jeden
	Systemaufruf. Verwenden Sie dabei die C-Aufrufkonvention um
	Parameter zu übergeben, aber verwenden Sie weiterhin
	<varname xmlns:xlink="http://www.w3.org/1999/xlink" role="register">EAX</varname>, für die
	Aufrufnummer. In diesem Fall kann ihre FreeBSD-Bibliothek sehr
	einfach sein, da viele scheinbar unterschiedliche Funktionen
	als Label für denselben Code implementiert sein
	können:</para>

      <programlisting xmlns:xlink="http://www.w3.org/1999/xlink">sys.open:
sys.close:
[etc...]
	int	80h
	ret</programlisting>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Ihre Linux-Bibliothek wird mehr verschiedene Funktionen
	benötigen, aber auch hier können Sie Systemaufrufe,
	welche die Anzahl an Parametern akzeptieren
	zusammenfassen:</para>

      <programlisting xmlns:xlink="http://www.w3.org/1999/xlink">sys.exit:
sys.close:
[etc... one-parameter functions]
	push	ebx
	mov	ebx, [esp+12]
	int	80h
	pop	ebx
	jmp	sys.return

...

sys.return:
	or	eax, eax
	js	sys.err
	clc
	ret

sys.err:
	neg	eax
	stc
	ret</programlisting>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Der Bibliotheks-Ansatz mag auf den ersten Blick unbequem
	aussehen, weil Sie eine weitere Datei erzeugen müssen von
	der Ihr Code abhängt. Aber er hat viele Vorteile: Zum
	einen müssen Sie die Bibliothek nur einmal schreiben und
	können sie dann in allen Ihren Programmen verwenden. Sie
	können sie sogar von anderen Assembler-Programmierern
	verwenden lassen, oder eine die von jemand anderem geschrieben
	wurde verwenden. Aber der vielleicht größte Vorteil
	ist, dass Ihr Code sogar von anderen Programmierer auf andere
	Systeme portiert werden kann, einfach indem man eine neue
	Bibliothek schreibt, völlig ohne Änderungen an Ihrem
	Code.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Falls Ihnen der Gedanke eine Bibliothek zu nutzen nicht
	gefällt, können Sie zumindest all ihre Systemaufrufe
	in einer gesonderten Assembler-Datei ablegen und diese mit
	Ihrem Hauptprogramm zusammen binden. Auch hier müssen
	alle, die ihr Programm portieren, nur eine neue Objekt-Datei
	erzeugen und an Ihr Hauptprogramm binden.</para>
    </sect2>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="x86-portable-include">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Eine Include-Datei verwenden</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Wenn Sie ihre Software als (oder mit dem) Quelltext
	ausliefern, können Sie Makros definieren und in einer
	getrennten Datei ablegen, die Sie ihrem Code beilegen.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Porter Ihrer Software schreiben dann einfach eine neue
	Include-Datei. Es ist keine Bibliothek oder eine externe
	Objekt-Datei nötig und Ihr Code ist portabel, ohne dass
	man ihn editieren muss.</para>

      <note xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Das ist der Ansatz den wir in diesem Kapitel verwenden
	  werden. Wir werden unsere Include-Datei
	  <filename xmlns:xlink="http://www.w3.org/1999/xlink">system.inc</filename> nennen und jedesmal, wenn
	  wir einen neuen Systemaufruf verwenden, den entsprechenden
	  Code dort einfügen.</para>
      </note>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Wir können unsere <filename xmlns:xlink="http://www.w3.org/1999/xlink">system.inc</filename>
	beginnen indem wir die Standard-Dateideskriptoren
	deklarieren:</para>

      <programlisting xmlns:xlink="http://www.w3.org/1999/xlink">%define	stdin	0
%define	stdout	1
%define	stderr	2</programlisting>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Als Nächstes erzeugen wir einen symbolischen Namen
	für jeden Systemaufruf:</para>

      <programlisting xmlns:xlink="http://www.w3.org/1999/xlink">%define	SYS_nosys	0
%define	SYS_exit	1
%define	SYS_fork	2
%define	SYS_read	3
%define	SYS_write	4
; [etc...]</programlisting>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Wir fügen eine kleine, nicht globale Prozedur mit
	langem Namen ein, damit wir den Namen nicht aus Versehen in
	unserem Code wiederverwenden:</para>

      <programlisting xmlns:xlink="http://www.w3.org/1999/xlink">section	.text
align 4
access.the.bsd.kernel:
	int	80h
	ret</programlisting>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Wir erzeugen ein Makro, das ein Argument erwartet, die
	Systemaufruf-Nummer:</para>

      <programlisting xmlns:xlink="http://www.w3.org/1999/xlink">%macro	system	1
	mov	eax, %1
	call	access.the.bsd.kernel
%endmacro</programlisting>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Letztlich erzeugen wir Makros für jeden Systemaufruf.
	Diese Argumente erwarten keine Argumente.</para>

      <programlisting xmlns:xlink="http://www.w3.org/1999/xlink">%macro	sys.exit	0
	system	SYS_exit
%endmacro

%macro	sys.fork	0
	system	SYS_fork
%endmacro

%macro	sys.read	0
	system	SYS_read
%endmacro

%macro	sys.write	0
	system	SYS_write
%endmacro

; [etc...]</programlisting>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Fahren Sie fort, geben das in Ihren Editor ein und
	speichern es als <filename xmlns:xlink="http://www.w3.org/1999/xlink">system.inc</filename>. Wenn wir
	Systemaufrufe besprechen, werden wir noch Ergänzungen in
	dieser Datei vornehmen.</para>

    </sect2>
  </sect1>

  <sect1 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="x86-first-program">
    <info><title xmlns:xlink="http://www.w3.org/1999/xlink">Unser erstes Programm</title>
      <authorgroup xmlns:xlink="http://www.w3.org/1999/xlink">
	<author xmlns:xlink="http://www.w3.org/1999/xlink"><personname xmlns:xlink="http://www.w3.org/1999/xlink"><firstname xmlns:xlink="http://www.w3.org/1999/xlink">Hagen</firstname><surname xmlns:xlink="http://www.w3.org/1999/xlink">Kühl</surname></personname><contrib xmlns:xlink="http://www.w3.org/1999/xlink">Übersetzt von </contrib></author>
      </authorgroup>
    </info>

    

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Jetzt sind wir bereit für unser erstes Programm, das
      übliche <application xmlns:xlink="http://www.w3.org/1999/xlink">Hello, World!</application></para>

    <programlisting xmlns:xlink="http://www.w3.org/1999/xlink"> 1:	%include	'system.inc'
 2:
 3:	section	.data
 4:	hello	db	'Hello, World!', 0Ah
 5:	hbytes	equ	$-hello
 6:
 7:	section	.text
 8:	global	_start
 9:	_start:
10:	push	dword hbytes
11:	push	dword hello
12:	push	dword stdout
13:	sys.write
14:
15:	push	dword 0
16:	sys.exit</programlisting>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Hier folgt die Erklärung des Programms: Zeile 1
      fügt die Definitionen ein, die Makros und den Code aus
      <filename xmlns:xlink="http://www.w3.org/1999/xlink">system.inc</filename>.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Die Zeilen 3 bis 5 enthalten die Daten: Zeile 3 beginnt den
      Datenabschnitt/das Datensegment. Zeile 4 enthält die
      Zeichenkette "Hello, World!", gefolgt von einem Zeilenumbruch
      (<constant xmlns:xlink="http://www.w3.org/1999/xlink">0Ah</constant>). Zeile 5 erstellt eine Konstante, die
      die Länge der Zeichenkette aus Zeile 4 in Bytes
      enthält.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Die Zeilen 7 bis 16 enthalten den Code. Beachten Sie
      bitte, dass FreeBSD das Dateiformat <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">elf</emphasis>
      für diese ausführbare Datei verwendet, bei dem jedes
      Programm mit dem Label <varname xmlns:xlink="http://www.w3.org/1999/xlink">_start</varname> beginnt (oder,
      um genau zu sein, wird dies vom Linker erwartet). Diese Label
      muss global sein.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Die Zeilen 10 bis 13 weisen das System an
      <varname xmlns:xlink="http://www.w3.org/1999/xlink">hbytes</varname> Bytes der Zeichenkette
      <varname xmlns:xlink="http://www.w3.org/1999/xlink">hello</varname> nach <varname xmlns:xlink="http://www.w3.org/1999/xlink">stdout</varname> zu
      schreiben.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Die Zeilen 15 und 16 weisen das System an das Programm mit
      dem Rückgabewert <constant xmlns:xlink="http://www.w3.org/1999/xlink">0</constant> zu beenden. Der
      Systemaufruf <function xmlns:xlink="http://www.w3.org/1999/xlink" role="syscall">SYS_exit</function> kehrt
      niemals zurück, somit endet das Programm hier.</para>

    <note xmlns:xlink="http://www.w3.org/1999/xlink">
      <para xmlns:xlink="http://www.w3.org/1999/xlink">Wenn Sie von <acronym xmlns:xlink="http://www.w3.org/1999/xlink"><trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">MS-DOS</trademark></acronym>-Assembler zu
	<trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark> gekommen sind, sind Sie es vielleicht gewohnt direktauf
	die Video-Hardware zu schreiben. Unter FreeBSD müssen Sie
	sich darum keine Gedanken machen, ebenso bei jeder anderen Art
	von <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark>. Soweit es Sie betrifft schreiben Sie in eine Datei
	namens <filename xmlns:xlink="http://www.w3.org/1999/xlink">stdout</filename>. Das kann der Bildschirm,
	oder ein <application xmlns:xlink="http://www.w3.org/1999/xlink">telnet</application>-Terminal, eine
	wirkliche Datei, oder die Eingabe eines anderen Programms
	sein. Es liegt beim System herauszufinden, welches davon es
	tatsächlich ist.</para>
    </note>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="x86-assemble-1">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Den Code assemblieren</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Geben Sie den Code (außer den Zeilennummern) in
	einen Editor ein und speichern Sie ihn in einer Datei namens
	<filename xmlns:xlink="http://www.w3.org/1999/xlink">hello.asm</filename>. Um es zu assemblieren
	benötigen Sie <application xmlns:xlink="http://www.w3.org/1999/xlink">nasm</application>.</para>

      <sect3 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="x86-get-nasm">
	<title xmlns:xlink="http://www.w3.org/1999/xlink"><application xmlns:xlink="http://www.w3.org/1999/xlink">nasm</application> installieren</title>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Wenn Sie <application xmlns:xlink="http://www.w3.org/1999/xlink">nasm</application> noch nicht
	  installiert haben geben Sie folgendes ein:</para>

	<screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">su</userinput>
Password:<userinput xmlns:xlink="http://www.w3.org/1999/xlink">your root password</userinput>
<prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">#</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">cd /usr/ports/devel/nasm</userinput>
<prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">#</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">make install</userinput>
<prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">#</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">exit</userinput>
<prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt></screen>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Sie können auch <userinput xmlns:xlink="http://www.w3.org/1999/xlink">make install
	  clean</userinput> anstatt <userinput xmlns:xlink="http://www.w3.org/1999/xlink">make
	  install</userinput> eingeben, wenn Sie den Quelltext von
	  <application xmlns:xlink="http://www.w3.org/1999/xlink">nasm</application> nicht behalten
	  möchten.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Auf jeden Fall wird FreeBSD
	  <application xmlns:xlink="http://www.w3.org/1999/xlink">nasm</application> automatisch aus dem Internet
	  herunterladen, es kompilieren und auf Ihrem System
	  installieren.</para>

	<note xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Wenn es sich bei Ihrem System nicht um FreeBSD
	    handelt, müssen Sie <application xmlns:xlink="http://www.w3.org/1999/xlink">nasm</application>
	    von dessen <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://sourceforge.net/projects/nasm">Homepage</link>
	    herunterladen. Sie können es aber dennoch verwenden
	    um FreeBSD code zu assemblieren.</para>
	</note>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Nun können Sie den Code assemblieren, binden und
	  ausführen:</para>

	<screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">nasm -f elf hello.asm</userinput>
<prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">ld -s -o hello hello.o</userinput>
<prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">./hello</userinput>
Hello, World!
<prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt></screen>
      </sect3>
    </sect2>
  </sect1>

  <sect1 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="x86-unix-filters">
    <info><title xmlns:xlink="http://www.w3.org/1999/xlink"><trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark>-Filter schreiben</title>
      <authorgroup xmlns:xlink="http://www.w3.org/1999/xlink">
	<author xmlns:xlink="http://www.w3.org/1999/xlink"><personname xmlns:xlink="http://www.w3.org/1999/xlink"><firstname xmlns:xlink="http://www.w3.org/1999/xlink">Hagen</firstname><surname xmlns:xlink="http://www.w3.org/1999/xlink">Kühl</surname></personname><contrib xmlns:xlink="http://www.w3.org/1999/xlink">Übersetzt von </contrib></author>
      </authorgroup>
    </info>

    

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Ein häufiger Typ von <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark>-Anwendungen ist ein Filter
      &#8212; ein Programm, das Eingaben von
      <filename xmlns:xlink="http://www.w3.org/1999/xlink">stdin</filename> liest, sie verarbeitet und das
      Ergebnis nach <filename xmlns:xlink="http://www.w3.org/1999/xlink">stdout</filename> schreibt.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">In diesem Kapitel möchten wir einen einfachen Filter
      entwickeln und lernen, wie wir von <filename xmlns:xlink="http://www.w3.org/1999/xlink">stdin</filename>
      lesen und nach <filename xmlns:xlink="http://www.w3.org/1999/xlink">stdout</filename> schreiben. Dieser
      Filter soll jedes Byte seiner Eingabe in eine hexadezimale Zahl
      gefolgt von einem Leerzeichen umwandeln.</para>

    <programlisting xmlns:xlink="http://www.w3.org/1999/xlink">%include	'system.inc'

section	.data
hex	db	'0123456789ABCDEF'
buffer	db	0, 0, ' '

section	.text
global	_start
_start:
	; read a byte from stdin
	push	dword 1
	push	dword buffer
	push	dword stdin
	sys.read
	add	esp, byte 12
	or	eax, eax
	je	.done

	; convert it to hex
	movzx	eax, byte [buffer]
	mov	edx, eax
	shr	dl, 4
	mov	dl, [hex+edx]
	mov	[buffer], dl
	and	al, 0Fh
	mov	al, [hex+eax]
	mov	[buffer+1], al

	; print it
	push	dword 3
	push	dword buffer
	push	dword stdout
	sys.write
	add	esp, byte 12
	jmp	short _start

.done:
	push	dword 0
	sys.exit</programlisting>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Im Datenabschnitt erzeugen wir ein Array mit Namen
      <varname xmlns:xlink="http://www.w3.org/1999/xlink">hex</varname>. Es enthält die 16 hexadezimalen
      Ziffern in aufsteigender Reihenfolge. Diesem Array folgt ein
      Puffer, den wir sowohl für die Ein- als auch für die
      Ausgabe verwenden. Die ersten beiden Bytes dieses Puffers werden
      am Anfang auf <constant xmlns:xlink="http://www.w3.org/1999/xlink">0</constant> gesetzt. Dorthin schreiben
      wir die beiden hexadezimalen Ziffern (das erste Byte ist auch
      die Stelle an die wir die Eingabe lesen). Das dritte Byte ist
      ein Leerzeichen.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Der Code-Abschnitt besteht aus vier Teilen: Das Byte lesen,
      es in eine hexadezimale Zahl umwandeln, das Ergebnis schreiben
      und letztendlich das Programm verlassen.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Um das Byte zu lesen, bitten wir das System ein Byte von
      <filename xmlns:xlink="http://www.w3.org/1999/xlink">stdin</filename> zu lesen und speichern es im ersten
      Byte von <varname xmlns:xlink="http://www.w3.org/1999/xlink">buffer</varname>. Das System gibt die Anzahl
      an Bytes, die gelesen wurden, in <varname xmlns:xlink="http://www.w3.org/1999/xlink" role="register">EAX</varname> zurück. Diese wird
      <constant xmlns:xlink="http://www.w3.org/1999/xlink">1</constant> sein, wenn eine Eingabe empfangen wird
      und <constant xmlns:xlink="http://www.w3.org/1999/xlink">0</constant>, wenn keine Eingabedaten mehr
      verfügbar sind. Deshalb überprüfen wir den Wert
      von <varname xmlns:xlink="http://www.w3.org/1999/xlink" role="register">EAX</varname>. Wenn dieser
      <constant xmlns:xlink="http://www.w3.org/1999/xlink">0</constant> ist, springen wir zu
      <varname xmlns:xlink="http://www.w3.org/1999/xlink">.done</varname>, ansonsten fahren wir fort.</para>

    <note xmlns:xlink="http://www.w3.org/1999/xlink">
      <para xmlns:xlink="http://www.w3.org/1999/xlink">Zu Gunsten der Einfachheit ignorieren wir hier die
	Möglichkeit eines Fehlers.</para>
    </note>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Die Umwandlungsroutine in eine Hexadezimalzahl liest das
      Byte aus <varname xmlns:xlink="http://www.w3.org/1999/xlink">buffer</varname> in <varname xmlns:xlink="http://www.w3.org/1999/xlink" role="register">EAX</varname>, oder genaugenommen nur in
      <varname xmlns:xlink="http://www.w3.org/1999/xlink" role="register">AL</varname>, wobei die übrigen
      Bits von <varname xmlns:xlink="http://www.w3.org/1999/xlink" role="register">EAX</varname> auf null gesetzt
      werden. Außerdem kopieren wir das Byte nach <varname xmlns:xlink="http://www.w3.org/1999/xlink" role="register">EDX</varname>, da wir die oberen vier Bits
      (Nibble) getrennt von den unteren vier Bits umwandeln
      müssen. Das Ergebnis speichern wir in den ersten beiden
      Bytes des Puffers.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Als Nächstes bitten wir das System die drei Bytes in
      den Puffer zu schreiben, also die zwei hexadezimalen Ziffern und
      das Leerzeichen nach <filename xmlns:xlink="http://www.w3.org/1999/xlink">stdout</filename>. Danach
      springen wir wieder an den Anfang des Programms und verarbeiten
      das nächste Byte.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Wenn die gesamte Eingabe verarbeitet ist, bitten wie das
      System unser Programm zu beenden und null zurückzuliefern,
      welches traditionell die Bedeutung hat, dass unser Programm
      erfolgreich war.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Fahren Sie fort und speichern Sie den Code in eine Datei
      namens <filename xmlns:xlink="http://www.w3.org/1999/xlink">hex.asm</filename>. Geben Sie danach folgendes
      ein (<userinput xmlns:xlink="http://www.w3.org/1999/xlink">^D</userinput> bedeutet, dass Sie die
      Steuerungstaste drücken und dann <userinput xmlns:xlink="http://www.w3.org/1999/xlink">D</userinput>
      eingeben, während Sie Steuerung gedrückt
      halten):</para>

    <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">nasm -f elf hex.asm</userinput>
<prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">ld -s -o hex hex.o</userinput>
<prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">./hex</userinput>
<userinput xmlns:xlink="http://www.w3.org/1999/xlink">Hello, World!</userinput>
48 65 6C 6C 6F 2C 20 57 6F 72 6C 64 21 0A <userinput xmlns:xlink="http://www.w3.org/1999/xlink">Here I come!</userinput>
48 65 72 65 20 49 20 63 6F 6D 65 21 0A <userinput xmlns:xlink="http://www.w3.org/1999/xlink">^D</userinput> <prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt></screen>

    <note xmlns:xlink="http://www.w3.org/1999/xlink">
      <para xmlns:xlink="http://www.w3.org/1999/xlink">Wenn Sie von <acronym xmlns:xlink="http://www.w3.org/1999/xlink"><trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">MS-DOS</trademark></acronym> zu <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark>
	wechseln, wundern Sie sich vielleicht, warum jede Zeile mit
	<constant xmlns:xlink="http://www.w3.org/1999/xlink">0A</constant> an Stelle von <constant xmlns:xlink="http://www.w3.org/1999/xlink">0D
	0A</constant> endet. Das liegt daran, dass <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark> nicht die
	CR/LF-Konvention, sondern die "new line"-Konvention verwendet,
	welches hexadezimal als <constant xmlns:xlink="http://www.w3.org/1999/xlink">0A</constant> dargestellt
	wird.</para>
    </note>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Können wir das Programm verbessern? Nun, einerseits ist
      es etwas verwirrend, dass die Eingabe, nachdem wir eine Zeile
      verarbeitet haben, nicht wieder am Anfang der Zeile beginnt.
      Deshalb können wir unser Programm anpassen um einen
      Zeilenumbruch an Stelle eines Leerzeichens nach jedem
      <constant xmlns:xlink="http://www.w3.org/1999/xlink">0A</constant> auszugeben:</para>

    <programlisting xmlns:xlink="http://www.w3.org/1999/xlink">%include	'system.inc'

section	.data
hex	db	'0123456789ABCDEF'
buffer	db	0, 0, ' '

section	.text
global	_start
_start:
	mov	cl, ' '

.loop:
	; read a byte from stdin
	push	dword 1
	push	dword buffer
	push	dword stdin
	sys.read
	add	esp, byte 12
	or	eax, eax
	je	.done

	; convert it to hex
	movzx	eax, byte [buffer]
	mov	[buffer+2], cl
	cmp	al, 0Ah
	jne	.hex
	mov	[buffer+2], al

.hex:
	mov	edx, eax
	shr	dl, 4
	mov	dl, [hex+edx]
	mov	[buffer], dl
	and	al, 0Fh
	mov	al, [hex+eax]
	mov	[buffer+1], al

	; print it
	push	dword 3
	push	dword buffer
	push	dword stdout
	sys.write
	add	esp, byte 12
	jmp	short .loop

.done:
	push	dword 0
	sys.exit</programlisting>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Wir haben das Leerzeichen im Register <varname xmlns:xlink="http://www.w3.org/1999/xlink" role="register">CL</varname> abgelegt. Das können wir
      bedenkenlos tun, da <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark>-Systemaufrufe im Gegensatz zu denen
      von <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">Microsoft</trademark> <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">Windows</trademark> keine Werte von Registern ändern in
      denen sie keine Werte zurückliefern.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Das bedeutet, dass wir <varname xmlns:xlink="http://www.w3.org/1999/xlink" role="register">CL</varname>
      nur einmal setzen müssen. Dafür haben wir ein neues
      Label <varname xmlns:xlink="http://www.w3.org/1999/xlink">.loop</varname> eingefügt, zu dem wir an
      Stelle von <varname xmlns:xlink="http://www.w3.org/1999/xlink">_start</varname> springen, um das
      nächste Byte einzulesen. Außerdem haben wir das Label
      <varname xmlns:xlink="http://www.w3.org/1999/xlink">.hex</varname> eingefügt, somit können wir
      wahlweise ein Leerzeichen oder einen Zeilenumbruch im dritten
      Byte von <varname xmlns:xlink="http://www.w3.org/1999/xlink">buffer</varname> ablegen.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Nachdem Sie <filename xmlns:xlink="http://www.w3.org/1999/xlink">hex.asm</filename> entsprechend der
      Neuerungen geändert haben, geben Sie Folgendes ein:</para>

    <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">nasm -f elf hex.asm</userinput>
<prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">ld -s -o hex hex.o</userinput>
<prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">./hex</userinput>
<userinput xmlns:xlink="http://www.w3.org/1999/xlink">Hello, World!</userinput>
48 65 6C 6C 6F 2C 20 57 6F 72 6C 64 21 0A
<userinput xmlns:xlink="http://www.w3.org/1999/xlink">Here I come!</userinput>
48 65 72 65 20 49 20 63 6F 6D 65 21 0A
<userinput xmlns:xlink="http://www.w3.org/1999/xlink">^D</userinput> <prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt></screen>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Das sieht doch schon besser aus. Aber der Code ist ziemlich
      ineffizient! Wir führen für jeden einzelne Byte
      zweimal einen Systemaufruf aus (einen zum Lesen und einen um es
      in die Ausgabe zu schreiben).</para>
  </sect1>

  <sect1 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="x86-buffered-io">
    <info><title xmlns:xlink="http://www.w3.org/1999/xlink">Gepufferte Eingabe und Ausgabe</title>
      <authorgroup xmlns:xlink="http://www.w3.org/1999/xlink">
	<author xmlns:xlink="http://www.w3.org/1999/xlink"><personname xmlns:xlink="http://www.w3.org/1999/xlink"><firstname xmlns:xlink="http://www.w3.org/1999/xlink">Hagen</firstname><surname xmlns:xlink="http://www.w3.org/1999/xlink">Kühl</surname></personname><contrib xmlns:xlink="http://www.w3.org/1999/xlink">Übersetzt von </contrib></author>
      </authorgroup>
    </info>

    

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Wir können die Effizienz unseres Codes erhöhen,
      indem wir die Ein- und Ausgabe puffern. Wir erzeugen einen
      Eingabepuffer und lesen dann eine Folge von Bytes auf einmal.
      Danach holen wir sie Byte für Byte aus dem Puffer.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Wir erzeugen ebenfalls einen Ausgabepuffer. Darin speichern
      wir unsere Ausgabe bis er voll ist. Dann bitten wir den Kernel
      den Inhalt des Puffers nach <filename xmlns:xlink="http://www.w3.org/1999/xlink">stdout</filename> zu
      schreiben.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Diese Programm endet, wenn es keine weitere Eingaben gibt.
      Aber wir müssen den Kernel immernoch bitten den Inhalt des
      Ausgabepuffers ein letztes Mal nach <filename xmlns:xlink="http://www.w3.org/1999/xlink">stdout</filename>
      zu schreiben, denn sonst würde ein Teil der Ausgabe zwar im
      Ausgabepuffer landen, aber niemals ausgegeben werden. Bitte
      vergessen Sie das nicht, sonst fragen Sie sich später warum
      ein Teil Ihrer Ausgabe verschwunden ist.</para>

    <programlisting xmlns:xlink="http://www.w3.org/1999/xlink">%include	'system.inc'

%define	BUFSIZE	2048

section	.data
hex	db	'0123456789ABCDEF'

section .bss
ibuffer	resb	BUFSIZE
obuffer	resb	BUFSIZE

section	.text
global	_start
_start:
	sub	eax, eax
	sub	ebx, ebx
	sub	ecx, ecx
	mov	edi, obuffer

.loop:
	; read a byte from stdin
	call	getchar

	; convert it to hex
	mov	dl, al
	shr	al, 4
	mov	al, [hex+eax]
	call	putchar

	mov	al, dl
	and	al, 0Fh
	mov	al, [hex+eax]
	call	putchar

	mov	al, ' '
	cmp	dl, 0Ah
	jne	.put
	mov	al, dl

.put:
	call	putchar
	jmp	short .loop

align 4
getchar:
	or	ebx, ebx
	jne	.fetch

	call	read

.fetch:
	lodsb
	dec	ebx
	ret

read:
	push	dword BUFSIZE
	mov	esi, ibuffer
	push	esi
	push	dword stdin
	sys.read
	add	esp, byte 12
	mov	ebx, eax
	or	eax, eax
	je	.done
	sub	eax, eax
	ret

align 4
.done:
	call	write		; flush output buffer
	push	dword 0
	sys.exit

align 4
putchar:
	stosb
	inc	ecx
	cmp	ecx, BUFSIZE
	je	write
	ret

align 4
write:
	sub	edi, ecx	; start of buffer
	push	ecx
	push	edi
	push	dword stdout
	sys.write
	add	esp, byte 12
	sub	eax, eax
	sub	ecx, ecx	; buffer is empty now
	ret</programlisting>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Als dritten Abschnitt im Quelltext haben wir
      <varname xmlns:xlink="http://www.w3.org/1999/xlink">.bss</varname>. Dieser Abschnitt wird nicht in unsere
      ausführbare Datei eingebunden und kann daher nicht
      initialisiert werden. Wir verwenden <function xmlns:xlink="http://www.w3.org/1999/xlink" role="opcode">resb</function> anstelle von <function xmlns:xlink="http://www.w3.org/1999/xlink" role="opcode">db</function>. Dieses reserviert einfach die
      angeforderte Menge an uninitialisiertem Speicher zu unserer
      Verwendung.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Wir nutzen, die Tatsache, dass das System die Register nicht
      verändert: Wir benutzen Register, wo wir anderenfalls
      globale Variablen im Abschnitt <varname xmlns:xlink="http://www.w3.org/1999/xlink">.data</varname>
      verwenden müssten. Das ist auch der Grund, warum die
      <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark>-Konvention, Parameter auf dem Stack zu übergeben,
      der von Microsoft, hierfür Register zu verwenden,
      überlegen ist: Wir können Register für unsere
      eigenen Zwecke verwenden.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Wir verwenden <varname xmlns:xlink="http://www.w3.org/1999/xlink" role="register">EDI</varname> und
      <varname xmlns:xlink="http://www.w3.org/1999/xlink" role="register">ESI</varname> als Zeiger auf das
      nächste zu lesende oder schreibende Byte. Wir verwenden
      <varname xmlns:xlink="http://www.w3.org/1999/xlink" role="register">EBX</varname> und <varname xmlns:xlink="http://www.w3.org/1999/xlink" role="register">ECX</varname>, um die Anzahl der Bytes in den
      beiden Puffern zu zählen, damit wir wissen, wann wir die
      Ausgabe an das System übergeben, oder neue Eingabe vom
      System entgegen nehmen müssen.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Lassen Sie uns sehen, wie es funktioniert:</para>

    <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">nasm -f elf hex.asm</userinput>
<prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">ld -s -o hex hex.o</userinput>
<prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">./hex</userinput>
<userinput xmlns:xlink="http://www.w3.org/1999/xlink">Hello, World!</userinput>
<userinput xmlns:xlink="http://www.w3.org/1999/xlink">Here I come!</userinput>
48 65 6C 6C 6F 2C 20 57 6F 72 6C 64 21 0A
48 65 72 65 20 49 20 63 6F 6D 65 21 0A
<userinput xmlns:xlink="http://www.w3.org/1999/xlink">^D</userinput> <prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt></screen>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Nicht was Sie erwartet haben? Das Programm hat die Ausgabe
      nicht auf dem Bildschirm ausgegeben bis sie
      <userinput xmlns:xlink="http://www.w3.org/1999/xlink">^D</userinput> gedrückt haben. Das kann man
      leicht zu beheben indem man drei Zeilen Code einfügt,
      welche die Ausgabe jedesmal schreiben, wenn wir einen
      Zeilenumbruch in <constant xmlns:xlink="http://www.w3.org/1999/xlink">0A</constant> umgewandelt haben. Ich
      habe die betreffenden Zeilen mit &gt; markiert (kopieren Sie die
      &gt; bitte nicht mit in Ihre
      <filename xmlns:xlink="http://www.w3.org/1999/xlink">hex.asm</filename>).</para>

    <programlisting xmlns:xlink="http://www.w3.org/1999/xlink">%include    'system.inc'

%define	BUFSIZE	2048

section	.data
hex	db	'0123456789ABCDEF'

section .bss
ibuffer	resb	BUFSIZE
obuffer	resb	BUFSIZE

section	.text
global	_start
_start:
	sub	eax, eax
	sub	ebx, ebx
	sub	ecx, ecx
	mov	edi, obuffer

.loop:
	; read a byte from stdin
	call	getchar

	; convert it to hex
	mov	dl, al
	shr	al, 4
	mov	al, [hex+eax]
	call	putchar

	mov	al, dl
	and	al, 0Fh
	mov	al, [hex+eax]
	call	putchar

	mov	al, ' '
	cmp	dl, 0Ah
	jne	.put
	mov	al, dl

.put:
	call	putchar
&gt;	cmp	al, 0Ah
&gt;	jne	.loop
&gt;	call	write
	jmp	short .loop

align 4
getchar:
	or	ebx, ebx
	jne	.fetch

	call	read

.fetch:
	lodsb
	dec	ebx
	ret

read:
	push	dword BUFSIZE
	mov	esi, ibuffer
	push	esi
	push	dword stdin
	sys.read
	add	esp, byte 12
	mov	ebx, eax
	or	eax, eax
	je	.done
	sub	eax, eax
	ret

align 4
.done:
	call	write		; flush output buffer
	push	dword 0
	sys.exit

align 4
putchar:
	stosb
	inc	ecx
	cmp	ecx, BUFSIZE
	je	write
	ret

align 4
write:
	sub	edi, ecx	; start of buffer
	push	ecx
	push	edi
	push	dword stdout
	sys.write
	add	esp, byte 12
	sub	eax, eax
	sub	ecx, ecx	; buffer is empty now
	ret</programlisting>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Lassen Sie uns jetzt einen Blick darauf werfen, wie es
      funktioniert.</para>

    <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">nasm -f elf hex.asm</userinput>
<prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">ld -s -o hex hex.o</userinput>
<prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">./hex</userinput>
<userinput xmlns:xlink="http://www.w3.org/1999/xlink">Hello, World!</userinput>
48 65 6C 6C 6F 2C 20 57 6F 72 6C 64 21 0A
<userinput xmlns:xlink="http://www.w3.org/1999/xlink">Here I come!</userinput>
48 65 72 65 20 49 20 63 6F 6D 65 21 0A
<userinput xmlns:xlink="http://www.w3.org/1999/xlink">^D</userinput> <prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt></screen>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Nicht schlecht für eine 644 Byte große
      Binärdatei, oder?</para>

    <note xmlns:xlink="http://www.w3.org/1999/xlink">
      <para xmlns:xlink="http://www.w3.org/1999/xlink">Dieser Ansatz für gepufferte Ein- und Ausgabe
        enthält eine Gefahr, auf die ich im Abschnitt <link xmlns:xlink="http://www.w3.org/1999/xlink" linkend="x86-buffered-dark-side">Die dunkle Seite des
        Buffering</link> eingehen werde.</para>
    </note>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="x86-ungetc">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Ein Zeichen ungelesen machen</title>

      <warning xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Das ist vielleicht ein etwas fortgeschrittenes Thema,
	  das vor allem für Programmierer interessant ist, die
	  mit der Theorie von Compilern vertraut sind. Wenn Sie
	  wollen, können Sie <link xmlns:xlink="http://www.w3.org/1999/xlink" linkend="x86-command-line">zum
	  nächsten Abschnitt springen</link> und das hier
	  vielleicht später lesen.</para>
      </warning>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Unser Beispielprogramm benötigt es zwar nicht, aber
	etwas anspruchsvollere Filter müssen häufig
	vorausschauen. Mit anderen Worten, sie müssen wissen was
	das nächste Zeichen ist (oder sogar mehrere Zeichen).
	Wenn das nächste Zeichen einen bestimmten Wert hat, ist
	es Teil des aktuellen Tokens, ansonsten nicht.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Zum Beispiel könnten Sie den Eingabestrom für
	eine Text-Zeichenfolge parsen (z.B. wenn Sie einen Compiler
	einer Sprache implementieren): Wenn einem Buchstaben ein
	anderer Buchstabe oder vielleicht eine Ziffer folgt, ist er
	ein Teil des Tokens, das Sie verarbeiten. Wenn ihm ein
	Leerzeichen folgt, oder ein anderer Wert, ist er nicht Teil
	des aktuellen Tokens.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Das führt uns zu einem interessanten Problem: Wie
	kann man ein Zeichen zurück in den Eingabestrom geben,
	damit es später noch einmal gelesen werden kann?</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Eine mögliche Lösung ist, das Zeichen in einer
	Variable zu speichern und ein Flag zu setzen. Wir können
	<function xmlns:xlink="http://www.w3.org/1999/xlink">getchar</function> so anpassen, dass es das Flag
	überprüft und, wenn es gesetzt ist, das Byte aus der
	Variable anstatt dem Eingabepuffer liest und das Flag
	zurück setzt. Aber natürlich macht uns das
	langsamer.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Die Sprache C hat eine Funktion
	<function xmlns:xlink="http://www.w3.org/1999/xlink">ungetc()</function> für genau diesen Zweck.
	Gibt es einen schnellen Weg, diese in unserem Code zu
	implementieren? Ich möchte Sie bitten nach oben zu
	scrollen und sich die Prozedur <function xmlns:xlink="http://www.w3.org/1999/xlink">getchar</function>
	anzusehen und zu versuchen eine schöne und schnelle
	Lösung zu finden, bevor Sie den nächsten Absatz
	lesen. Kommen Sie danach hierher zurück und schauen sich
	meine Lösung an.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Der Schlüssel dazu ein Zeichen an den Eingabestrom
	zurückzugeben, liegt darin, wie wir das Zeichen
	bekommen:</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Als erstes überprüfen wir, ob der Puffer leer
	ist, indem wir den Wert von <varname xmlns:xlink="http://www.w3.org/1999/xlink" role="register">EBX</varname> testen. Wenn er null ist, rufen
	wir die Prozedur <function xmlns:xlink="http://www.w3.org/1999/xlink">read</function> auf.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Wenn ein Zeichen bereit ist verwenden wir <function xmlns:xlink="http://www.w3.org/1999/xlink" role="opcode">lodsb</function>, dann verringern wir den Wert
	von <varname xmlns:xlink="http://www.w3.org/1999/xlink" role="register">EBX</varname>. Die Anweisung
	<function xmlns:xlink="http://www.w3.org/1999/xlink" role="opcode">lodsb</function> ist letztendlich
	identisch mit:</para>

      <programlisting xmlns:xlink="http://www.w3.org/1999/xlink">	mov	al, [esi]
	  inc	esi</programlisting>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Das Byte, welches wir abgerufen haben, verbleibt im Puffer
	bis <function xmlns:xlink="http://www.w3.org/1999/xlink">read</function> zum nächsten Mal aufgerufen
	wird. Wir wissen nicht wann das passiert, aber wir wissen,
	dass es nicht vor dem nächsten Aufruf von
	<function xmlns:xlink="http://www.w3.org/1999/xlink">getchar</function> passiert. Daher ist alles was wir
	tun müssen um das Byte in den Strom "zurückzugeben"
	ist den Wert von <varname xmlns:xlink="http://www.w3.org/1999/xlink" role="register">ESI</varname> zu
	verringern und den von <varname xmlns:xlink="http://www.w3.org/1999/xlink" role="register">EBX</varname>
	zu erhöhen:</para>

      <programlisting xmlns:xlink="http://www.w3.org/1999/xlink">ungetc:
	  dec	esi
	  inc	ebx
	  ret</programlisting>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Aber seien Sie vorsichtig! Wir sind auf der sicheren Seite,
	solange wir immer nur ein Zeichen im Voraus lesen. Wenn wir
	mehrere kommende Zeichen betrachten und
	<function xmlns:xlink="http://www.w3.org/1999/xlink">ungetc</function> mehrmals hintereinander aufrufen,
	wird es meistens funktionieren, aber nicht immer (und es wird
	ein schwieriger Debug). Warum?</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Solange <function xmlns:xlink="http://www.w3.org/1999/xlink">getchar</function>
	<function xmlns:xlink="http://www.w3.org/1999/xlink">read</function> nicht aufrufen muss, befinden sich
	alle im Voraus gelesenen Bytes noch im Puffer und
	<function xmlns:xlink="http://www.w3.org/1999/xlink">ungetc</function> arbeitet fehlerfrei. Aber sobald
	<function xmlns:xlink="http://www.w3.org/1999/xlink">getchar</function> <function xmlns:xlink="http://www.w3.org/1999/xlink">read</function> aufruft
	verändert sich der Inhalt des Puffers.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Wir können uns immer darauf verlassen, dass
	<function xmlns:xlink="http://www.w3.org/1999/xlink">ungetc</function> auf dem zuletzt mit
	<function xmlns:xlink="http://www.w3.org/1999/xlink">getchar</function> gelesenen Zeichen korrekt
	arbeitet, aber nicht auf irgendetwas, das davor gelesen
	wurde.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Wenn Ihr Programm mehr als ein Byte im Voraus lesen soll,
	haben Sie mindestens zwei Möglichkeiten:</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Die einfachste Lösung ist, Ihr Programm so zu
	ändern, dass es immer nur ein Byte im Voraus liest, wenn
	das möglich ist.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Wenn Sie diese Möglichkeit nicht haben, bestimmen Sie
	zuerst die maximale Anzahl an Zeichen, die Ihr Programm auf
	einmal an den Eingabestrom zurückgeben muss. Erhöhen
	Sie diesen Wert leicht, nur um sicherzugehen, vorzugsweise auf
	ein Vielfaches von 16&#8212;damit er sich schön
	ausrichtet. Dann passen Sie den <varname xmlns:xlink="http://www.w3.org/1999/xlink">.bss</varname>
	Abschnitt Ihres Codes an und erzeugen einen kleinen
	Reserver-Puffer, direkt vor ihrem Eingabepuffer, in etwa
	so:</para>

      <programlisting xmlns:xlink="http://www.w3.org/1999/xlink">section	.bss
	  resb	16	; or whatever the value you came up with
  ibuffer	resb	BUFSIZE
  obuffer	resb	BUFSIZE</programlisting>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Außerdem müssen Sie <function xmlns:xlink="http://www.w3.org/1999/xlink">ungetc</function>
	anpassen, sodass es den Wert des Bytes, das zurückgegeben
	werden soll, in <varname xmlns:xlink="http://www.w3.org/1999/xlink" role="register">AL</varname>
	übergibt:</para>

      <programlisting xmlns:xlink="http://www.w3.org/1999/xlink">ungetc:
	  dec	esi
	  inc	ebx
	  mov	[esi], al
	  ret</programlisting>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Mit dieser Änderung können Sie sicher
	<function xmlns:xlink="http://www.w3.org/1999/xlink">ungetc</function> bis zu 17 Mal hintereinander
	gqapaufrufen (der erste Aufruf erfolgt noch im Puffer, die
	anderen 16 entweder im Puffer oder in der Reserve).</para>
    </sect2>
  </sect1>

  <sect1 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="x86-command-line">
    <info><title xmlns:xlink="http://www.w3.org/1999/xlink">Kommandozeilenparameter</title>
      <authorgroup xmlns:xlink="http://www.w3.org/1999/xlink">
	<author xmlns:xlink="http://www.w3.org/1999/xlink"><personname xmlns:xlink="http://www.w3.org/1999/xlink"><firstname xmlns:xlink="http://www.w3.org/1999/xlink">Fabian</firstname><surname xmlns:xlink="http://www.w3.org/1999/xlink">Ruch</surname></personname><contrib xmlns:xlink="http://www.w3.org/1999/xlink">Übersetzt von </contrib></author>
      </authorgroup>
    </info>

    

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Unser <application xmlns:xlink="http://www.w3.org/1999/xlink">hex</application>-Programm wird
      nützlicher, wenn es die Dateinamen der Ein- und Ausgabedatei
      über die Kommandozeile einlesen kann, d.h., wenn es
      Kommandozeilenparameter verarbeiten kann. Aber... Wo sind
      die?</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Bevor ein <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark>-System ein Programm ausführt, legt es
      einige Daten auf dem Stack ab (<function xmlns:xlink="http://www.w3.org/1999/xlink" role="opcode">push</function>) und springt dann an das
      <varname xmlns:xlink="http://www.w3.org/1999/xlink">_start</varname>-Label des Programms. Ja, ich sagte
      springen, nicht aufrufen. Das bedeutet, dass auf die Daten
      zugegriffen werden kann, indem <varname xmlns:xlink="http://www.w3.org/1999/xlink">[esp+offset]</varname>
      ausgelesen wird oder die Daten einfach vom Stack genommen werden
      (<function xmlns:xlink="http://www.w3.org/1999/xlink" role="opcode">pop</function>).</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Der Wert ganz oben auf dem Stack enthält die Zahl der
      Kommandozeilenparameter. Er wird traditionell
      <varname xmlns:xlink="http://www.w3.org/1999/xlink">argc</varname> wie "argument count" genannt.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Die Kommandozeilenparameter folgen einander, alle
      <varname xmlns:xlink="http://www.w3.org/1999/xlink">argc</varname>. Von diesen wird üblicherweise als
      <varname xmlns:xlink="http://www.w3.org/1999/xlink">argv</varname> wie "argument value(s)" gesprochen. So
      erhalten wir <varname xmlns:xlink="http://www.w3.org/1999/xlink">argv[0]</varname>,
      <varname xmlns:xlink="http://www.w3.org/1999/xlink">argv[1]</varname>, <varname xmlns:xlink="http://www.w3.org/1999/xlink">...</varname> und
      <varname xmlns:xlink="http://www.w3.org/1999/xlink">argv[argc-1]</varname>. Dies sind nicht die eigentlichen
      Parameter, sondern Zeiger (Pointer) auf diese, d.h.,
      Speicheradressen der tatsächlichen Parameter. Die Parameter
      selbst sind durch NULL beendete Zeichenketten.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Der <varname xmlns:xlink="http://www.w3.org/1999/xlink">argv</varname>-Liste folgt ein NULL-Zeiger, was
      einfach eine <constant xmlns:xlink="http://www.w3.org/1999/xlink">0</constant> ist. Es gibt noch mehr, aber
      dies ist erst einmal genug für unsere Zwecke.</para>

    <note xmlns:xlink="http://www.w3.org/1999/xlink">
      <para xmlns:xlink="http://www.w3.org/1999/xlink">Falls Sie von der
	<acronym xmlns:xlink="http://www.w3.org/1999/xlink"><trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">MS-DOS</trademark></acronym>-Programmierumgebung kommen, ist
	der größte Unterschied die Tatsache, dass jeder
	Parameter eine separate Zeichenkette ist. Der zweite
	Unterschied ist, dass es praktisch keine Grenze gibt, wie
	viele Parameter vorhanden sein können.</para>
    </note>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Ausgerüstet mit diesen Kenntnissen, sind wir beinahe
      bereit für eine weitere Version von
      <filename xmlns:xlink="http://www.w3.org/1999/xlink">hex.asm</filename>. Zuerst müssen wir jedoch
      noch ein paar Zeilen zu <filename xmlns:xlink="http://www.w3.org/1999/xlink">system.inc</filename>
      hinzufügen:</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Erstens benötigen wir zwei neue Einträge in unserer
      Liste mit den Systemaufrufnummern:</para>

    <programlisting xmlns:xlink="http://www.w3.org/1999/xlink">%define	SYS_open	5
%define	SYS_close	6</programlisting>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Zweitens fügen wir zwei neue Makros am Ende der Datei
      ein:</para>

    <programlisting xmlns:xlink="http://www.w3.org/1999/xlink">%macro	sys.open	0
	system	SYS_open
%endmacro

%macro	sys.close	0
	system	SYS_close
%endmacro</programlisting>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Und hier ist schließlich unser veränderter
      Quelltext:</para>

    <programlisting xmlns:xlink="http://www.w3.org/1999/xlink">%include	'system.inc'

%define	BUFSIZE	2048

section	.data
fd.in	dd	stdin
fd.out	dd	stdout
hex	db	'0123456789ABCDEF'

section .bss
ibuffer	resb	BUFSIZE
obuffer	resb	BUFSIZE

section	.text
align 4
err:
	push	dword 1		; return failure
	sys.exit

align 4
global	_start
_start:
	add	esp, byte 8	; discard argc and argv[0]

	pop	ecx
	jecxz	.init		; no more arguments

	; ECX contains the path to input file
	push	dword 0		; O_RDONLY
	push	ecx
	sys.open
	jc	err		; open failed

	add	esp, byte 8
	mov	[fd.in], eax

	pop	ecx
	jecxz	.init		; no more arguments

	; ECX contains the path to output file
	push	dword 420	; file mode (644 octal)
	push	dword 0200h | 0400h | 01h
	; O_CREAT | O_TRUNC | O_WRONLY
	push	ecx
	sys.open
	jc	err

	add	esp, byte 12
	mov	[fd.out], eax

.init:
	sub	eax, eax
	sub	ebx, ebx
	sub	ecx, ecx
	mov	edi, obuffer

.loop:
	; read a byte from input file or stdin
	call	getchar

	; convert it to hex
	mov	dl, al
	shr	al, 4
	mov	al, [hex+eax]
	call	putchar

	mov	al, dl
	and	al, 0Fh
	mov	al, [hex+eax]
	call	putchar

	mov	al, ' '
	cmp	dl, 0Ah
	jne	.put
	mov	al, dl

.put:
	call	putchar
	cmp	al, dl
	jne	.loop
	call	write
	jmp	short .loop

align 4
getchar:
	or	ebx, ebx
	jne	.fetch

	call	read

.fetch:
	lodsb
	dec	ebx
	ret

read:
	push	dword BUFSIZE
	mov	esi, ibuffer
	push	esi
	push	dword [fd.in]
	sys.read
	add	esp, byte 12
	mov	ebx, eax
	or	eax, eax
	je	.done
	sub	eax, eax
	ret

align 4
.done:
	call	write		; flush output buffer

	; close files
	push	dword [fd.in]
	sys.close

	push	dword [fd.out]
	sys.close

	; return success
	push	dword 0
	sys.exit

align 4
putchar:
	stosb
	inc	ecx
	cmp	ecx, BUFSIZE
	je	write
	ret

align 4
write:
	sub	edi, ecx	; start of buffer
	push	ecx
	push	edi
	push	dword [fd.out]
	sys.write
	add	esp, byte 12
	sub	eax, eax
	sub	ecx, ecx	; buffer is empty now
	ret</programlisting>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">In unserem <varname xmlns:xlink="http://www.w3.org/1999/xlink">.data</varname>-Abschnitt befinden
      sich nun die zwei neuen Variablen <varname xmlns:xlink="http://www.w3.org/1999/xlink">fd.in</varname> und
      <varname xmlns:xlink="http://www.w3.org/1999/xlink">fd.out</varname>. Hier legen wir die Dateideskriptoren
      der Ein- und Ausgabedatei ab.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Im <varname xmlns:xlink="http://www.w3.org/1999/xlink">.text</varname>-Abschnitt haben wir die
      Verweise auf <varname xmlns:xlink="http://www.w3.org/1999/xlink">stdin</varname> und
      <varname xmlns:xlink="http://www.w3.org/1999/xlink">stdout</varname> durch <varname xmlns:xlink="http://www.w3.org/1999/xlink">[fd.in]</varname> und
      <varname xmlns:xlink="http://www.w3.org/1999/xlink">[fd.out]</varname> ersetzt.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Der <varname xmlns:xlink="http://www.w3.org/1999/xlink">.text</varname>-Abschnitt beginnt nun mit
      einer einfachen Fehlerbehandlung, welche nur das Programm mit
      einem Rückgabewert von <constant xmlns:xlink="http://www.w3.org/1999/xlink">1</constant> beendet. Die
      Fehlerbehandlung befindet sich vor <varname xmlns:xlink="http://www.w3.org/1999/xlink">_start</varname>,
      sodass wir in geringer Entfernung von der Stelle sind, an der
      der Fehler auftritt.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Selbstverständlich beginnt die
      Programmausführung immer noch bei
      <varname xmlns:xlink="http://www.w3.org/1999/xlink">_start</varname>. Zuerst entfernen wir
      <varname xmlns:xlink="http://www.w3.org/1999/xlink">argc</varname> und <varname xmlns:xlink="http://www.w3.org/1999/xlink">argv[0]</varname> vom
      Stack: Sie sind für uns nicht von Interesse (sprich, in
      diesem Programm).</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Wir nehmen <varname xmlns:xlink="http://www.w3.org/1999/xlink">argv[1]</varname> vom Stack und legen
      es in <varname xmlns:xlink="http://www.w3.org/1999/xlink" role="register">ECX</varname> ab. Dieses Register
      ist besonders für Zeiger geeignet, da wir mit <function xmlns:xlink="http://www.w3.org/1999/xlink" role="opcode">jecxz</function> NULL-Zeiger verarbeiten
      können. Falls <varname xmlns:xlink="http://www.w3.org/1999/xlink">argv[1]</varname> nicht NULL ist,
      versuchen wir, die Datei zu öffnen, die der erste Parameter
      festlegt. Andernfalls fahren wir mit dem Programm fort wie
      vorher: Lesen von <varname xmlns:xlink="http://www.w3.org/1999/xlink">stdin</varname> und Schreiben nach
      <varname xmlns:xlink="http://www.w3.org/1999/xlink">stdout</varname>. Falls wir die Eingabedatei nicht
      öffnen können (z.B. sie ist nicht vorhanden), springen
      wir zur Fehlerbehandlung und beenden das Programm.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Falls es keine Probleme gibt, sehen wir nun nach dem
      zweiten Parameter. Falls er vorhanden ist, öffnen wir die
      Ausgabedatei. Andernfalls schreiben wir die Ausgabe nach
      <varname xmlns:xlink="http://www.w3.org/1999/xlink">stdout</varname>. Falls wir die Ausgabedatei nicht
      öffnen können (z.B. sie ist zwar vorhanden, aber wir
      haben keine Schreibberechtigung), springen wir auch wieder in
      die Fehlerbehandlung.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Der Rest des Codes ist derselbe wie vorher, außer
      dem Schließen der Ein- und Ausgabedatei vor dem Verlassen
      des Programms und, wie bereits erwähnt, die Benutzung von
      <varname xmlns:xlink="http://www.w3.org/1999/xlink">[fd.in]</varname> und
      <varname xmlns:xlink="http://www.w3.org/1999/xlink">[fd.out]</varname>.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Unsere Binärdatei ist nun kolossale 768 Bytes
      groß.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Können wir das Programm immer noch verbessern?
      Natürlich! Jedes Programm kann verbessert werden. Hier
      finden sich einige Ideen, was wir tun könnten:</para>

    <itemizedlist xmlns:xlink="http://www.w3.org/1999/xlink">
      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Die Fehlerbehandlung eine Warnung auf
	  <varname xmlns:xlink="http://www.w3.org/1999/xlink">stderr</varname> ausgeben lassen.</para>
      </listitem>

      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Den <function xmlns:xlink="http://www.w3.org/1999/xlink">Lese</function>- und
	  <function xmlns:xlink="http://www.w3.org/1999/xlink">Schreib</function>funkionen eine Fehlerbehandlung
	  hinzufügen.</para>
      </listitem>

      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Schließen von <varname xmlns:xlink="http://www.w3.org/1999/xlink">stdin</varname>, sobald wir
	  eine Eingabedatei öffnen, von <varname xmlns:xlink="http://www.w3.org/1999/xlink">stdout</varname>,
	  sobald wir eine Ausgabedatei öffnen.</para>
      </listitem>

      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Hinzufügen von Kommandozeilenschaltern wie zum
	  Beispiel <parameter xmlns:xlink="http://www.w3.org/1999/xlink">-i</parameter> und
	  <parameter xmlns:xlink="http://www.w3.org/1999/xlink">-o</parameter>, sodass wir die Ein- und
	  Ausgabedatei in irgendeiner Reihenfolge angeben oder
	  vielleicht von <varname xmlns:xlink="http://www.w3.org/1999/xlink">stdin</varname> lesen und in eine
	  Datei schreiben können.</para>
      </listitem>

      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Ausgeben einer Gebrauchsanweisung, falls die
	  Kommandozeilenparameter fehlerhaft sind.</para>
      </listitem>
    </itemizedlist>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Ich beabsichtige, diese Verbesserungen dem Leser als
      Übung zu hinterlassen: Sie wissen bereits alles, das Sie
      wissen müssen, um die Verbesserungen
      durchzuführen.</para>
  </sect1>

  <sect1 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="x86-environment">
    <info><title xmlns:xlink="http://www.w3.org/1999/xlink">Die <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark>-Umgebung</title>
      <authorgroup xmlns:xlink="http://www.w3.org/1999/xlink">
	<author xmlns:xlink="http://www.w3.org/1999/xlink"><personname xmlns:xlink="http://www.w3.org/1999/xlink"><firstname xmlns:xlink="http://www.w3.org/1999/xlink">Fabian</firstname><surname xmlns:xlink="http://www.w3.org/1999/xlink">Ruch</surname></personname><contrib xmlns:xlink="http://www.w3.org/1999/xlink">Übersetzt von </contrib></author>
      </authorgroup>
    </info>

    

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Ein entscheidendes Konzept hinter <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark> ist die Umgebung,
      die durch <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">Umgebungsvariablen</emphasis> festgelegt
      wird. Manche werden vom System gesetzt, andere von Ihnen und
      wieder andere von der <application xmlns:xlink="http://www.w3.org/1999/xlink">shell</application> oder
      irgendeinem Programm, das ein anderes lädt.</para>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="x86-find-environment">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Umgebungsvariablen herausfinden</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Ich sagte vorher, dass wenn ein Programm mit der
	Ausführung beginnt, der Stack <varname xmlns:xlink="http://www.w3.org/1999/xlink">argc</varname>
	gefolgt vom durch NULL beendeten <varname xmlns:xlink="http://www.w3.org/1999/xlink">argv</varname>-Array
	und etwas Anderem enthält. Das "etwas Andere" ist die
	<emphasis xmlns:xlink="http://www.w3.org/1999/xlink">Umgebung</emphasis> oder, um genauer zu sein, ein
	durch NULL beendetes Array von Zeigern auf
	<emphasis xmlns:xlink="http://www.w3.org/1999/xlink">Umgebungsvariablen</emphasis>. Davon wird oft als
	<varname xmlns:xlink="http://www.w3.org/1999/xlink">env</varname> gesprochen.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Der Aufbau von <varname xmlns:xlink="http://www.w3.org/1999/xlink">env</varname> entspricht dem von
	<varname xmlns:xlink="http://www.w3.org/1999/xlink">argv</varname>, eine Liste von Speicheradressen gefolgt
	von NULL (<constant xmlns:xlink="http://www.w3.org/1999/xlink">0</constant>). In diesem Fall gibt es kein
	<varname xmlns:xlink="http://www.w3.org/1999/xlink">"envc"</varname>&#8212;wir finden das Ende heraus,
	indem wir nach dem letzten NULL suchen.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Die Variablen liegen normalerweise in der Form
	<varname xmlns:xlink="http://www.w3.org/1999/xlink">name=value</varname> vor, aber manchmal kann der
	<varname xmlns:xlink="http://www.w3.org/1999/xlink">=value</varname>-Teil fehlen. Wir müssen diese
	Möglichkeit in Betracht ziehen.</para>
    </sect2>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="x86-webvar">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">webvars</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Ich könnte Ihnen einfach etwas Code zeigen, der die
	Umgebung in der Art vom <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark>-Befehl
	<application xmlns:xlink="http://www.w3.org/1999/xlink">env</application> ausgibt. Aber ich dachte, dass es
	interessanter sei, ein einfaches CGI-Werkzeug in Assembler zu
	schreiben.</para>

      <sect3 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="x86-cgi">
	<title xmlns:xlink="http://www.w3.org/1999/xlink">CGI: Ein kurzer Überblick</title>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Ich habe eine <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://www.whizkidtech.redprince.net/cgi-bin/tutorial">detaillierte
	  <acronym xmlns:xlink="http://www.w3.org/1999/xlink">CGI</acronym>-Anleitung</link> auf meiner Webseite,
	  aber hier ist ein sehr kurzer Überblick über
	  <acronym xmlns:xlink="http://www.w3.org/1999/xlink">CGI</acronym>:</para>

	<itemizedlist xmlns:xlink="http://www.w3.org/1999/xlink">
	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Der Webserver kommuniziert mit dem
	      <acronym xmlns:xlink="http://www.w3.org/1999/xlink">CGI</acronym>-Programm, indem er
	      <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">Umgebungsvariablen</emphasis> setzt.</para>
	  </listitem>

	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Das <acronym xmlns:xlink="http://www.w3.org/1999/xlink">CGI</acronym>-Programm schreibt seine
	      Ausgabe auf <filename xmlns:xlink="http://www.w3.org/1999/xlink">stdout</filename>. Der Webserver
	      liest von da.</para>
	  </listitem>

	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Die Ausgabe muss mit einem
	      <acronym xmlns:xlink="http://www.w3.org/1999/xlink">HTTP</acronym>-Kopfteil gefolgt von zwei
	      Leerzeilen beginnen.</para>
	  </listitem>

	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Das Programm gibt dann den
	      <acronym xmlns:xlink="http://www.w3.org/1999/xlink">HTML</acronym>-Code oder was für einen
	      Datentyp es auch immer verarbeitet
	      aus.</para>
	  </listitem>

	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <note xmlns:xlink="http://www.w3.org/1999/xlink">
	      <para xmlns:xlink="http://www.w3.org/1999/xlink">Während bestimmte
		<emphasis xmlns:xlink="http://www.w3.org/1999/xlink">Umgebungsvariablen</emphasis> Standardnamen
		benutzen, unterscheiden sich andere, abhängig vom
		Webserver. Dies macht <application xmlns:xlink="http://www.w3.org/1999/xlink">webvars</application>
		zu einem recht nützlichen Werkzeug.</para>
	    </note>
	  </listitem>
	</itemizedlist>
      </sect3>

      <sect3 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="x86-webvars-the-code">
	<title xmlns:xlink="http://www.w3.org/1999/xlink">Der Code</title>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Unser <application xmlns:xlink="http://www.w3.org/1999/xlink">webvars</application>-Programm muss
	  also den <acronym xmlns:xlink="http://www.w3.org/1999/xlink">HTTP</acronym>-Kopfteil gefolgt von etwas
	  <acronym xmlns:xlink="http://www.w3.org/1999/xlink">HTML</acronym>-Auszeichnung versenden. Dann muss es
	  die <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">Umgebungsvariablen</emphasis> eine nach der
	  anderen auslesen und sie als Teil der
	  <acronym xmlns:xlink="http://www.w3.org/1999/xlink">HTML</acronym>-Seite versenden.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Nun der Code. Ich habe Kommentare und Erklärungen
	  direkt in den Code eingefügt:</para>

	<programlisting xmlns:xlink="http://www.w3.org/1999/xlink">
;;;;;;; webvars.asm ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; Copyright (c) 2000 G. Adam Stanislav
; All rights reserved.
;
; Redistribution and use in source and binary forms, with or without
; modification, are permitted provided that the following conditions
; are met:
; 1. Redistributions of source code must retain the above copyright
;    notice, this list of conditions and the following disclaimer.
; 2. Redistributions in binary form must reproduce the above copyright
;    notice, this list of conditions and the following disclaimer in the
;    documentation and/or other materials provided with the distribution.
;
; THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
; ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
; ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
; FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
; DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
; OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
; OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
; SUCH DAMAGE.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; Version 1.0
;
; Started:	 8-Dec-2000
; Updated:	 8-Dec-2000
;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%include	'system.inc'

section	.data
http	db	'Content-type: text/html', 0Ah, 0Ah
	db	'&lt;?xml version="1.0" encoding="utf-8"?&gt;', 0Ah
	db	'&lt;!DOCTYPE html PUBLIC "-//W3C/DTD XHTML Strict//EN" '
	db	'"DTD/xhtml1-strict.dtd"&gt;', 0Ah
	db	'&lt;html xmlns="http://www.w3.org/1999/xhtml" '
	db	'xml.lang="en" lang="en"&gt;', 0Ah
	db	'&lt;head&gt;', 0Ah
	db	'&lt;title&gt;Web Environment&lt;/title&gt;', 0Ah
	db	'&lt;meta name="author" content="G. Adam Stanislav" /&gt;', 0Ah
	db	'&lt;/head&gt;', 0Ah, 0Ah
	db	'&lt;body bgcolor="#ffffff" text="#000000" link="#0000ff" '
	db	'vlink="#840084" alink="#0000ff"&gt;', 0Ah
	db	'&lt;div class="webvars"&gt;', 0Ah
	db	'&lt;h1&gt;Web Environment&lt;/h1&gt;', 0Ah
	db	'&lt;p&gt;The following &lt;b&gt;environment variables&lt;/b&gt; are defined '
	db	'on this web server:&lt;/p&gt;', 0Ah, 0Ah
	db	'&lt;table align="center" width="80" border="0" cellpadding="10" '
	db	'cellspacing="0" class="webvars"&gt;', 0Ah
httplen	equ	$-http
left	db	'&lt;tr&gt;', 0Ah
	db	'&lt;td class="name"&gt;&lt;tt&gt;'
leftlen	equ	$-left
middle	db	'&lt;/tt&gt;&lt;/td&gt;', 0Ah
	db	'&lt;td class="value"&gt;&lt;tt&gt;&lt;b&gt;'
midlen	equ	$-middle
undef	db	'&lt;i&gt;(undefined)&lt;/i&gt;'
undeflen	equ	$-undef
right	db	'&lt;/b&gt;&lt;/tt&gt;&lt;/td&gt;', 0Ah
	db	'&lt;/tr&gt;', 0Ah
rightlen	equ	$-right
wrap	db	'&lt;/table&gt;', 0Ah
	db	'&lt;/div&gt;', 0Ah
	db	'&lt;/body&gt;', 0Ah
	db	'&lt;/html&gt;', 0Ah, 0Ah
wraplen	equ	$-wrap

section	.text
global	_start
_start:
	; First, send out all the http and xhtml stuff that is
	; needed before we start showing the environment
	push	dword httplen
	push	dword http
	push	dword stdout
	sys.write

	; Now find how far on the stack the environment pointers
	; are. We have 12 bytes we have pushed before "argc"
	mov	eax, [esp+12]

	; We need to remove the following from the stack:
	;
	;	The 12 bytes we pushed for sys.write
	;	The  4 bytes of argc
	;	The EAX*4 bytes of argv
	;	The  4 bytes of the NULL after argv
	;
	; Total:
	;	20 + eax * 4
	;
	; Because stack grows down, we need to ADD that many bytes
	; to ESP.
	lea	esp, [esp+20+eax*4]
	cld		; This should already be the case, but let's be sure.

	; Loop through the environment, printing it out
.loop:
	pop	edi
	or	edi, edi	; Done yet?
	je	near .wrap

	; Print the left part of HTML
	push	dword leftlen
	push	dword left
	push	dword stdout
	sys.write

	; It may be tempting to search for the '=' in the env string next.
	; But it is possible there is no '=', so we search for the
	; terminating NUL first.
	mov	esi, edi	; Save start of string
	sub	ecx, ecx
	not	ecx		; ECX = FFFFFFFF
	sub	eax, eax
repne	scasb
	not	ecx		; ECX = string length + 1
	mov	ebx, ecx	; Save it in EBX

	; Now is the time to find '='
	mov	edi, esi	; Start of string
	mov	al, '='
repne	scasb
	not	ecx
	add	ecx, ebx	; Length of name

	push	ecx
	push	esi
	push	dword stdout
	sys.write

	; Print the middle part of HTML table code
	push	dword midlen
	push	dword middle
	push	dword stdout
	sys.write

	; Find the length of the value
	not	ecx
	lea	ebx, [ebx+ecx-1]

	; Print "undefined" if 0
	or	ebx, ebx
	jne	.value

	mov	ebx, undeflen
	mov	edi, undef

.value:
	push	ebx
	push	edi
	push	dword stdout
	sys.write

	; Print the right part of the table row
	push	dword rightlen
	push	dword right
	push	dword stdout
	sys.write

	; Get rid of the 60 bytes we have pushed
	add	esp, byte 60

	; Get the next variable
	jmp	.loop

.wrap:
	; Print the rest of HTML
	push	dword wraplen
	push	dword wrap
	push	dword stdout
	sys.write

	; Return success
	push	dword 0
	sys.exit</programlisting>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Dieser Code erzeugt eine 1.396-Byte große
	  Binärdatei. Das meiste davon sind Daten, d.h., die
	  <acronym xmlns:xlink="http://www.w3.org/1999/xlink">HTML</acronym>-Auszeichnung, die wir versenden
	  müssen.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Assemblieren Sie es wie immer:</para>

	<screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">nasm -f elf webvars.asm</userinput>
<prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">ld -s -o webvars webvars.o</userinput></screen>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Um es zu benutzen, müssen Sie
	  <filename xmlns:xlink="http://www.w3.org/1999/xlink">webvars</filename> auf Ihren Webserver hochladen.
	  Abhängig von Ihrer Webserver-Konfiguration, müssen
	  Sie es vielleicht in einem speziellen
	  <filename xmlns:xlink="http://www.w3.org/1999/xlink">cgi-bin</filename>-Verzeichnis ablegen oder es mit
	  einer <filename xmlns:xlink="http://www.w3.org/1999/xlink">.cgi</filename>-Dateierweiterung
	  versehen.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Schließlich benötigen Sie Ihren Webbrowser,
	  um sich die Ausgabe anzusehen. Um die Ausgabe auf meinem
	  Webserver zu sehen, gehen Sie bitte auf <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://www.int80h.org/webvars/"><filename xmlns:xlink="http://www.w3.org/1999/xlink">http://www.int80h.org/webvars/</filename></link>.
	  Falls Sie neugierig sind, welche zusätzlichen Variablen
	  in einem passwortgeschützten Webverzeichnis vorhanden
	  sind, gehen Sie auf <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://www.int80h.org/private/"><filename xmlns:xlink="http://www.w3.org/1999/xlink">http://www.int80h.org/private/</filename></link>
	  unter Benutzung des Benutzernamens <userinput xmlns:xlink="http://www.w3.org/1999/xlink">asm</userinput>
	  und des Passworts <userinput xmlns:xlink="http://www.w3.org/1999/xlink">programmer</userinput>.</para>
      </sect3>
    </sect2>
  </sect1>

  <sect1 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="x86-files">
    <info><title xmlns:xlink="http://www.w3.org/1999/xlink">Arbeiten mit Dateien</title>
      <authorgroup xmlns:xlink="http://www.w3.org/1999/xlink">
	<author xmlns:xlink="http://www.w3.org/1999/xlink"><personname xmlns:xlink="http://www.w3.org/1999/xlink"><firstname xmlns:xlink="http://www.w3.org/1999/xlink">Paul</firstname><surname xmlns:xlink="http://www.w3.org/1999/xlink">Keller</surname></personname><contrib xmlns:xlink="http://www.w3.org/1999/xlink">Übersetzt von </contrib></author>
	<author xmlns:xlink="http://www.w3.org/1999/xlink"><personname xmlns:xlink="http://www.w3.org/1999/xlink"><firstname xmlns:xlink="http://www.w3.org/1999/xlink">Fabian</firstname><surname xmlns:xlink="http://www.w3.org/1999/xlink">Borschel</surname></personname></author>
      </authorgroup>
    </info>

    

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Wir haben bereits einfache Arbeiten mit Dateien gemacht:
      Wir wissen wie wir sie öffnen und schliessen, oder wie
      man sie mit Hilfe von Buffern liest und schreibt. Aber <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark>
      bietet viel mehr Funktionalität wenn es um Dateien geht.
      Wir werden einige von ihnen in dieser Sektion untersuchen und
      dann mit einem netten Datei Konvertierungs Werkzeug
      abschliessen.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">In der Tat, Lasst uns am Ende beginnen, also mit dem Datei
      Konvertierungs Werkzeug. Es macht Programmieren immer einfacher,
      wenn wir bereits am Anfang wissen was das End Produkt bezwecken
      soll.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Eines der ersten Programme die ich für <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark> schrieb
      war <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ftp://ftp.int80h.org/unix/tuc/"><application xmlns:xlink="http://www.w3.org/1999/xlink">
      tuc</application></link>, ein Text-Zu-<trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark> Datei Konvertierer.
      Es konvertiert eine Text Datei von einem anderen Betriebssystem
      zu einer <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark> Text Datei. Mit anderen Worten, es ändert
      die verschiedenen Arten von Zeilen Begrenzungen zu der Zeilen
      Begrenzungs Konvention von <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark>. Es speichert die Ausgabe in
      einer anderen Datei. Optional konvertiert es eine <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark> Text
      Datei zu einer <acronym xmlns:xlink="http://www.w3.org/1999/xlink">DOS</acronym> Text Datei.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Ich habe <application xmlns:xlink="http://www.w3.org/1999/xlink">tuc</application> sehr oft benutzt,
      aber nur von irgendeinem anderen <acronym xmlns:xlink="http://www.w3.org/1999/xlink">OS</acronym> nach
      <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark> zu konvertieren, niemals anders herum. Ich habe mir immer
      gewünscht das die Datei einfach überschrieben wird
      anstatt das ich die Ausgabe in eine andere Datei senden muss.
      Meistens, habe ich diesen Befehl verwendet:</para>

    <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">tuc myfile tempfile</userinput>
<prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">mv tempfile myfile</userinput></screen>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Es wäre schö ein  <application xmlns:xlink="http://www.w3.org/1999/xlink">ftuc</application>
      zu haben, also, <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">fast tuc</emphasis>, und es so zu
      benutzen:</para>

    <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">ftuc myfile</userinput></screen>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">In diesem Kapitel werden wir dann, <application xmlns:xlink="http://www.w3.org/1999/xlink">ftuc
      </application> in Assembler schreiben (das Original
      <application xmlns:xlink="http://www.w3.org/1999/xlink">tuc</application> ist in C), und verschiedene
      Datei-Orientierte Kernel Dienste in dem Prozess studieren.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Auf erste Sicht, ist so eine Datei Konvertierung sehr
      simpel: Alles was du zu tun hast, ist die Wagenrückläufe
      zu entfernen, richtig?</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Wenn du mit ja geantwortet hast, denk nochmal darüber
      nach: Dieses Vorgehen wird die meiste Zeit funktionieren
      (zumindest mit <acronym xmlns:xlink="http://www.w3.org/1999/xlink">MSDOS</acronym> Text Dateien), aber
      gelegentlich fehlschlagen.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Das Problem ist das nicht alle <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark> Text Dateien ihre
      Zeilen mit einer Wagen Rücklauf / Zeilenvorschub Sequenz
      beenden. Manche benutzen Wagenrücklauf ohne Zeilenvorschub.
      Andere kombinieren mehrere leere Zeilen in einen einzigen
      Wagenrücklauf gefolgt von mehreren Zeilenvorschüben.
      Und so weiter.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Ein Text Datei Konvertierer muss dann also in der Lage sein
      mit allen möglichen Zeilenenden umzugehen:</para>

    <itemizedlist xmlns:xlink="http://www.w3.org/1999/xlink">
      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Wagenrücklauf / Zeilenvorschub</para>
      </listitem>

      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Wagenrücklauf</para>
      </listitem>

      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Zeilenvorschub / Wagenrücklauf</para>
      </listitem>

      <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Zeilenvorschub</para>
      </listitem>
    </itemizedlist>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Es sollte außerdem in der Lage sein mit Dateien
      umzugehen die irgendeine Art von Kombination der oben stehenden
      Möglichkeiten verwendet. (z.B., Wagenrücklauf gefolgt
      von mehreren Zeilenvorschüben).</para>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="x86-finite-state-machine">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Endlicher Zustandsautomat</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Das Problem wird einfach gelöst in dem man eine
	Technik benutzt die sich <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">Endlicher
	Zustandsautomat</emphasis> nennt, ursprünglich wurde sie
	von den Designern digitaler elektronischer Schaltkreise
	entwickelt. Eine <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">Endlicher Zustandsautomat</emphasis>
	ist ein digitaler Schaltkreis dessen Ausgabe nicht nur von der
	Eingabe abhängig ist sondern auch von der vorherigen
	Eingabe, d.h., von seinem Status. Der Mikroprozessor ist ein
	Beispiel für einen <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">Endlichen Zustandsautomaten
	</emphasis>: Unser Assembler Sprach Code wird zu
	Maschinensprache übersetzt in der manche Assembler Sprach
	Codes ein einzelnes Byte produzieren, während andere
	mehrere Bytes produzieren. Da der Microprozessor die Bytes
	einzeln aus dem Speicher liest, ändern manche nur seinen
	Status anstatt eine Ausgabe zu produzieren. Wenn alle Bytes
	eines OP Codes gelesen wurden, produziert der Mikroprozessor
	eine Ausgabe, oder ändert den Wert eines Registers,
	etc.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Aus diesem Grund, ist jede Software eigentlich nur eine
	Sequenz von Status Anweisungen für den Mikroprozessor.
	Dennoch, ist das Konzept eines <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">Endlichen
	Zustandsautomaten</emphasis> auch im Software Design sehr
	hilfreich.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Unser Text Datei Konvertierer kann als
	<emphasis xmlns:xlink="http://www.w3.org/1999/xlink">Endlicher Zustandsautomat</emphasis> mit 3
	möglichen Stati desgined werden. Wir könnten diese
	von 0-2 benennen, aber es wird uns das Leben leichter machen
	wenn wir ihnen symbolische Namen geben:</para>

      <itemizedlist xmlns:xlink="http://www.w3.org/1999/xlink">
	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink"><symbol xmlns:xlink="http://www.w3.org/1999/xlink">ordinary</symbol></para>
	</listitem>

	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink"><symbol xmlns:xlink="http://www.w3.org/1999/xlink">cr</symbol></para>
	</listitem>

	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink"><symbol xmlns:xlink="http://www.w3.org/1999/xlink">lf</symbol></para>
	</listitem>
      </itemizedlist>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Unser Programm wird in dem <symbol xmlns:xlink="http://www.w3.org/1999/xlink">ordinary</symbol> Status
	starten. Während dieses Status, hängt die Aktion des
	Programms von seiner Eingabe wie folgt ab:</para>

      <itemizedlist xmlns:xlink="http://www.w3.org/1999/xlink">
	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Wenn die Eingabe etwas anderes als ein
	    Wagenrücklauf oder einem Zeilenvorschub ist, wird die
	    Eingabe einfach nur an die Ausgabe geschickt. Der Status
	    bleibt unverändert.</para>
	</listitem>

        <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Wenn die Eingabe ein Wagenrücklauf ist, wird der
	    Status auf <symbol xmlns:xlink="http://www.w3.org/1999/xlink">cr</symbol> gesetzt. Die Eingabe wird
	    dann verworfen, d.h., es entsteht keine Ausgabe.</para>
	</listitem>

        <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Wenn die Eingabe ein Zeilenvorschub ist, wird der
	    Status auf <symbol xmlns:xlink="http://www.w3.org/1999/xlink">lf</symbol> gesetzt. Die Eingabe wird
	    dann verworfen.</para>
	</listitem>
      </itemizedlist>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Wann immer wir in dem <symbol xmlns:xlink="http://www.w3.org/1999/xlink">cr</symbol> Status sind,
	ist das weil die letzte Eingabe ein Wagenrücklauf war,
	welcher nicht verarbeitet wurde. Was unsere Software in
	diesem Status macht hängt von der aktuellen Eingabe
	ab:</para>

      <itemizedlist xmlns:xlink="http://www.w3.org/1999/xlink">
	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Wenn die Eingabe irgendetwas anderes als ein
	    Wagenrücklauf oder ein Zeilenvorschub ist, dann gib
	    einen Zeilenvorschub aus, dann gib die Eingabe aus und
	    dann ändere den Status zu
	    <symbol xmlns:xlink="http://www.w3.org/1999/xlink">ordinary</symbol>.</para>
	</listitem>

	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Wenn die Eingabe ein Wagenrücklauf ist, haben
	    wir zwei (oder mehr) Wagenrückläufe in einer
	    Reihe. Wir verwerfen die Eingabe, wir geben einen
	    Zeilenvorschub aus und lassen den Status
	    unverändert.</para>
	</listitem>

	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Wenn die Eingabe ein Zeilenvorschub ist, geben wir
	    den Zeilenvorschub aus und ändern den Status zu
	    <symbol xmlns:xlink="http://www.w3.org/1999/xlink">ordinary</symbol>. Achte darauf, dass das nicht
	    das gleiche wie in dem Fall oben drüber ist &#8211;
	    würden wir versuchen beide zu kombinieren,
	    würden wir zwei Zeilenvorschübe anstatt einen
	    ausgeben.</para>
	</listitem>
      </itemizedlist>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Letztendlich, sind wir in dem <symbol xmlns:xlink="http://www.w3.org/1999/xlink">lf</symbol> Status
	nachdem wir einen Zeilenvorschub empfangen haben der nicht
	nach einem Wagenrücklauf kam. Das wird passieren wenn
	unsere Datei bereits im <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark> Format ist, oder jedesmal wenn
	mehrere Zeilen in einer Reihe durch einen einzigen
	Wagenrücklauf gefolgt von mehreren Zeilenvorschüben
	ausgedrückt wird, oder wenn die Zeile mit einer
	Zeilenvorschub / Wagenrücklauf Sequenz endet. Wir
	sollten mit unserer Eingabe in diesem Status folgendermaßen
	umgehen:</para>

      <itemizedlist xmlns:xlink="http://www.w3.org/1999/xlink">
	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Wenn die Eingabe irgendetwas anderes als ein
	    Wagenrücklauf oder ein Zeilenvorschub ist, geben wir
	    einen Zeilenvorschub aus, geben dann  die Eingabe aus und
	    ändern dann den Status zu <symbol xmlns:xlink="http://www.w3.org/1999/xlink">ordinary</symbol>.
	    Das ist exakt die gleiche Aktion wie in dem
	    <symbol xmlns:xlink="http://www.w3.org/1999/xlink">cr</symbol> Status nach dem Empfangen der selben
	    Eingabe.</para>
	</listitem>

	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Wenn die Eingabe ein Wagenrücklauf ist, verwerfen
	    wir die Eingabe, geben einen Zeilenvorschub aus und
	    ändern dann den Status zu <symbol xmlns:xlink="http://www.w3.org/1999/xlink">ordinary</symbol>.
	    </para>
	</listitem>

	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Wenn die Eingabe ein Zeilenvorschub ist, geben wir den
	    Zeilenvorschub aus und lassen den Status unverändert.
	    </para>
	</listitem>
      </itemizedlist>

      <sect3 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="x86-final-state">
	<title xmlns:xlink="http://www.w3.org/1999/xlink">Der Endgültige Status</title>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Der obige <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">Endliche Zustandsautomat</emphasis>
	  funktioniert für die gesamte Datei, aber lässt die
	  Möglichkeit das die letzte Zeile ignoriert wird. Das
	  wird jedesmal passieren wenn die Datei mit einem einzigen
	  Wagenrücklauf oder einem einzigen Zeilenvorschub endet.
	  Daran habe ich nicht gedacht als ich
	  <application xmlns:xlink="http://www.w3.org/1999/xlink">tuc</application> schrieb, nur um festzustellen,
	  daß das letzte Zeilenende gelegentlich weggelassen
	  wird.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Das Problem wird einfach dadurch gelöst, indem man
	  den Status überprüft nachdem die gesamte Datei
	  verarbeitet wurde. Wenn der Status nicht
	  <symbol xmlns:xlink="http://www.w3.org/1999/xlink">ordinary</symbol> ist, müssen wir nur den
	  letzten Zeilenvorschub ausgeben.</para>

	<note xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Nachdem wir unseren Algorithmus nun als einen
	    <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">Endlichen Zustandsautomaten</emphasis> formuliert
	    haben, könnten wir einfach einen festgeschalteten
	    digitalen elektronischen Schaltkreis (einen "Chip")
	    designen, der die Umwandlung für uns übernimmt.
	    Natürlich wäre das sehr viel teurer, als ein
	    Assembler Programm zu schreiben.</para>
	</note>
      </sect3>

      <sect3 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="x86-tuc-counter">
	<title xmlns:xlink="http://www.w3.org/1999/xlink">Der Ausgabe Zähler</title>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Weil unser Datei Konvertierungs Programm
	  möglicherweise zwei Zeichen zu einem kombiniert,
	  müssen wir einen Ausgabe Zähler verwenden. Wir
	  initialisieren den Zähler zu <constant xmlns:xlink="http://www.w3.org/1999/xlink">0</constant>
	  und erhöhen ihn jedes mal wenn wir ein Zeichen an die
	  Ausgabe schicken. Am Ende des Programms, wird der
	  Zähler uns sagen auf welche Grösse wir die Datei
	  setzen müssen.</para>
      </sect3>
    </sect2>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="x86-software-fsm">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Implementieren von EZ als Software</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Der schwerste Teil beim arbeiten mit einer
	<emphasis xmlns:xlink="http://www.w3.org/1999/xlink">Endlichen Zustandsmaschine</emphasis> ist das
	analysieren des Problems und dem ausdrücken als eine
	<emphasis xmlns:xlink="http://www.w3.org/1999/xlink">Endliche Zustandsmaschine</emphasis>. That geschafft,
	schreibt sich die Software fast wie von selbst.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">In eine höheren Sprache, wie etwa C, gibt es mehrere
	Hauptansätze. Einer wäre ein <function xmlns:xlink="http://www.w3.org/1999/xlink" role="statement">switch</function> Angabe zu verwenden die
	auswählt welche Funktion genutzt werden soll. Zum
	Beispiel,</para>

      <programlisting xmlns:xlink="http://www.w3.org/1999/xlink">
	switch (state) {
	default:
	case REGULAR:
		regular(inputchar);
		break;
	case CR:
		cr(inputchar);
		break;
	case LF:
		lf(inputchar);
		break;
	}
      </programlisting>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Ein anderer Ansatz ist es ein Array von Funktions Zeigern
	zu benutzen, etwa wie folgt:</para>

      <programlisting xmlns:xlink="http://www.w3.org/1999/xlink">
	(output[state])(inputchar);
      </programlisting>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Noch ein anderer ist es aus <varname xmlns:xlink="http://www.w3.org/1999/xlink">state</varname> einen
	Funktions Zeiger zu machen und ihn zu der entsprechenden
	Funktion zeigen zu lassen:</para>

      <programlisting xmlns:xlink="http://www.w3.org/1999/xlink">
	(*state)(inputchar);
      </programlisting>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Das ist der Ansatz den wir in unserem Programm verwenden
	werden, weil es in Assembler sehr einfach und schnell geht.
	Wir werden einfach die Adresse der Prozedur in <varname xmlns:xlink="http://www.w3.org/1999/xlink" role="register">EBX</varname> speichern und dann einfach das
	ausgeben:</para>

      <programlisting xmlns:xlink="http://www.w3.org/1999/xlink">
	call	ebx
      </programlisting>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Das ist wahrscheinlich schneller als die Adresse im Code
	zu hardcoden weil der Mikroprozessor die Adresse nicht aus dem
	Speicher lesen muss&#8212;es ist bereits in einer der Register
	gespeichert. Ich sagte <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">wahrscheinlich</emphasis>
	weil durch das Cachen neuerer Mikroprozessoren beide Varianten
	in etwa gleich schnell sind.</para>
    </sect2>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="memory-mapped-files">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Speicher abgebildete Dateien</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Weil unser Programm nur mit einzelnen Dateien
	funktioniert, können wir nicht den Ansatz verwedenden der
	zuvor funktioniert hat, d.h., von einer Eingabe Datei zu lesen
	und in eine Ausgabe Datei zu schreiben.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink"><trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark> erlaubt es uns eine Datei, oder einen Bereich einer
	Datei, in den Speicher abzubilden. Um das zu tun, müssen
	wir zuerst eine Datei mit den entsprechenden Lese/Schreib
	Flags öffnen. Dann benutzen wir den <function xmlns:xlink="http://www.w3.org/1999/xlink" role="syscall">mmap</function> system call um sie in den
	Speicher abzubilden. Ein Vorteil von <function xmlns:xlink="http://www.w3.org/1999/xlink" role="syscall">mmap</function> ist, das es automatisch mit
	virtuellem Speicher arbeitet: Wir können mehr von der
	Datei im Speicher abbilden als wir überhaupt
	physikalischen Speicher zur Verfügung haben, noch immer
	haben wir aber durch normale OP Codes wie <function xmlns:xlink="http://www.w3.org/1999/xlink" role="opcode">mov</function>, <function xmlns:xlink="http://www.w3.org/1999/xlink" role="opcode">lods</function>, und <function xmlns:xlink="http://www.w3.org/1999/xlink" role="opcode">stos</function> Zugriff darauf. Egal welche
	Änderungen wir an dem Speicherabbild der Datei vornehmen,
	sie werden vom System in die Datei geschrieben. Wir
	müssen die Datei nicht offen lassen: So lange sie
	abgebildet bleibt, können wir von ihr lesen und in sie
	schreiben.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Ein 32-bit Intel Mikroprozessor kann auf bis zu vier
	Gigabyte Speicher zugreifen &#8211; physisch oder virtuell.
	Das FreeBSD System erlaubt es uns bis zu der Hälfte
	für die Datei Abbildung zu verwenden.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Zur Vereinfachung, werden wir in diesem Tutorial nur
	Dateien konvertieren die in ihrere Gesamtheit im Speicher
	abgebildet werden können. Es gibt wahrscheinlich nicht
	all zu viele Text Dateien die eine Grösse von zwei
	Gigabyte überschreiben. Falls unser Programm doch auf
	eine trifft, wird es einfach eine Meldung anzeigen mit dem
	Vorschlag das originale <application xmlns:xlink="http://www.w3.org/1999/xlink">tuc</application> statt
	dessen zu verwenden.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Wenn du deine Kopie von
	<filename xmlns:xlink="http://www.w3.org/1999/xlink">syscalls.master</filename> überprüfst,
	wirst du zwei verschiedene Systemaufrufe
	finden die sich <function xmlns:xlink="http://www.w3.org/1999/xlink" role="syscall">mmap</function>
	nennen. Das kommt von der Entwicklung von <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark>: Es gab das
	traditionelle <acronym xmlns:xlink="http://www.w3.org/1999/xlink">BSD</acronym> <function xmlns:xlink="http://www.w3.org/1999/xlink" role="syscall">mmap</function>, Systemaufruf 71. Dieses wurde
	durch das <acronym xmlns:xlink="http://www.w3.org/1999/xlink"><trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">POSIX</trademark></acronym> <function xmlns:xlink="http://www.w3.org/1999/xlink" role="syscall">mmap</function> ersetzt, Systemaufruf 197. Das
	FreeBSD System unterstützt beide, weil ältere
	Programme mit der originalen <acronym xmlns:xlink="http://www.w3.org/1999/xlink">BSD</acronym> Version
	geschrieben wurden. Da neue Software die
	<acronym xmlns:xlink="http://www.w3.org/1999/xlink"><trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">POSIX</trademark></acronym> Version nutzt, werden wir diese
	auch verwenden.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Die <filename xmlns:xlink="http://www.w3.org/1999/xlink">syscalls.master</filename> Datei zeigt die
	<acronym xmlns:xlink="http://www.w3.org/1999/xlink"><trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">POSIX</trademark></acronym> Version wie folgt:</para>

      <programlisting xmlns:xlink="http://www.w3.org/1999/xlink">
197	STD	BSD	{ caddr_t mmap(caddr_t addr, size_t len, int prot, \
			    int flags, int fd, long pad, off_t pos); }
      </programlisting>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Das weicht etwas von dem ab was
	<citerefentry xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">mmap</refentrytitle>
	<manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">2</manvolnum></citerefentry> sagt. Das ist weil
	<citerefentry xmlns:xlink="http://www.w3.org/1999/xlink"><refentrytitle xmlns:xlink="http://www.w3.org/1999/xlink">mmap</refentrytitle>
	<manvolnum xmlns:xlink="http://www.w3.org/1999/xlink">2</manvolnum></citerefentry> die C Version
	beschreibt.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Der Unterschiede liegt in dem <varname xmlns:xlink="http://www.w3.org/1999/xlink">long pad</varname>
	Argument, welches in der C Version nicht vorhanden ist. Wie
	auch immer, der FreeBSD Systemaufruf fügt einen 32-bit
	Block ein nachdem es ein 64-Bit Argument auf den Stack
	ge<function xmlns:xlink="http://www.w3.org/1999/xlink" role="opcode">push</function>t hat. In diesem
	Fall, ist <varname xmlns:xlink="http://www.w3.org/1999/xlink">off_t</varname> ein 64-Bit Wert.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Wenn wir fertig sind mit dem Arbeiten einer im Speicher
	abgebildeten Datei, entfernen wir das Speicherabbild mit dem
	<function xmlns:xlink="http://www.w3.org/1999/xlink" role="syscall">munmap</function> Systemaufruf:</para>

      <tip xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Für eine detailliert Behandlung von <function xmlns:xlink="http://www.w3.org/1999/xlink" role="syscall">mmap</function>, sieh in W. Richard Stevens'
	  <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://www.int80h.org/cgi-bin/isbn?isbn=0130810819">
	  Unix Network Programming, Volume 2, Chapter 12</link>
	  nach.</para>
      </tip>
    </sect2>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="x86-file-size">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Feststellen der Datei Grösse</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Weil wir <function xmlns:xlink="http://www.w3.org/1999/xlink" role="syscall">mmap</function> sagen
	müssen wie viele Bytes von Datei wir im Speicher abbilden
	wollen und wir außerdem die gesamte Datei abbilden wollen,
	müssen wir die Grösse der Datei feststellen.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Wir können den <function xmlns:xlink="http://www.w3.org/1999/xlink" role="syscall">fstat</function>	Systemaufruf verwenden um alle
	Informationen über eine geöffnete Datei zu erhalten
	die uns das System geben kann. Das beinhaltet die Datei
	Grösse.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Und wieder, zeigt uns <filename xmlns:xlink="http://www.w3.org/1999/xlink">syscalls.master</filename>
	zwei Versionen von <function xmlns:xlink="http://www.w3.org/1999/xlink" role="syscall">fstat</function>,
	eine traditionelle (Systemaufruf 62), und eine
	<acronym xmlns:xlink="http://www.w3.org/1999/xlink"><trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">POSIX</trademark></acronym> (Systemaufruf 189) Variante.
	Natürlich, verwenden wir die <acronym xmlns:xlink="http://www.w3.org/1999/xlink"><trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">POSIX</trademark></acronym>
	Version:</para>

      <programlisting xmlns:xlink="http://www.w3.org/1999/xlink">
189	STD	POSIX	{ int fstat(int fd, struct stat *sb); }
      </programlisting>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Das ist ein sehr unkomplizierter Aufruf: Wir
	übergeben ihm die Adresse einer
	<varname xmlns:xlink="http://www.w3.org/1999/xlink" remap="structname">stat</varname> Structure und den Deskriptor
	einer geöffneten Datei. Es wird den Inhalt der
	<varname xmlns:xlink="http://www.w3.org/1999/xlink" remap="structname">stat</varname> Struktur ausfüllen.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Ich muss allerdings sagen, das ich versucht habe die
	<varname xmlns:xlink="http://www.w3.org/1999/xlink" remap="structname">stat</varname> Struktur in dem
	<varname xmlns:xlink="http://www.w3.org/1999/xlink">.bss</varname> Bereich zu deklarieren, und
	<function xmlns:xlink="http://www.w3.org/1999/xlink" role="syscall">fstat</function> mochte es nicht:
	Es setzte das Carry Flag welches einen Fehler anzeigt.
	Nachdem ich den Code veränderte so dass er die Struktur
	auf dem Stack anlegt, hat alles gut funktioniert.</para>
    </sect2>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="x86-ftruncate">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Ändern der Dateigrösse</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Dadurch das unser Programm
      Wagenrücklauf/Zeilenvorschub-Sequenzen in einfache
      Zeilenvorschübe zusammenfassen könnte, könnte
      unsere Ausgabe kleiner sein als unsere Eingabe. Und da wir die
      Ausgabe in dieselbe Datei um, aus der wir unsere Eingabe
      erhalten, müssen wir eventuell die Dateigrösse
      anpassen.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Der Systemaufruf <function xmlns:xlink="http://www.w3.org/1999/xlink" role="syscall">ftruncate</function> erlaubt uns, dies zu tun.
      Abgesehen von dem etwas unglücklich gewählten Namen
      <function xmlns:xlink="http://www.w3.org/1999/xlink" role="syscall">ftruncate</function> können wir
      mit dieser Funktion eine Datei vergrössern, oder
      verkleinern.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Und ja, wir werden zwei Versionen von <function xmlns:xlink="http://www.w3.org/1999/xlink" role="syscall">ftruncate</function> in
      <filename xmlns:xlink="http://www.w3.org/1999/xlink">syscalls.master</filename> finden, eine ältere
      (130) und eine neuere (201). Wir werden die neuere Version
      verwenden:</para>

      <programlisting xmlns:xlink="http://www.w3.org/1999/xlink">
201	STD	BSD	{ int ftruncate(int fd, int pad, off_t length); }
      </programlisting>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Beachten Sie bitte, dass hier wieder <varname xmlns:xlink="http://www.w3.org/1999/xlink">int
	pad</varname> verwendet wird.</para>
    </sect2>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="x86-ftuc">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">ftuc</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Wir wissen jetzt alles nötige, um
      <application xmlns:xlink="http://www.w3.org/1999/xlink">ftuc</application> zu schreiben. Wir beginnen,
      indem wir ein paar neue Zeilen der Datei
      <filename xmlns:xlink="http://www.w3.org/1999/xlink">system.inc</filename> hinzufügen. Als erstes
      definieren wir irgendwo am Anfang der Datei einige Konstanten
      und Strukturen:</para>

      <programlisting xmlns:xlink="http://www.w3.org/1999/xlink">
;;;;;;; open flags
%define	O_RDONLY	0
%define	O_WRONLY	1
%define	O_RDWR	2

;;;;;;; mmap flags
%define	PROT_NONE	0
%define	PROT_READ	1
%define	PROT_WRITE	2
%define	PROT_EXEC	4
;;
%define	MAP_SHARED	0001h
%define	MAP_PRIVATE	0002h

;;;;;;; stat structure
struc	stat
st_dev		resd	1	; = 0
st_ino		resd	1	; = 4
st_mode		resw	1	; = 8, size is 16 bits
st_nlink	resw	1	; = 10, ditto
st_uid		resd	1	; = 12
st_gid		resd	1	; = 16
st_rdev		resd	1	; = 20
st_atime	resd	1	; = 24
st_atimensec	resd	1	; = 28
st_mtime	resd	1	; = 32
st_mtimensec	resd	1	; = 36
st_ctime	resd	1	; = 40
st_ctimensec	resd	1	; = 44
st_size		resd	2	; = 48, size is 64 bits
st_blocks	resd	2	; = 56, ditto
st_blksize	resd	1	; = 64
st_flags	resd	1	; = 68
st_gen		resd	1	; = 72
st_lspare	resd	1	; = 76
st_qspare	resd	4	; = 80
endstruc
      </programlisting>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Wir definieren die neuen Systemaufrufe:</para>

      <programlisting xmlns:xlink="http://www.w3.org/1999/xlink">
%define	SYS_mmap	197
%define	SYS_munmap	73
%define	SYS_fstat	189
%define	SYS_ftruncate	201
      </programlisting>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Wir fügen die Makros hinzu:</para>

      <programlisting xmlns:xlink="http://www.w3.org/1999/xlink">
%macro	sys.mmap	0
	system	SYS_mmap
%endmacro

%macro	sys.munmap	0
	system	SYS_munmap
%endmacro

%macro	sys.ftruncate	0
	system	SYS_ftruncate
%endmacro

%macro	sys.fstat	0
	system	SYS_fstat
%endmacro
      </programlisting>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Und hier ist unser Code:</para>

      <programlisting xmlns:xlink="http://www.w3.org/1999/xlink">
;;;;;;; Fast Text-to-Unix Conversion (ftuc.asm) ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;; Started:	21-Dec-2000
;; Updated:	22-Dec-2000
;;
;; Copyright 2000 G. Adam Stanislav.
;; All rights reserved.
;;
;;;;;;; v.1 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
%include	'system.inc'

section	.data
	db	'Copyright 2000 G. Adam Stanislav.', 0Ah
	db	'All rights reserved.', 0Ah
usg	db	'Usage: ftuc filename', 0Ah
usglen	equ	$-usg
co	db	"ftuc: Can't open file.", 0Ah
colen	equ	$-co
fae	db	'ftuc: File access error.', 0Ah
faelen	equ	$-fae
ftl	db	'ftuc: File too long, use regular tuc instead.', 0Ah
ftllen	equ	$-ftl
mae	db	'ftuc: Memory allocation error.', 0Ah
maelen	equ	$-mae

section	.text

align 4
memerr:
	push	dword maelen
	push	dword mae
	jmp	short error

align 4
toolong:
	push	dword ftllen
	push	dword ftl
	jmp	short error

align 4
facerr:
	push	dword faelen
	push	dword fae
	jmp	short error

align 4
cantopen:
	push	dword colen
	push	dword co
	jmp	short error

align 4
usage:
	push	dword usglen
	push	dword usg

error:
	push	dword stderr
	sys.write

	push	dword 1
	sys.exit

align 4
global	_start
_start:
	pop	eax		; argc
	pop	eax		; program name
	pop	ecx		; file to convert
	jecxz	usage

	pop	eax
	or	eax, eax	; Too many arguments?
	jne	usage

	; Open the file
	push	dword O_RDWR
	push	ecx
	sys.open
	jc	cantopen

	mov	ebp, eax	; Save fd

	sub	esp, byte stat_size
	mov	ebx, esp

	; Find file size
	push	ebx
	push	ebp		; fd
	sys.fstat
	jc	facerr

	mov	edx, [ebx + st_size + 4]

	; File is too long if EDX != 0 ...
	or	edx, edx
	jne	near toolong
	mov	ecx, [ebx + st_size]
	; ... or if it is above 2 GB
	or	ecx, ecx
	js	near toolong

	; Do nothing if the file is 0 bytes in size
	jecxz	.quit

	; Map the entire file in memory
	push	edx
	push	edx		; starting at offset 0
	push	edx		; pad
	push	ebp		; fd
	push	dword MAP_SHARED
	push	dword PROT_READ | PROT_WRITE
	push	ecx		; entire file size
	push	edx		; let system decide on the address
	sys.mmap
	jc	near memerr

	mov	edi, eax
	mov	esi, eax
	push	ecx		; for SYS_munmap
	push	edi

	; Use EBX for state machine
	mov	ebx, ordinary
	mov	ah, 0Ah
	cld

.loop:
	lodsb
	call	ebx
	loop	.loop

	cmp	ebx, ordinary
	je	.filesize

	; Output final lf
	mov	al, ah
	stosb
	inc	edx

.filesize:
	; truncate file to new size
	push	dword 0		; high dword
	push	edx		; low dword
	push	eax		; pad
	push	ebp
	sys.ftruncate

	; close it (ebp still pushed)
	sys.close

	add	esp, byte 16
	sys.munmap

.quit:
	push	dword 0
	sys.exit

align 4
ordinary:
	cmp	al, 0Dh
	je	.cr

	cmp	al, ah
	je	.lf

	stosb
	inc	edx
	ret

align 4
.cr:
	mov	ebx, cr
	ret

align 4
.lf:
	mov	ebx, lf
	ret

align 4
cr:
	cmp	al, 0Dh
	je	.cr

	cmp	al, ah
	je	.lf

	xchg	al, ah
	stosb
	inc	edx

	xchg	al, ah
	; fall through

.lf:
	stosb
	inc	edx
	mov	ebx, ordinary
	ret

align 4
.cr:
	mov	al, ah
	stosb
	inc	edx
	ret

align 4
lf:
	cmp	al, ah
	je	.lf

	cmp	al, 0Dh
	je	.cr

	xchg	al, ah
	stosb
	inc	edx

	xchg	al, ah
	stosb
	inc	edx
	mov	ebx, ordinary
	ret

align 4
.cr:
	mov	ebx, ordinary
	mov	al, ah
	; fall through

.lf:
	stosb
	inc	edx
	ret
      </programlisting>

      <warning xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Verwenden Sie dieses Programm nicht mit Dateien, die
	  sich auf Datenträgern befinden, welche mit
	  <acronym xmlns:xlink="http://www.w3.org/1999/xlink"><trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">MS-DOS</trademark></acronym> oder <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">Windows</trademark> formatiert
	  wurden. Anscheinend gibt es im Code von FreeBSD einen
	  subtilen Bug, wenn <function xmlns:xlink="http://www.w3.org/1999/xlink" role="syscall">mmap</function>
	  auf solchen Datenträgern verwendet wird: Wenn die Datei
	  eine bestimmte Grösse überschreitet, füllt
	  <function xmlns:xlink="http://www.w3.org/1999/xlink" role="syscall">mmap</function> den Speicher mit
	  lauter Nullen, und überschreibt damit anschliessend den
	  Dateiinhalt.</para>
      </warning>
    </sect2>
  </sect1>

  <sect1 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="x86-one-pointed-mind">
    <info><title xmlns:xlink="http://www.w3.org/1999/xlink">One-Pointed Mind</title>
      <authorgroup xmlns:xlink="http://www.w3.org/1999/xlink">
	<author xmlns:xlink="http://www.w3.org/1999/xlink"><personname xmlns:xlink="http://www.w3.org/1999/xlink"><firstname xmlns:xlink="http://www.w3.org/1999/xlink">Daniel</firstname><surname xmlns:xlink="http://www.w3.org/1999/xlink">Seuffert</surname></personname><contrib xmlns:xlink="http://www.w3.org/1999/xlink">Übersetzt von </contrib></author>
      </authorgroup>
    </info>

    

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Als ein Zen-Schüler liebe ich die Idee eines
      fokussierten Bewußtseins: Tu nur ein Ding zur gleichen
      Zeit, aber mache es richtig.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Das ist ziemlich genau die gleiche Idee, welche <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark>
      richtig funktionieren lässt. Während eine typische
      <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">Windows</trademark>-Applikation versucht alles Vorstellbare zu tun (und
      daher mit Fehler durchsetzt ist), versucht eine
      <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark>-Applikation nur eine Funktion zu erfüllen und das
      gut.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Der typische <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark>-Nutzer stellt sich sein eigenes System
      durch Shell-Skripte zusammen, die er selbst schreibt, und welche
      die Vorteile bestehender Applikationen dadurch kombinieren,
      indem sie die Ausgabe eines Programmes als Eingabe in ein
      anderes Programm durch eine Pipe übergeben.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Wenn Sie ihre eigene <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark>-Software schreiben, ist es
      generell eine gute Idee zu betrachten, welcher Teil der
      Problemlösung durch bestehende Programme bewerkstelligt
      werden kann. Man schreibt nur die Programme selbst, für die
      keine vorhandene Lösung existiert.</para>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="x86-csv">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">CSV</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Ich will dieses Prinzip an einem besonderen Beispiel
	aus der realen Welt demonstrieren, mit dem ich kürzlich
	konfrontiert wurde:</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Ich mußte jeweils das elfte Feld von jedem
	Datensatz aus einer Datenbank extrahieren, die ich von einer
	Webseite heruntergeladen hatte. Die Datenbank war eine
	<acronym xmlns:xlink="http://www.w3.org/1999/xlink">CSV</acronym>-Datei, d.h. eine Liste von
	<emphasis xmlns:xlink="http://www.w3.org/1999/xlink">Komma-getrennten Werten</emphasis>. Dies ist ein
	ziemlich gewöhnliches Format für den Code-Austausch
	zwischen Menschen, die eine unterschiedliche
	Datenbank-Software nutzen.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Die erste Zeile der Datei enthält eine Liste der
	Felder durch Kommata getrennt. Der Rest der Datei enthält
	die einzelnen Datensätze mit durch Kommata getrennten
	Werten in jeder Zeile.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Ich versuchte <application xmlns:xlink="http://www.w3.org/1999/xlink">awk</application> unter
	Nutzung des Kommas als Trenner. Da aber einige Zeilen durch in
	Bindestriche gesetzte Kommata getrennt waren, extrahierte
	<application xmlns:xlink="http://www.w3.org/1999/xlink">awk</application> das falsche Feld aus diesen
	Zeilen.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Daher mußte ich meine eigene Software schreiben,
	um das elfte Feld aus der <acronym xmlns:xlink="http://www.w3.org/1999/xlink">CSV</acronym>-Datei
	auszulesen. Aber durch Anwendung der <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark>-Philosophie
	mußte ich nur einen einfachen Filter schreiben, das
	Folgende tat:</para>

      <itemizedlist xmlns:xlink="http://www.w3.org/1999/xlink">
	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Entferne die erste Zeile aus der Datei.</para>
	</listitem>

	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Ändere alle Kommata ohne Anführungszeichen
	    in einen anderen Buchstaben.</para>
	</listitem>

	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Entferne alle Anführungszeichen.</para>
	</listitem>
      </itemizedlist>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Streng genommen könnte ich
	<application xmlns:xlink="http://www.w3.org/1999/xlink">sed</application> benutzen, um die erste Zeile
	der Datei zu entfernen, aber das zu Bewerkstelligen war in
	meinem Programm sehr einfach, also entschloss ich mich dazu
	und reduzierte dadurch die Größe der
	Pipeline.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Unter Berücksichtigung aller Faktoren kostete mich
	das Schreiben dieses Programmes ca. 20 Minuten. Das Schreiben
	eines Programmes, welches jeweils das elfte Feld aus einer
	<acronym xmlns:xlink="http://www.w3.org/1999/xlink">CSV</acronym>-Datei extrahiert hätte wesentlich
	länger gedauert und ich hätte es nicht
	wiederverwenden können, um ein anderes Feld aus irgendeiner
	anderen Datenbank zu extrahieren.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Diesmal entschied ich mich dazu, etwas mehr Arbeit zu
	investieren, als man normalerweise für ein typisches
	Tutorial verwenden würde:</para>

      <itemizedlist xmlns:xlink="http://www.w3.org/1999/xlink">
	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Es parst die Kommandozeilen nach Optionen.</para>
	</listitem>

	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Es zeigt die richtige Nutzung an, falls es ein
	    falsches Argument findet.</para>
	</listitem>

	<listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Es gibt vernünftige Fehlermeldungen aus.</para>
	</listitem>
      </itemizedlist>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Hier ist ein Beispiel für seine Nutzung:</para>

      <screen xmlns:xlink="http://www.w3.org/1999/xlink">Usage: csv [-t&lt;delim&gt;] [-c&lt;comma&gt;] [-p] [-o &lt;outfile&gt;] [-i &lt;infile&gt;]</screen>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Alle Parameter sind optional und können in beliebiger
	Reihenfolge auftauchen.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Der <parameter xmlns:xlink="http://www.w3.org/1999/xlink">-t</parameter>-Parameter legt fest, was
	zu die Kommata zu ersetzen sind. Der <constant xmlns:xlink="http://www.w3.org/1999/xlink">tab</constant>
	ist die Vorgabe hierfür. Zum Beispiel wird
	<parameter xmlns:xlink="http://www.w3.org/1999/xlink">-t;</parameter> alle unquotierten Kommata mit
	Semikolon ersetzen.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Ich brauche die <parameter xmlns:xlink="http://www.w3.org/1999/xlink">-c</parameter>-Option nicht,
	aber sie könnte zukünftig nützlich sein. Sie
	ermöglicht mir festzulegen, daß ich einen anderen
	Buchstaben als das Kommata mit etwas anderem ersetzen
	möchte. Zum Beispiel wird der Parameter
	<parameter xmlns:xlink="http://www.w3.org/1999/xlink">-c@</parameter> alle @-Zeichen ersetzen
	(nützlich, falls man eine Liste von Email-Adressen in
	Nutzername und Domain aufsplitten will).</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Die <parameter xmlns:xlink="http://www.w3.org/1999/xlink">-p</parameter>-Option erhält die
	erste Zeile, d.h. die erste Zeile der Datei wird nicht
	gelöscht. Als Vorgabe löschen wir die erste Zeile,
	weil die <acronym xmlns:xlink="http://www.w3.org/1999/xlink">CSV</acronym>-Datei in der ersten Zeile
	keine Daten, sondern Feldbeschreibungen enthält.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Die Parameter <parameter xmlns:xlink="http://www.w3.org/1999/xlink">-i</parameter>- und
	<parameter xmlns:xlink="http://www.w3.org/1999/xlink">-o</parameter>-Optionen erlauben es mir, die
	Ausgabe- und Eingabedateien festzulegen. Vorgabe sind
	<filename xmlns:xlink="http://www.w3.org/1999/xlink">stdin</filename> und <filename xmlns:xlink="http://www.w3.org/1999/xlink">stdout</filename>,
	also ist es ein regulärer <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark>-Filter.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Ich habe sichergestellt, daß sowohl <parameter xmlns:xlink="http://www.w3.org/1999/xlink">-i
	filename</parameter> und <parameter xmlns:xlink="http://www.w3.org/1999/xlink">-ifilename</parameter>
	akzeptiert werden. Genauso habe ich dafür Sorge getragen,
	daß sowohl Eingabe- als auch Ausgabedateien festgelegt
	werden können.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Um das elfte Feld jeden Datensatzes zu erhalten kann ich
	nun folgendes eingeben:</para>

      <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">csv '-t;' data.csv | awk '-F;' '{print $11}'</userinput></screen>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Der Code speichert die Optionen (bis auf die
	Dateideskriptoren) in <varname xmlns:xlink="http://www.w3.org/1999/xlink" role="register">EDX</varname>:
	Das Kommata in <varname xmlns:xlink="http://www.w3.org/1999/xlink" role="register">DH</varname>, den
	neuen Feldtrenner in <varname xmlns:xlink="http://www.w3.org/1999/xlink" role="register">DL</varname> und
	das Flag für die <parameter xmlns:xlink="http://www.w3.org/1999/xlink">-p</parameter>-Option in dem
	höchsten Bit von <varname xmlns:xlink="http://www.w3.org/1999/xlink" role="register">EDX</varname>.
	Ein kurzer Abgleich des Zeichens wird uns also eine schnelle
	Entscheidung darüber erlauben, was zu tun ist.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Hier ist der Code:</para>

      <programlisting xmlns:xlink="http://www.w3.org/1999/xlink">
;;;;;;; csv.asm ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; Convert a comma-separated file to a something-else separated file.
;
; Started:	31-May-2001
; Updated:	 1-Jun-2001
;
; Copyright (c) 2001 G. Adam Stanislav
; All rights reserved.
;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

%include	'system.inc'

%define	BUFSIZE	2048

section	.data
fd.in	dd	stdin
fd.out	dd	stdout
usg	db	'Usage: csv [-t&lt;delim&gt;] [-c&lt;comma&gt;] [-p] [-o &lt;outfile&gt;] [-i &lt;infile&gt;]', 0Ah
usglen	equ	$-usg
iemsg	db	"csv: Can't open input file", 0Ah
iemlen	equ	$-iemsg
oemsg	db	"csv: Can't create output file", 0Ah
oemlen	equ	$-oemsg

section .bss
ibuffer	resb	BUFSIZE
obuffer	resb	BUFSIZE

section	.text
align 4
ierr:
	push	dword iemlen
	push	dword iemsg
	push	dword stderr
	sys.write
	push	dword 1		; return failure
	sys.exit

align 4
oerr:
	push	dword oemlen
	push	dword oemsg
	push	dword stderr
	sys.write
	push	dword 2
	sys.exit

align 4
usage:
	push	dword usglen
	push	dword usg
	push	dword stderr
	sys.write
	push	dword 3
	sys.exit

align 4
global	_start
_start:
	add	esp, byte 8	; discard argc and argv[0]
	mov	edx, (',' &lt;&lt; 8) | 9

.arg:
	pop	ecx
	or	ecx, ecx
	je	near .init		; no more arguments

	; ECX contains the pointer to an argument
	cmp	byte [ecx], '-'
	jne	usage

	inc	ecx
	mov	ax, [ecx]

.o:
	cmp	al, 'o'
	jne	.i

	; Make sure we are not asked for the output file twice
	cmp	dword [fd.out], stdout
	jne	usage

	; Find the path to output file - it is either at [ECX+1],
	; i.e., -ofile --
	; or in the next argument,
	; i.e., -o file

	inc	ecx
	or	ah, ah
	jne	.openoutput
	pop	ecx
	jecxz	usage

.openoutput:
	push	dword 420	; file mode (644 octal)
	push	dword 0200h | 0400h | 01h
	; O_CREAT | O_TRUNC | O_WRONLY
	push	ecx
	sys.open
	jc	near oerr

	add	esp, byte 12
	mov	[fd.out], eax
	jmp	short .arg

.i:
	cmp	al, 'i'
	jne	.p

	; Make sure we are not asked twice
	cmp	dword [fd.in], stdin
	jne	near usage

	; Find the path to the input file
	inc	ecx
	or	ah, ah
	jne	.openinput
	pop	ecx
	or	ecx, ecx
	je near usage

.openinput:
	push	dword 0		; O_RDONLY
	push	ecx
	sys.open
	jc	near ierr		; open failed

	add	esp, byte 8
	mov	[fd.in], eax
	jmp	.arg

.p:
	cmp	al, 'p'
	jne	.t
	or	ah, ah
	jne	near usage
	or	edx, 1 &lt;&lt; 31
	jmp	.arg

.t:
	cmp	al, 't'		; redefine output delimiter
	jne	.c
	or	ah, ah
	je	near usage
	mov	dl, ah
	jmp	.arg

.c:
	cmp	al, 'c'
	jne	near usage
	or	ah, ah
	je	near usage
	mov	dh, ah
	jmp	.arg

align 4
.init:
	sub	eax, eax
	sub	ebx, ebx
	sub	ecx, ecx
	mov	edi, obuffer

	; See if we are to preserve the first line
	or	edx, edx
	js	.loop

.firstline:
	; get rid of the first line
	call	getchar
	cmp	al, 0Ah
	jne	.firstline

.loop:
	; read a byte from stdin
	call	getchar

	; is it a comma (or whatever the user asked for)?
	cmp	al, dh
	jne	.quote

	; Replace the comma with a tab (or whatever the user wants)
	mov	al, dl

.put:
	call	putchar
	jmp	short .loop

.quote:
	cmp	al, '"'
	jne	.put

	; Print everything until you get another quote or EOL. If it
	; is a quote, skip it. If it is EOL, print it.
.qloop:
	call	getchar
	cmp	al, '"'
	je	.loop

	cmp	al, 0Ah
	je	.put

	call	putchar
	jmp	short .qloop

align 4
getchar:
	or	ebx, ebx
	jne	.fetch

	call	read

.fetch:
	lodsb
	dec	ebx
	ret

read:
	jecxz	.read
	call	write

.read:
	push	dword BUFSIZE
	mov	esi, ibuffer
	push	esi
	push	dword [fd.in]
	sys.read
	add	esp, byte 12
	mov	ebx, eax
	or	eax, eax
	je	.done
	sub	eax, eax
	ret

align 4
.done:
	call	write		; flush output buffer

	; close files
	push	dword [fd.in]
	sys.close

	push	dword [fd.out]
	sys.close

	; return success
	push	dword 0
	sys.exit

align 4
putchar:
	stosb
	inc	ecx
	cmp	ecx, BUFSIZE
	je	write
	ret

align 4
write:
	jecxz	.ret	; nothing to write
	sub	edi, ecx	; start of buffer
	push	ecx
	push	edi
	push	dword [fd.out]
	sys.write
	add	esp, byte 12
	sub	eax, eax
	sub	ecx, ecx	; buffer is empty now
.ret:
	ret</programlisting>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Vieles daraus ist aus <filename xmlns:xlink="http://www.w3.org/1999/xlink">hex.asm</filename>
	entnommen worden. Aber es gibt einen wichtigen Unterschied:
	Ich rufe nicht länger <function xmlns:xlink="http://www.w3.org/1999/xlink">write</function> auf,
	wann immer ich eine Zeilenvorschub ausgebe. Nun kann der Code
	sogar interaktiv genutzt werden.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Ich habe eine bessere Lösung gefunden für das
	Interaktivitätsproblem seit ich mit dem Schreiben dieses
	Kapitels begonnen habe. Ich wollte sichergehen, daß jede
	Zeile einzeln ausgegeben werden kann, falls erforderlich. Aber
	schlussendlich gibt es keinen Bedarf jede Zeile einzeln
	auszugeben, falls nicht-interaktiv genutzt.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Die neue Lösung besteht darin, die Funktion
	<function xmlns:xlink="http://www.w3.org/1999/xlink">write</function> jedesmal aufzurufen, wenn ich den
	Eingabepuffer leer vorfinde. Auf diesem Wege liest das
	Programm im interaktiven Modus eine Zeile aus der Tastatur des
	Nutzers, verarbeitet sie und stellt fest, ob deren
	Eingabepuffer leer ist, dann leert es seine Ausgabe und liest
	die nächste Zeile.</para>

      <sect3 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="x86-buffered-dark-side">
	<title xmlns:xlink="http://www.w3.org/1999/xlink">Die dunkle Seite des Buffering</title>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Diese Änderung verhindert einen mysteriösen
	  Aufhänger in einem speziellen Fall. Ich bezeichne dies
	  als die <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">dunkle Seite des Buffering</emphasis>,
	  hauptsächlich, weil es eine nicht offensichtliche
	  Gefahr darstellt.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Es ist unwahrscheinlich, daß dies mit dem
	  <application xmlns:xlink="http://www.w3.org/1999/xlink">csv</application>-Programm oben geschieht aber
	  lassen Sie uns einen weiteren Filter betrachten: Nehmen wir
	  an ihre Eingabe sind rohe Daten, die Farbwerte darstellen,
	  wie z.B. die Intensität eines Pixel mit den Farben
	  <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">rot</emphasis>, <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">grün</emphasis> und
	  <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">blau</emphasis>. Unsere Ausgabe wird der negative
	  Wert unserer Eingabe sein.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Solch ein Filter würde sehr einfach zu schreiben
	  sein. Der größte Teil davon würde so
	  aussehen wie all die anderen Filter, die wir bisher
	  geschrieben haben, daher beziehe ich mich nur auf den Kern
	  der Prozedur:</para>

	<programlisting xmlns:xlink="http://www.w3.org/1999/xlink">.loop:
	call	getchar
	not	al		; Create a negative
	call	putchar
	jmp	short .loop</programlisting>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Da dieser Filter mit rohen Daten arbeitet ist es
	  unwahrscheinlich, daß er interaktiv genutzt werden
	  wird.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Aber das Programm könnte als
	  Bildbearbeitungssoftware tituliert werden. Wenn es nicht
	  <function xmlns:xlink="http://www.w3.org/1999/xlink">write</function> vor jedem Aufruf von
	  <function xmlns:xlink="http://www.w3.org/1999/xlink">read</function> durchführt, ist die
	  Möglichkeit gegeben, das es sich aufhängt.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Dies könnte passieren:</para>

	<procedure xmlns:xlink="http://www.w3.org/1999/xlink">
	  <step xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Der Bildeditor wird unseren Filter laden mittels der
	    C-Funktion <function xmlns:xlink="http://www.w3.org/1999/xlink">popen()</function>.</para>
	  </step>

	  <step xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Er wird die erste Zeile von Pixeln laden aus einer
	      Bitmap oder Pixmap.</para>
	  </step>

	  <step xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Er wird die erste Zeile von Pixeln geschrieben in
	      die <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">Pipe</emphasis>, welche zur Variable
	      <varname xmlns:xlink="http://www.w3.org/1999/xlink">fd.in</varname> unseres Filters
	      führt.</para>
	  </step>

	  <step xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Unser Filter wird jeden Pixel auslesen von der
	      Eingabe, in in seinen negativen Wert umkehren und ihn in
	      den Ausgabepuffer schreiben.</para>
	  </step>

	  <step xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Unser Filter wird die Funktion
	      <function xmlns:xlink="http://www.w3.org/1999/xlink">getchar</function> aufrufen, um das
	      nächste Pixel abzurufen.</para>
	  </step>

	  <step xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Die Funktion <function xmlns:xlink="http://www.w3.org/1999/xlink">getchar</function> wird einen
	      leeren Eingabepuffer vorfinden und daher die Funktion
	      <function xmlns:xlink="http://www.w3.org/1999/xlink">read</function> aufrufen.</para>
	  </step>

	  <step xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink"><function xmlns:xlink="http://www.w3.org/1999/xlink">read</function> wird den Systemaufruf
	      <function xmlns:xlink="http://www.w3.org/1999/xlink" role="syscall">SYS_read</function>
	      starten.</para>
	  </step>

	  <step xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Der <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">Kernel</emphasis> wird unseren Filter
	      unterbrechen, bis der Bildeditor mehr Daten zur Pipe
	      sendet.</para>
	  </step>

	  <step xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Der Bildedior wird aus der anderen Pipe lesen,
	      welche verbunden ist mit <varname xmlns:xlink="http://www.w3.org/1999/xlink">fd.out</varname>
	      unseres Filters, damit er die erste Zeile des
	      auszugebenden Bildes setzen kann
	      <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">bevor</emphasis> er uns die zweite Zeile der
	      Eingabe einliest.</para>
	  </step>

	  <step xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Der <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">Kernel</emphasis> unterbricht den
	      Bildeditor, bis er eine Ausgabe unseres Filters
	      erhält, um ihn an den Bildeditor
	      weiterzureichen.</para>
	  </step>
	</procedure>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">An diesem Punkt wartet unser Filter auf den
	  Bildeditor, daß er ihm mehr Daten zur Verarbeitung
	  schicken möge. Gleichzeitig wartet der Bildeditor
	  darauf, daß unser Filter das Resultat der Berechnung
	  ersten Zeile sendet. Aber das Ergebnis sitzt in unserem
	  Ausgabepuffer.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Der Filter und der Bildeditor werden fortfahren bis in
	  die Ewigkeit aufeinander zu warten (oder zumindest bis sie
	  per kill entsorgt werden). Unsere Software hat den eine
	  <link xmlns:xlink="http://www.w3.org/1999/xlink" linkend="secure-race-conditions">Race Condition</link>
	  erreicht.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Das Problem tritt nicht auf, wenn unser Filter seinen
	  Ausgabepuffer leert <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">bevor</emphasis> er vom
	  <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">Kernel</emphasis> mehr Eingabedaten
	  anfordert.</para>
      </sect3>
    </sect2>
  </sect1>

  <sect1 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="x86-fpu">
    <info><title xmlns:xlink="http://www.w3.org/1999/xlink">Die <acronym xmlns:xlink="http://www.w3.org/1999/xlink">FPU</acronym> verwenden</title>
      <authorgroup xmlns:xlink="http://www.w3.org/1999/xlink">
	<author xmlns:xlink="http://www.w3.org/1999/xlink"><personname xmlns:xlink="http://www.w3.org/1999/xlink"><firstname xmlns:xlink="http://www.w3.org/1999/xlink">Fabian</firstname><surname xmlns:xlink="http://www.w3.org/1999/xlink">Borschel</surname></personname><contrib xmlns:xlink="http://www.w3.org/1999/xlink">Übersetzt von </contrib></author>
      </authorgroup>
    </info>

    

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Seltsamerweise erwähnt die meiste Literatur zu
      Assemblersprachen nicht einmal die Existenz der
      <acronym xmlns:xlink="http://www.w3.org/1999/xlink">FPU</acronym>, oder
      <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">floating point unit</emphasis>
      (Fließkomma-Recheneinheit), geschweige denn, daß
      auf die Programmierung mit dieser eingegangen wird.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Dabei kann die Assemblerprogrammierung gerade bei
      hoch optimiertem <acronym xmlns:xlink="http://www.w3.org/1999/xlink">FPU</acronym>-Code, der
      <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">nur</emphasis> mit einer Assemblersprache realisiert
      werden kann, ihre große Stärke ausspielen.</para>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="x86-fpu-organization">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Organisation der <acronym xmlns:xlink="http://www.w3.org/1999/xlink">FPU</acronym></title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Die <acronym xmlns:xlink="http://www.w3.org/1999/xlink">FPU</acronym> besteht aus 8 80&#8211;bit
	Fließkomma-Registern. Diese sind in Form eines
	Stacks organisiert&#8212;Sie können einen Wert durch
	den Befehl <function xmlns:xlink="http://www.w3.org/1999/xlink">push</function> auf dem
	<acronym xmlns:xlink="http://www.w3.org/1999/xlink">TOS</acronym> (<emphasis xmlns:xlink="http://www.w3.org/1999/xlink">top of stack</emphasis>)
	ablegen, oder durch <function xmlns:xlink="http://www.w3.org/1999/xlink">pop</function> von diesem
	holen.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Da also die Befehle <function xmlns:xlink="http://www.w3.org/1999/xlink" role="opcode">push</function>
        und <function xmlns:xlink="http://www.w3.org/1999/xlink" role="opcode">pop</function> schon verwendet
	werden, kann es	keine op-Codes in Assemblersprache mit diesen
	Namen geben.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Sie können mit einen Wert auf dem
	<acronym xmlns:xlink="http://www.w3.org/1999/xlink">TOS</acronym> ablegen, indem Sie
	<function xmlns:xlink="http://www.w3.org/1999/xlink" role="opcode">fld</function>, <function xmlns:xlink="http://www.w3.org/1999/xlink" role="opcode">fild</function>, und <function xmlns:xlink="http://www.w3.org/1999/xlink" role="opcode">fbld</function> verwenden. Mit weiteren op-Codes
	lassen sich <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">Konstanten</emphasis>&#8212;wie z.B.
	<emphasis xmlns:xlink="http://www.w3.org/1999/xlink">Pi</emphasis>&#8212;auf dem <acronym xmlns:xlink="http://www.w3.org/1999/xlink">TOS</acronym>
	ablegen.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Analog dazu können Sie einen Wert
	holen, indem Sie <function xmlns:xlink="http://www.w3.org/1999/xlink" role="opcode">fst</function>,
	<function xmlns:xlink="http://www.w3.org/1999/xlink" role="opcode">fstp</function>, <function xmlns:xlink="http://www.w3.org/1999/xlink" role="opcode">fist</function>, <function xmlns:xlink="http://www.w3.org/1999/xlink" role="opcode">fistp</function>, und <function xmlns:xlink="http://www.w3.org/1999/xlink" role="opcode">fbstp</function> verwenden. Eigentlich
	holen (<function xmlns:xlink="http://www.w3.org/1999/xlink">pop</function>) nur die op-Codes, die auf
	<emphasis xmlns:xlink="http://www.w3.org/1999/xlink">p</emphasis> enden, einen Wert, während die
	anderen den Wert irgendwo speichern (<function xmlns:xlink="http://www.w3.org/1999/xlink">store</function>)
	ohne ihn vom <acronym xmlns:xlink="http://www.w3.org/1999/xlink">TOS</acronym> zu entfernen.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Daten können zwischen dem <acronym xmlns:xlink="http://www.w3.org/1999/xlink">TOS</acronym>
	und dem Hauptspeicher als 32&#8211;bit, 64&#8211;bit oder
	80&#8211;bit <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">real</emphasis>, oder als 16&#8211;bit,
	32&#8211;bit oder 64&#8211;bit <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">Integer</emphasis>,
	oder als 80&#8211;bit <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">packed decimal</emphasis>
	übertragen werden.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Das 80&#8211;bit <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">packed decimal</emphasis>-Format
        ist ein Spezialfall des
	<emphasis xmlns:xlink="http://www.w3.org/1999/xlink">binary coded decimal</emphasis>-Formates,
	welches üblicherweise bei der Konvertierung zwischen der
	<acronym xmlns:xlink="http://www.w3.org/1999/xlink">ASCII</acronym>- und
	<acronym xmlns:xlink="http://www.w3.org/1999/xlink">FPU</acronym>-Darstellung von Daten verwendet wird.
	Dieses erlaubt die Verwendung von 18 signifikanten
	Stellen.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Unabhängig davon, wie Daten im Speicher dargestellt
	werden, speichert die <acronym xmlns:xlink="http://www.w3.org/1999/xlink">FPU</acronym> ihre Daten immer
	im 80&#8211;bit <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">real</emphasis>-Format in den
	Registern.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Ihre interne Genauigkeit beträgt mindestens 19
	Dezimalstellen. Selbst wenn wir also Ergebnisse im
	<acronym xmlns:xlink="http://www.w3.org/1999/xlink">ASCII</acronym>-Format mit voller 18&#8211;stelliger
	Genauigkeit darstellen lassen, werden immer noch korrekte
	Werte angezeigt.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Des weiteren können mathematische Operationen auf
	dem <acronym xmlns:xlink="http://www.w3.org/1999/xlink">TOS</acronym> ausgeführt werden: Wir
	können dessen <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">Sinus</emphasis> berechnen, wir
	können ihn <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">skalieren</emphasis> (z.B.
	können wir ihn mit dem Faktor 2 Multiplizieren oder
	Dividieren), wir können dessen
	<emphasis xmlns:xlink="http://www.w3.org/1999/xlink">Logarithmus</emphasis> zur Basis 2 nehmen, und viele
	weitere Dinge.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Wir können auch <acronym xmlns:xlink="http://www.w3.org/1999/xlink">FPU</acronym>-Register
	<emphasis xmlns:xlink="http://www.w3.org/1999/xlink">multiplizieren</emphasis>,
	<emphasis xmlns:xlink="http://www.w3.org/1999/xlink">dividieren</emphasis>, <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">addieren</emphasis>
	und <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">subtrahieren</emphasis>, sogar einzelne
	Register mit sich selbst.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Der offizielle Intel op-Code für den
	<acronym xmlns:xlink="http://www.w3.org/1999/xlink">TOS</acronym> ist <varname xmlns:xlink="http://www.w3.org/1999/xlink" role="register">st</varname> und für die
	<emphasis xmlns:xlink="http://www.w3.org/1999/xlink">Register</emphasis> <varname xmlns:xlink="http://www.w3.org/1999/xlink" role="register">st(0)</varname>&#8211; <varname xmlns:xlink="http://www.w3.org/1999/xlink" role="register">st(7)</varname>. <varname xmlns:xlink="http://www.w3.org/1999/xlink" role="register">st</varname> und <varname xmlns:xlink="http://www.w3.org/1999/xlink" role="register">st(0)</varname> beziehen sich dabei auf das
	gleiche Register.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Aus welchen Gründen auch immer hat sich der
	Originalautor von <application xmlns:xlink="http://www.w3.org/1999/xlink">nasm</application> dafür
	entschieden, andere op-Codes zu verwenden, nämlich
	<varname xmlns:xlink="http://www.w3.org/1999/xlink" role="register">st0</varname>&#8211; <varname xmlns:xlink="http://www.w3.org/1999/xlink" role="register">st7</varname>. Mit anderen Worten, es gibt
	keine Klammern, und der <acronym xmlns:xlink="http://www.w3.org/1999/xlink">TOS</acronym> ist immer
	<varname xmlns:xlink="http://www.w3.org/1999/xlink" role="register">st0</varname>, niemals einfach nur
	<function xmlns:xlink="http://www.w3.org/1999/xlink" role="opcode">st</function>.</para>

      <sect3 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="x86-fpu-packed-decimal">
	<title xmlns:xlink="http://www.w3.org/1999/xlink">Das Packed Decimal-Format</title>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Das <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">packed decimal</emphasis>-Format verwendet
	  10 Bytes (80 Bits) zur Darstellung von 18 Ziffern. Die so
	  dargestellte Zahl ist immer ein
	  <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">Integer</emphasis>.</para>

        <tip xmlns:xlink="http://www.w3.org/1999/xlink">
          <para xmlns:xlink="http://www.w3.org/1999/xlink">Sie können durch Multiplikation des
	    <acronym xmlns:xlink="http://www.w3.org/1999/xlink">TOS</acronym> mit Potenzen von 10 die einzelnen
	    Dezimalstellen verschieben.</para>
	</tip>

        <para xmlns:xlink="http://www.w3.org/1999/xlink">Das höchste Bit des höchsten Bytes (Byte 9)
	  ist das <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">Vorzeichenbit</emphasis>:
	  Wenn es gesetzt ist, ist die Zahl
	  <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">negativ</emphasis>, ansonsten
	  <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">positiv</emphasis>. Die restlichen Bits dieses
	  Bytes werden nicht verwendet bzw. ignoriert.</para>

        <para xmlns:xlink="http://www.w3.org/1999/xlink">Die restlichen 9 Bytes enthalten die 18 Ziffern der
	  gespeicherten Zahl: 2 Ziffern pro Byte.</para>

        <para xmlns:xlink="http://www.w3.org/1999/xlink">Die <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">signifikantere Ziffer</emphasis> wird in
	  der <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">oberen Hälfte</emphasis> (4 Bits) eines
	  Bytes gespeichert, die andere in der
	  <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">unteren Hälfte</emphasis>.</para>

        <para xmlns:xlink="http://www.w3.org/1999/xlink">Vielleicht würden Sie jetzt annehmen, das
	  <constant xmlns:xlink="http://www.w3.org/1999/xlink">-1234567</constant> auf die folgende Art im
	  Speicher abgelegt wird (in hexadezimaler Notation):</para>

        <programlisting xmlns:xlink="http://www.w3.org/1999/xlink">80 00 00 00 00 00 01 23 45 67</programlisting>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Dem ist aber nicht so! Bei Intel werden alle Daten im
	  <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">little&#8211;endian</emphasis>-Format gespeichert,
	  auch das <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">packed decimal</emphasis>-Format.</para>

        <para xmlns:xlink="http://www.w3.org/1999/xlink">Dies bedeutet, daß <constant xmlns:xlink="http://www.w3.org/1999/xlink">-1234567</constant>
	  wie folgt gespeichert wird:</para>

        <programlisting xmlns:xlink="http://www.w3.org/1999/xlink">67 45 23 01 00 00 00 00 00 80</programlisting>

        <para xmlns:xlink="http://www.w3.org/1999/xlink">Erinnern Sie sich an diesen Umstand, bevor Sie sich
	  aus lauter Verzweiflung die Haare
	  ausreißen.</para>

        <note xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Das lesenswerte Buch&#8212;falls Sie es finden
	    können&#8212;ist Richard Startz' <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://www.int80h.org/cgi-bin/isbn?isbn=013246604X">
	    8087/80287/80387 for the IBM PC &amp; Compatibles</link>.
	    Obwohl es anscheinend die Speicherung der <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">packed
	    decimal</emphasis> im little&#8211;endian-Format für
	    gegeben annimmt. Ich mache keine Witze über meine
	    Verzweiflung, als ich den Fehler im unten stehenden Filter
	    gesucht habe, <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">bevor</emphasis> mir einfiel,
	    daß ich einfach mal versuchen sollte, das
	    little&#8211;endian-Format, selbst für diesen Typ von
	    Daten, anzuwenden.</para>
	</note>
      </sect3>
    </sect2>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="x86-pinhole-photography">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Ausflug in die Lochblendenphotographie</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Um sinnvolle Programme zu schreiben, müssen wir nicht
	nur unsere Programmierwerkzeuge beherrschen, sondern auch das
	Umfeld, für das die Programme gedacht sind.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Unser nächster Filter wird uns dabei helfen, wann
	immer wir wollen, eine <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">Lochkamera</emphasis> zu
	bauen. Wir brauchen also etwas Hintergrundwissen über
	die <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">Lochblendenphotographie</emphasis>, bevor wir
	weiter machen können.</para>

      <sect3 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="x86-camera">
	<title xmlns:xlink="http://www.w3.org/1999/xlink">Die Kamera</title>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Die einfachste Form, eine Kamera zu beschreiben, ist
	  die eines abgeschlossenen, lichtundurchlässigen
	  Raumes, in dessen Abdeckung sich ein kleines Loch
	  befindet.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Die Abdeckung ist normalerweise fest (z.B. eine
	  Schachtel), manchmal jedoch auch flexibel (z.B. ein Balgen).
	  Innerhalb der Kamera ist es sehr dunkel. Nur durch ein
	  kleines Loch kann Licht von einem einzigen Punkt aus in den
	  Raum eindringen (in manchen Fällen sind es mehrere
	  Löcher). Diese Lichtstrahlen kommen von einem Bild,
	  einer Darstellung von dem was sich außerhalb der
	  Kamera, vor dem kleinen Loch, befindet.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Wenn ein lichtempfindliches Material (wie z.B. ein Film)
	  in der Kamera angebracht wird, so kann dieses das Bild
	  einfangen.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Das Loch enthält häufig eine
	  <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">Linse</emphasis>, oder etwas linsenartiges,
	  häufig auch einfach <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">Objektiv</emphasis>
	  genannt.</para>
      </sect3>

      <sect3 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="x86-the-pinhole">
	<title xmlns:xlink="http://www.w3.org/1999/xlink">Die Lochblende</title>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Streng genommen ist die Linse nicht notwendig: Die
	  ursprünglichen Kameras verwendeten keine Linse, sondern
	  eine <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">Lochblende</emphasis>. Selbst heutzutage
	  werden noch <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">Lochblenden</emphasis> verwendet,
	  zum einen, um die Funktionsweise einer Kamera zu erlernen,
	  und zum anderen, um eine spezielle Art von Bildern zu
	  erzeugen.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Das Bild, das von einer <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">Lochblende</emphasis>
	  erzeugt wird, ist überall scharf. Oder unscharf. Es
	  gibt eine ideale Größe für eine Lochblende:
	  Wenn sie größer oder kleiner ist, verliert das
	  Bild seine Schärfe.</para>
      </sect3>

      <sect3 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="x86-focal-length">
	<title xmlns:xlink="http://www.w3.org/1999/xlink">Brennweite</title>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Dieser ideale Lochblendendurchmesser ist eine Funktion
	  der Quadratwurzel der <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">Brennweite</emphasis>,
	  welche dem Abstand der Lochblende von dem Film
	  entspricht.</para>

	<programlisting xmlns:xlink="http://www.w3.org/1999/xlink">     D = PC * sqrt(FL)</programlisting>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Hier ist <varname xmlns:xlink="http://www.w3.org/1999/xlink">D</varname> der ideale Durchmesser der
	  Lochblende, <varname xmlns:xlink="http://www.w3.org/1999/xlink">FL</varname> die Brennweite und
	  <constant xmlns:xlink="http://www.w3.org/1999/xlink">PC</constant> eine Konstante der Brennweite. Nach
	  Jay Bender hat die Konstante den Wert
	  <constant xmlns:xlink="http://www.w3.org/1999/xlink">0.04</constant>, nach Kenneth Connors
	  <constant xmlns:xlink="http://www.w3.org/1999/xlink">0.037</constant>. Andere Leute
	  haben andere Werte vorgeschlagen. Des weiteren gelten diese
	  Werte nur für Tageslicht: Andere Arten von
	  Licht benötigen andere konstante Werte, welche nur
	  durch Experimente bestimmt werden können.</para>
      </sect3>

      <sect3 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="x86-f-number">
	<title xmlns:xlink="http://www.w3.org/1999/xlink">Der f&#8211;Wert</title>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Der f&#8211;Wert ist eine sehr nützliche
	  Größe, die angibt, wieviel Licht den Film erreicht.
	  Ein Belichtungsmesser kann dies messen, um z.B. für
	  einen Film mit einer Empfindlichkeit von f5.6 eine
	  Belichtungsdauer von 1/1000 Sekunden auszurechnen.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Es spielt keine Rolle, ob es eine 35&#8211;mm- oder
	  eine 6x9cm-Kamera ist, usw. Solange wir den f&#8211;Wert
	  kennen, können wir die benötigte Belichtungszeit
	  berechnen.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Der f&#8211;Wert läßt sich einfach wie folgt
	  berechnen:</para>

	<programlisting xmlns:xlink="http://www.w3.org/1999/xlink">    F = FL / D</programlisting>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Mit anderen Worten, der f&#8211;Wert ergibt sich aus
	  der Brennweite (FL), dividiert durch den Durchmesser (D) der
	  Lochblende. Ein großer f&#8211;Wert impliziert also
	  entweder eine kleine Lochblende, oder eine große
	  Brennweite, oder beides. Je größer also der
	  f&#8211;Wert ist, um so länger muß die
	  Belichtungszeit sein.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Des weiteren sind der Lochblendendurchmesser und die
	  Brennweite eindimensionale Meßgrößen,
	  während der Film und die Lochblende an sich
	  zweidimensionale Objekte darstellen. Das bedeutet, wenn
	  man für einen f&#8211;Wert <varname xmlns:xlink="http://www.w3.org/1999/xlink">A</varname>
	  eine Belichtungsdauer <varname xmlns:xlink="http://www.w3.org/1999/xlink">t</varname> bestimmt hat,
	  dann ergibt sich daraus für einen f&#8211;Wert
	  <varname xmlns:xlink="http://www.w3.org/1999/xlink">B</varname> eine Belichtungszeit von:</para>

	<programlisting xmlns:xlink="http://www.w3.org/1999/xlink">    t * (B / A)²</programlisting>
      </sect3>

      <sect3 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="x86-normalized-f-number">
	<title xmlns:xlink="http://www.w3.org/1999/xlink">Normalisierte f&#8211;Werte</title>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Während heutige moderne Kameras den Durchmesser
	  der Lochblende, und damit deren f&#8211;Wert, weich und
	  schrittweise verändern können, war dies
	  früher nicht der Fall.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Um unterschiedliche f&#8211;Werte einstellen zu
	  können, besaßen Kameras typischerweise eine
	  Metallplatte mit Löchern unterschiedlichen
	  Durchmessers als Lochblende.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Die Durchmesser wurden entsprechend obiger Formel
	  gewählt, daß der resultierende f&#8211;Wert
	  ein fester Standardwert war, der für alle Kameras
	  verwendet wurde. Z.B. hat eine sehr alte Kodak Duaflex
	  IV Kamera in meinem Besitz drei solche Löcher
	  für die f&#8211;Werte 8, 11 und 16.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Eine neuere Kamera könnte f&#8211;Werte wie 2.8,
	  4, 5.6, 8, 11, 16, 22, und 32 (und weitere) besitzen.
	  Diese Werte wurden nicht zufällig ausgewählt:
	  Sie sind alle vielfache der Quadratwurzel aus 2, wobei
	  manche Werte gerundet wurden.</para>
      </sect3>

      <sect3 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="x86-f-stop">
	<title xmlns:xlink="http://www.w3.org/1999/xlink">Der f&#8211;Stopp</title>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Eine typische Kamera ist so konzipiert, daß die
	  Nummernscheibe bei den normalisierten f&#8211;Werten
	  einrastet. Die Nummernscheibe <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">stoppt</emphasis>
	  an diesen Positionen. Daher werden diese Positionen auch
	  f&#8211;Stopps genannt.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Da die f&#8211;Werte bei jedem Stopp vielfache der
	  Quadratwurzel aus 2 sind, verdoppelt die Drehung der
	  Nummernscheibe um einen Stopp die für die gleiche
	  Belichtung benötigte Lichtmenge. Eine Drehung
	  um 2 Stopps vervierfacht die benötigte Belichtungszeit.
	  Eine Drehung um 3 Stopps verachtfacht sie, etc.</para>
      </sect3>
    </sect2>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="x86-pinhole-software">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Entwurf der Lochblenden-Software</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Wir können jetzt festlegen, was genau unsere
	Lochblenden-Software tun soll.</para>

      <sect3 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="xpinhole-processing-input">
	<title xmlns:xlink="http://www.w3.org/1999/xlink">Verarbeitung der Programmeingaben</title>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Da der Hauptzweck des Programms darin besteht, uns
	  beim Entwurf einer funktionierenden Lochkamera zu
	  helfen, wird die <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">Brennweite</emphasis>
	  die Programmeingabe sein. Dies ist etwas, das wir ohne
	  zusätzliche Programme feststellen können:
	  Die geeignete Brennweite ergibt sich aus der
	  Größe des Films und der Art des Fotos, ob
	  dieses ein "normales" Bild, ein Weitwinkelbild oder
	  ein Telebild sein soll.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Die meisten bisher geschriebenen Programme arbeiteten
	  mit einzelnen Zeichen, oder Bytes, als Eingabe: Das
	  <application xmlns:xlink="http://www.w3.org/1999/xlink">hex</application>-Programm konvertierte
	  einzelne Bytes in hexadezimale Werte, das
	  <application xmlns:xlink="http://www.w3.org/1999/xlink">csv</application>-Programm ließ entweder
	  einzelne Zeichen unverändert, löschte oder
	  veränderte sie, etc.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Das Programm <application xmlns:xlink="http://www.w3.org/1999/xlink">ftuc</application> verwendete
	  einen Zustandsautomaten, um höchstens zwei gleichzeitig
	  eingegebene Bytes zu verarbeiten.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Das <application xmlns:xlink="http://www.w3.org/1999/xlink">pinhole</application>-Programm dagegen
	  kann nicht nur mit einzelnen Zeichen arbeiten, sondern
	  muß mit größeren syntaktischen Einheiten
	  zurrecht kommen.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Wenn wir z.B. möchten, daß unser Programm den
	  Lochblendendurchmesser (und weitere Werte, die wir
	  später noch diskutieren werden) für die Brennweiten
	  <constant xmlns:xlink="http://www.w3.org/1999/xlink">100 mm</constant>, <constant xmlns:xlink="http://www.w3.org/1999/xlink">150 mm</constant> und
	  <constant xmlns:xlink="http://www.w3.org/1999/xlink">210 mm</constant> berechnet, wollen wir etwa
	  folgendes eingeben:</para>

	<screen xmlns:xlink="http://www.w3.org/1999/xlink"><userinput xmlns:xlink="http://www.w3.org/1999/xlink">100, 150, 210</userinput></screen>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Unser Programm muß mit der gleichzeitigen Eingabe
	  von mehr als nur einem einzelnen Byte zurecht kommen. Wenn
	  es eine <constant xmlns:xlink="http://www.w3.org/1999/xlink">1</constant> erkennt, muß es wissen,
	  daß dies die erste Stelle einer dezimalen Zahl ist.
	  Wenn es eine <constant xmlns:xlink="http://www.w3.org/1999/xlink">0</constant>, gefolgt von einer
	  weiteren <constant xmlns:xlink="http://www.w3.org/1999/xlink">0</constant> sieht, muß es wissen,
	  daß dies zwei unterschiedliche Stellen mit der
	  gleichen Zahl sind.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Wenn es auf das erste Komma trifft, muß es wissen,
	  daß die folgenden Stellen nicht mehr zur ersten
	  Zahl gehören. Es muß die Stellen der ersten
	  Zahl in den Wert <constant xmlns:xlink="http://www.w3.org/1999/xlink">100</constant> konvertieren
	  können. Und die Stellen der zweiten Zahl müssen
	  in den Wert <constant xmlns:xlink="http://www.w3.org/1999/xlink">150</constant> konvertiert werden.
	  Und die Stellen der dritten Zahl müssen in den Wert
	  <constant xmlns:xlink="http://www.w3.org/1999/xlink">210</constant> konvertiert werden.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Wir müssen festlegen, welche Trennsymbole
	  zulässig sind: Sollen die Eingabewerte durch Kommas
	  voneinander getrennt werden? Wenn ja, wie sollen zwei
	  Zahlen behandelt werden, die durch ein anderes Zeichen
	  getrennt sind?</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Ich persönlich mag es einfach. Entweder etwas ist
	  eine Zahl, dann wird es verarbeitet, oder es ist keine
	  Zahl, dann wird es verworfen. Ich mag es nicht, wenn sich der
	  Computer bei der <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">offensichtlichen</emphasis>
	  Eingabe eines zusätzlichen Zeichens beschwert.
	  Duh!</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Zusätzlich erlaubt es mir, die Monotonie des
	  Tippens zu durchbrechen, und eine Anfrage anstelle einer
	  simplen Zahl zu stellen:</para>

	<screen xmlns:xlink="http://www.w3.org/1999/xlink"><userinput xmlns:xlink="http://www.w3.org/1999/xlink">Was ist der beste Lochblendendurchmesser
	  bei einer Brennweite von 150?</userinput></screen>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Es gibt keinen Grund dafür, die Ausgabe mehrerer
	  Fehlermeldungen aufzuteilen:</para>

	<screen xmlns:xlink="http://www.w3.org/1999/xlink">Syntax error: Was
Syntax error: ist
Syntax error: der
Syntax error: beste</screen>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Et cetera, et cetera, et cetera.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Zweitens mag ich das <constant xmlns:xlink="http://www.w3.org/1999/xlink">#</constant>-Zeichen, um
	  Kommentare zu markieren, die ab dem Zeichen bis zum Ende der
	  jeweiligen Zeile gehen. Dies verlangt nicht viel
	  Programmieraufwand, und ermöglicht es mir, Eingabedateien
	  für meine Programme als ausführbare Skripte zu
	  handhaben.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">In unserem Fall müssen wir auch entscheiden, in
	  welchen Einheiten die Dateneingabe erfolgen soll: Wir
	  wählen <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">Millimeter</emphasis>, da die meisten
	  Photographen die Brennweite in dieser Einheit messen.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Letztendlich müssen wir noch entscheiden, ob wir die
	  Verwendung des dezimalen Punktes erlauben (in diesem Fall
	  müssen wir berücksichtigen, daß in vielen
	  Ländern der Welt das dezimale <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">Komma</emphasis>
	  verwendet wird).</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">In unserem Fall würde das Zulassen eines dezimalen
	  Punktes/Kommas zu einer fälschlicherweise angenommenen,
	  höheren Genauigkeit führen: Der Unterschied
	  zwischen den Brennweiten <constant xmlns:xlink="http://www.w3.org/1999/xlink">50</constant> und
	  <constant xmlns:xlink="http://www.w3.org/1999/xlink">51</constant> ist fast nicht wahrnehmbar. Die
	  Zulassung von Eingaben wie <constant xmlns:xlink="http://www.w3.org/1999/xlink">50.5</constant> ist
	  also keine gute Idee. Beachten Sie bitte, das dies meine
	  Meinung ist. In diesem Fall bin ich der Autor des Programmes.
	  Bei Ihren eigenen Programmen müssen Sie selbst solche
	  Entscheidungen treffen.</para>
      </sect3>

      <sect3 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="x86-pinhole-options">
	<title xmlns:xlink="http://www.w3.org/1999/xlink">Optionen anbieten</title>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Das wichtigste, was wir zum Bau einer Lochkamera
	  wissen müssen, ist der Durchmesser der Lochblende. Da
	  wir scharfe Bilder schießen wollen, werden wir obige
	  Formel für die Berechnung des korrekten Durchmessers zu
	  gegebener Brennweite verwenden. Da Experten mehrere
	  Werte für die <constant xmlns:xlink="http://www.w3.org/1999/xlink">PC</constant>-Konstante
	  anbieten, müssen wir uns hier für einen Wert
	  entscheiden.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">In der Programmierung unter <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark> ist es üblich,
	  zwei Hauptvarianten anzubieten, um Parameter an Programme zu
	  übergeben, und des weiteren eine Standardeinstellung
	  für den Fall zu haben, das der Benutzer gar keine
	  Parameter angibt.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Warum zwei Varianten, Parameter anzugeben?</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Ein Grund ist, eine (relativ) <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">feste</emphasis>
	  Einstellung anzubieten, die automatisch bei jedem
	  Programmaufruf verwendet wird, ohne das wir diese
	  Einstellung immer und immer wieder mit angeben
	  müssen.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Die feste Einstellung kann in einer Konfigurationsdatei
	  gespeichert sein, typischerweise im Heimatverzeichnis des
	  Benutzers. Die Datei hat üblicherweise denselben Namen
	  wie das zugehörige Programm, beginnt jedoch mit einem
	  Punkt. Häufig wird <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">"rc"</emphasis> dem
	  Dateinamen hinzugefügt. Unsere Konfigurationsdatei
	  könnte also <filename xmlns:xlink="http://www.w3.org/1999/xlink">~/.pinhole</filename> oder
	  <filename xmlns:xlink="http://www.w3.org/1999/xlink">~/.pinholerc</filename> heißen. (Die
	  Zeichenfolge <filename xmlns:xlink="http://www.w3.org/1999/xlink">~/</filename> steht für das
	  Heimatverzeichnis des aktuellen Benutzers.)</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Konfigurationsdateien werden häufig von Programmen
	  verwendet, die viele konfigurierbare Parameter besitzen.
	  Programme, die nur eine (oder wenige) Parameter anbieten,
	  verwenden häufig eine andere Methode: Sie erwarten die
	  Parameter in einer <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">Umgebungsvariablen</emphasis>.
	  In unserem Fall könnten wir eine Umgebungsvariable mit
	  dem Namen <varname xmlns:xlink="http://www.w3.org/1999/xlink">PINHOLE</varname> benutzen.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Normalerweise verwendet ein Programm entweder die eine,
	  oder die andere der beiden obigen Methoden. Ansonsten
	  könnte ein Programm verwirrt werden, wenn eine
	  Konfigurationsdatei das eine sagt, die Umgebungsvariable
	  jedoch etwas anderes.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Da wir nur <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">einen</emphasis> Parameter
	  unterstützen müssen, verwenden wir die zweite
	  Methode, und benutzen eine Umgebungsvariable mit dem
	  Namen <varname xmlns:xlink="http://www.w3.org/1999/xlink">PINHOLE</varname>.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Der andere Weg erlaubt uns, <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">ad hoc</emphasis>
	  Entscheidungen zu treffen: <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">"Obwohl ich
	  normalerweise einen Wert von 0.039 verwende, will ich dieses
	  eine Mal einen Wert von 0.03872 anwenden."</emphasis>
	  Mit anderen Worten, dies erlaubt uns, die Standardeinstellung
	  außer Kraft zu setzen.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Diese Art der Auswahl wird häufig über
	  Kommandozeilenparameter gemacht.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Schließlich braucht ein Programm
	  <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">immer</emphasis> eine
	  <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">Standardeinstellung</emphasis>. Der Benutzer
	  könnte keine Parameter angeben. Vielleicht weiß
	  er auch gar nicht, was er einstellen sollte. Vielleicht will
	  er es "einfach nur ausprobieren". Vorzugsweise wird die
	  Standardeinstellung eine sein, die die meisten Benutzer
	  sowieso wählen würden. Somit müssen diese
	  keine zusätzlichen Parameter angeben, bzw. können
	  die Standardeinstellung ohne zusätzlichen Aufwand
	  benutzen.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Bei diesem System könnte das Programm
	  widersprüchliche Optionen vorfinden, und auf die
	  folgende Weise reagieren:</para>

	<procedure xmlns:xlink="http://www.w3.org/1999/xlink">
	  <step xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Wenn es eine <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">ad
	      hoc</emphasis>-Einstellung vorfindet (z.B. ein
	      Kommandozeilenparameter), dann sollte es diese
	      Einstellung annehmen. Es muß alle vorher
	      festgelegten sowie die standardmäßige
	      Einstellung ignorieren.</para>
	  </step>

	  <step xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink"><emphasis xmlns:xlink="http://www.w3.org/1999/xlink">Andererseits</emphasis>, wenn es eine
	      festgelegte Option (z.B. eine Umgebungsvariable)
	      vorfindet, dann sollte es diese akzeptieren und die
	      Standardeinstellung ignorieren.</para>
	  </step>

	  <step xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink"><emphasis xmlns:xlink="http://www.w3.org/1999/xlink">Ansonsten</emphasis> sollte es die
	      Standardeinstellung verwenden.</para>
	  </step>
	</procedure>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Wir müssen auch entscheiden, welches
	  <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">Format</emphasis> unsere
	  <constant xmlns:xlink="http://www.w3.org/1999/xlink">PC</constant>-Option haben soll.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Auf den ersten Blick scheint es einleuchtend, das
	  Format <varname xmlns:xlink="http://www.w3.org/1999/xlink">PINHOLE=0.04</varname> für die
	  Umgebungsvariable, und <parameter xmlns:xlink="http://www.w3.org/1999/xlink">-p0.04</parameter>
	  für die Kommandozeile zu verwenden.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Dies zuzulassen wäre eigentlich eine
	  Sicherheitslücke. Die <constant xmlns:xlink="http://www.w3.org/1999/xlink">PC</constant>-Konstante
	  ist eine sehr kleine Zahl. Daher würden wir unsere
	  Anwendung mit verschiedenen, kleinen Werten für
	  <constant xmlns:xlink="http://www.w3.org/1999/xlink">PC</constant> testen. Aber was würde
	  passieren, wenn jemand das Programm mit einem sehr
	  großen Wert aufrufen würde?</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Es könnte abstürzen, weil wir das Programm
	  nicht für den Umgang mit großen Werten
	  entworfen haben.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Oder wir investieren noch weiter Zeit in das Programm,
	  so daß dieses dann auch mit großen Zahlen
	  umgehen kann. Wir könnten dies machen, wenn wir
	  kommerzielle Software für computertechnisch
	  unerfahrene Benutzer schreiben würden.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Oder wir könnten auch sagen <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">"Pech gehabt!
	  Der Benutzer sollte es besser wissen."</emphasis></para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Oder wir könnten es für den Benutzer
	  unmöglich machen, große Zahlen einzugeben. Dies
	  ist die Variante, die wir verwenden werden: Wir nehmen einen
	  <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">impliziten 0.</emphasis>-Präfix an.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Mit anderen Worten, wenn der Benutzer den Wert
	  <constant xmlns:xlink="http://www.w3.org/1999/xlink">0.04</constant> angeben will, so muß er
	  entweder <parameter xmlns:xlink="http://www.w3.org/1999/xlink">-p04</parameter> als Parameter angeben,
	  oder <varname xmlns:xlink="http://www.w3.org/1999/xlink">PINHOLE=04</varname> als Variable in seiner
	  Umgebung definieren. Falls der Benutzer
	  <parameter xmlns:xlink="http://www.w3.org/1999/xlink">-p9999999</parameter> angibt, so wird dies als
	  <constant xmlns:xlink="http://www.w3.org/1999/xlink">0.9999999</constant> interpretiert&#8212;zwar
	  immer noch sinnlos, aber zumindest sicher.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Zweitens werden viele Benutzer einfach die Konstanten
	  von Bender oder Connors benutzen wollen. Um es diesen
	  Benutzern einfacher zu machen, werden wir
	  <parameter xmlns:xlink="http://www.w3.org/1999/xlink">-b</parameter> als <parameter xmlns:xlink="http://www.w3.org/1999/xlink">-p04</parameter>,
	  und <parameter xmlns:xlink="http://www.w3.org/1999/xlink">-c</parameter> als
	  <parameter xmlns:xlink="http://www.w3.org/1999/xlink">-p037</parameter> interpretieren.</para>
      </sect3>

      <sect3 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="x86-pinhole-output">
	<title xmlns:xlink="http://www.w3.org/1999/xlink">Die Ausgabe</title>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Wir müssen festlegen, was und in welchem Format
	  unsere Anwendung Daten ausgeben soll.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Da wir als Eingabe beliebig viele Brennweiten
	  erlauben, macht es Sinn, die Ergebnisse in Form
	  einer traditionellen Datenbank&#8211;Ausgabe darzustellen,
	  bei der zeilenweise zu jeder Brennweite der
	  zugehörige berechnete Wert, getrennt durch ein
	  <constant xmlns:xlink="http://www.w3.org/1999/xlink">tab</constant>-Zeichen, ausgegeben wird.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Optional sollten wir dem Benutzer die Möglichkeit
	  geben, die Ausgabe in dem schon beschriebenen
	  <acronym xmlns:xlink="http://www.w3.org/1999/xlink">CSV</acronym>-Format festzulegen. In diesem Fall
	  werden wir zu Beginn der Ausgabe eine Zeile einfügen,
	  in der die Beschreibungen der einzelnen Felder, durch
	  Kommas getrennt, aufgelistet werden, gefolgt von der Ausgabe
	  der Daten wie schon beschrieben, wobei das
	  <constant xmlns:xlink="http://www.w3.org/1999/xlink">tab</constant>-Zeichen durch ein
	  <constant xmlns:xlink="http://www.w3.org/1999/xlink">Komma</constant> ersetzt wird.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Wir brauchen eine Kommandozeilenoption für das
	  <acronym xmlns:xlink="http://www.w3.org/1999/xlink">CSV</acronym>-Format. Wir können nicht
	  <parameter xmlns:xlink="http://www.w3.org/1999/xlink">-c</parameter> verwenden, da diese Option bereits
	  für <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">verwende Connors Konstante</emphasis>
	  steht. Aus irgendeinem seltsamen Grund bezeichnen
	  viele Webseiten <acronym xmlns:xlink="http://www.w3.org/1999/xlink">CSV</acronym>-Dateien als
	  <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">"Excel Kalkulationstabelle"</emphasis> (obwohl das
	  <acronym xmlns:xlink="http://www.w3.org/1999/xlink">CSV</acronym>-Format älter ist als Excel). Wir
	  werden daher <parameter xmlns:xlink="http://www.w3.org/1999/xlink">-e</parameter> als Schalter für
	  die Ausgabe im <acronym xmlns:xlink="http://www.w3.org/1999/xlink">CSV</acronym>-Format
	  verwenden.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Jede Zeile der Ausgabe wird mit einer Brennweite
	  beginnen. Dies mag auf den ersten Blick überflüssig
	  erscheinen, besonders im interaktiven Modus: Der Benutzer
	  gibt einen Wert für die Brennweite ein, und das Programm
	  wiederholt diesen.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Der Benutzer kann jedoch auch mehrere Brennweiten
	  in einer Zeile angeben. Die Eingabe kann auch aus einer Datei,
	  oder aus der Ausgabe eines anderen Programmes, kommen. In
	  diesen Fällen sieht der Benutzer die Eingabewerte
	  überhaupt nicht.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Ebenso kann die Ausgabe in eine Datei umgelenkt werden,
	  was wir später noch untersuchen werden, oder sie
	  könnte an einen Drucker geschickt werden, oder auch
	  als Eingabe für ein weiteres Programm dienen.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Es macht also wohl Sinn, jede Zeile mit einer durch den
	  Benutzer eingegebenen Brennweite beginnen zu lassen.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Halt! Nicht, wie der Benutzer die Daten eingegeben hat.
	  Was passiert, wenn der Benutzer etwas wie folgt
	  eingibt:</para>

	<screen xmlns:xlink="http://www.w3.org/1999/xlink"><userinput xmlns:xlink="http://www.w3.org/1999/xlink">00000000150</userinput></screen>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Offensichtlich müssen wir die führenden Nullen
	  vorher abschneiden.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Wir müssen also die Eingabe des Benutzers
	  sorgfältig prüfen, diese dann in der
	  <acronym xmlns:xlink="http://www.w3.org/1999/xlink">FPU</acronym> in die binäre Form konvertieren,
	  und dann von dort aus ausgeben.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Aber...</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Was ist, wenn der Benutzer etwas wie folgt eingibt:</para>

	<screen xmlns:xlink="http://www.w3.org/1999/xlink"><userinput xmlns:xlink="http://www.w3.org/1999/xlink">17459765723452353453534535353530530534563507309676764423</userinput></screen>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Ha! Das packed decimal-Format der <acronym xmlns:xlink="http://www.w3.org/1999/xlink">FPU</acronym>
	  erlaubt uns die Eingabe einer 18&#8211;stelligen
	  Zahl. Aber der Benutzer hat mehr als 18 Stellen eingegeben.
	  Wie gehen wir damit um?</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Wir <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">könnten</emphasis> unser Programm
	  so modifizieren, daß es die ersten 18 Stellen liest,
	  der <acronym xmlns:xlink="http://www.w3.org/1999/xlink">FPU</acronym> übergibt, dann weitere
	  18 Stellen liest, den Inhalt des <acronym xmlns:xlink="http://www.w3.org/1999/xlink">TOS</acronym>
	  mit einem Vielfachen von 10, entsprechend der Anzahl der
	  zusätzlichen Stellen multipliziert, und dann beide
	  Werte mittels <function xmlns:xlink="http://www.w3.org/1999/xlink">add</function> zusammen
	  addiert.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Ja, wir könnten das machen. Aber in
	  <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">diesem</emphasis> Programm wäre es
	  unnötig (in einem anderen wäre es vielleicht
	  der richtige Weg): Selbst der Erdumfang in Millimetern ergibt
	  nur eine Zahl mit 11 Stellen. Offensichtlich können wir
	  keine Kamera dieser Größe bauen (jedenfalls jetzt
	  noch nicht).</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Wenn der Benutzer also eine so große Zahl eingibt,
	  ist er entweder gelangweilt, oder er testet uns, oder er
	  versucht, in das System einzudringen, oder er spielt&#8212;
	  indem er irgendetwas anderes macht als eine Lochkamera
	  zu entwerfen.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Was werden wir tun?</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Wir werden ihn ohrfeigen, gewissermaßen:</para>

	<screen xmlns:xlink="http://www.w3.org/1999/xlink">17459765723452353453534535353530530534563507309676764423	???	???	???	???	???</screen>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Um dies zu erreichen, werden wir einfach alle
	  führenden Nullen ignorieren. Sobald wir eine Ziffer
	  gefunden haben, die nicht Null ist, initialisieren wir
	  einen Zähler mit <constant xmlns:xlink="http://www.w3.org/1999/xlink">0</constant> und
	  beginnen mit drei Schritten:</para>

	<procedure xmlns:xlink="http://www.w3.org/1999/xlink">
	  <step xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Sende die Ziffer an die Ausgabe.</para>
	  </step>

	  <step xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Füge die Ziffer einem Puffer hinzu, welchen wir
	      später benutzen werden, um den packed decimal-Wert
	      zu erzeugen, den wir an die
	      <acronym xmlns:xlink="http://www.w3.org/1999/xlink">FPU</acronym> schicken können.</para>
	  </step>

	  <step xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Erhöhe den Zähler um eins.</para>
	  </step>
	</procedure>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Während wir diese drei Schritte wiederholen,
	  müssen wir auf zwei Bedingungen achten:</para>

	<itemizedlist xmlns:xlink="http://www.w3.org/1999/xlink">
	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Wenn der Zähler den Wert 18 übersteigt,
	      hören wir auf, Ziffern dem Puffer hinzuzufügen.
	      Wir lesen weiterhin Ziffern und senden sie an die
	      Ausgabe.</para>
	  </listitem>

	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Wenn, bzw. <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">falls</emphasis>, das
	      nächste Eingabezeichen keine Zahl ist, sind wir mit
	      der Bearbeitung der Eingabe erst einmal fertig.</para>

	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Übrigends können wir einfach Zeichen, die
	      keine Ziffern sind, verwerfen, solange sie kein
	      <constant xmlns:xlink="http://www.w3.org/1999/xlink">#</constant>-Zeichen sind, welches wir an den
	      Eingabestrom zurückgeben müssen. Dieses Zeichen
	      markiert den Beginn eines Kommentars. An dieser Stelle
	      muß die Erzeugung der Ausgabe fertig sein, und wir
	      müssen mit der Suche nach weiteren Eingabedaten
	      fortfahren.</para>
	  </listitem>
	</itemizedlist>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Es bleibt immer noch eine Möglichkeit
	  unberücksichtigt: Wenn der Benutzer eine Null (oder
	  mehrere) eingibt, werden wir niemals eine von Null
	  verschiedene Zahl vorfinden.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Wir können solch einen Fall immer anhand des
	  Zählerstandes feststellen, welcher dann
	  immer bei <constant xmlns:xlink="http://www.w3.org/1999/xlink">0</constant> bleibt. In diesem Fall
	  müssen wir einfach eine <constant xmlns:xlink="http://www.w3.org/1999/xlink">0</constant> an
	  die Ausgabe senden, und anschließend dem Benutzer
	  erneut eine "Ohrfeige" verpassen:</para>

	<screen xmlns:xlink="http://www.w3.org/1999/xlink">0	???	???	???	???	???</screen>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Sobald wir die Brennweite ausgegeben, und die
	  Gültigkeit dieser Eingabe verifiziert haben,
	  (größer als <constant xmlns:xlink="http://www.w3.org/1999/xlink">0</constant> und kleiner
	  als 18 Zahlen) können wir den Durchmesser der
	  Lochblende berechnen.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Es ist kein Zufall, daß
	  <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">Lochblende</emphasis> das Wort
	  <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">Loch</emphasis> enthält. In der Tat ist eine
	  Lochblende buchstäblich eine
	  <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">Loch Blende</emphasis>, also eine Blende, in die
	  mit einer Nadel vorsichtig ein kleines Loch gestochen
	  wird.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Daher ist eine typische Lochblende sehr klein. Unsere
	  Formel liefert uns das Ergebnis in Millimetern. Wir werden
	  dieses mit <constant xmlns:xlink="http://www.w3.org/1999/xlink">1000</constant> multiplizieren, so
	  daß die Ausgabe in <constant xmlns:xlink="http://www.w3.org/1999/xlink">Mikrometern</constant>
	  erfolgt.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">An dieser Stelle müssen wir auf eine weitere Falle
	  achten: <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">Zu hohe Genauigkeit.</emphasis></para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Ja, die <acronym xmlns:xlink="http://www.w3.org/1999/xlink">FPU</acronym> wurde für
	  mathematische Berechnungen mit hoher Genauigkeit entworfen.
	  Unsere Berechnungen hier erfordern jedoch keine solche
	  mathematische Genauigkeit. Wir haben es hier mit Physik zu
	  tun (Optik, um genau zu sein).</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Angenommen, wir wollten aus eine Lastkraftwagen eine
	  Lochkamera bauen (wir wären dabei nicht die
	  ersten, die das versuchen würden!). Angenommen, die
	  Länge des Laderaumes beträgt <constant xmlns:xlink="http://www.w3.org/1999/xlink">12</constant>
	  Meter lang, so daß wir eine Brennweite von
	  <constant xmlns:xlink="http://www.w3.org/1999/xlink">12000</constant> hätten. Verwenden wir
	  Benders Konstante, so erhalten wir durch Multiplizieren
	  von <constant xmlns:xlink="http://www.w3.org/1999/xlink">0.04</constant> mit der Quadratwurzel aus
	  <constant xmlns:xlink="http://www.w3.org/1999/xlink">12000</constant> einen Wert von
	  <constant xmlns:xlink="http://www.w3.org/1999/xlink">4.381780460</constant> Millimetern, oder
	  <constant xmlns:xlink="http://www.w3.org/1999/xlink">4381.780460</constant> Micrometern.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">So oder so ist das Rechenergebnis absurd präzise.
	  Unser Lastkraftwagen ist nicht <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">genau</emphasis>
	  <constant xmlns:xlink="http://www.w3.org/1999/xlink">12000</constant> Millimeter lang. Wir haben
	  diese Länge nicht mit einer so hohen Genauigkeit
	  gemessen, weswegen es falsch wäre zu behaupten,
	  unser Lochblendendurchmesser müsse exakt
	  <constant xmlns:xlink="http://www.w3.org/1999/xlink">4.381780460</constant> Millimeter sein. Es
	  reicht vollkommen aus, wenn der Durchmesser
	  <constant xmlns:xlink="http://www.w3.org/1999/xlink">4.4</constant> Millimeter beträgt.</para>

	<note xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Ich habe in obigem Beispiel das Rechenergebnis "nur"
	    auf 10 Stellen genau angegeben. Stellen Sie sich vor,
	    wie absurd es wäre, die vollen uns zur Verfügung
	    stehenden, 18 Stellen anzugeben!</para>
	</note>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Wir müssen also die Anzahl der signifikanten Stellen
	  beschränken. Eine Möglichkeit wäre, die
	  Mikrometer durch eine ganze Zahl darzustellen. Unser
	  Lastkraftwaren würde dann eine Lochblende mit einem
	  Durchmesser von <constant xmlns:xlink="http://www.w3.org/1999/xlink">4382</constant> Mikrometern
	  benötigen. Betrachten wir diesen Wert, dann stellen wir
	  fest, das <constant xmlns:xlink="http://www.w3.org/1999/xlink">4400</constant> Mikrometer, oder
	  <constant xmlns:xlink="http://www.w3.org/1999/xlink">4.4</constant> Millimeter, immer noch genau
	  genug ist.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Zusätzlich können wir noch, unabhängig von
	  der Größe eines Rechenergebnisses, festlegen,
	  daß wir nur vier signifikante Stellen anzeigen wollen
	  (oder weniger). Leider bietet uns die <acronym xmlns:xlink="http://www.w3.org/1999/xlink">FPU</acronym>
	  nicht die Möglichkeit, das Ergebnis automatisch bis
	  auf eine bestimmte Stelle zu runden (sie sieht die Daten ja
	  nicht als Zahlen, sondern als binäre Daten an).</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Wir müssen also selber einen Algorithmus entwerfen,
	  um die Anzahl der signifikanten Stellen zu reduzieren.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Hier ist meiner (ich denke er ist peinlich&#8212;wenn
	  Ihnen ein besserer Algorithmus einfällt, verraten sie
	  ihn mir <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">bitte</emphasis>):</para>

	<procedure xmlns:xlink="http://www.w3.org/1999/xlink">
	  <step xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Initialisiere einen Zähler mit
	      <constant xmlns:xlink="http://www.w3.org/1999/xlink">0</constant>.</para>
	  </step>

	  <step xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Solange die Zahl größer oder gleich
	      <constant xmlns:xlink="http://www.w3.org/1999/xlink">10000</constant> ist, dividiere die Zahl durch
	      <constant xmlns:xlink="http://www.w3.org/1999/xlink">10</constant>, und erhöhe den Zähler
	      um eins.</para>
	  </step>

	  <step xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Gebe das Ergebnis aus.</para>
	  </step>

	  <step xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Solange der Zähler größer als
	      <constant xmlns:xlink="http://www.w3.org/1999/xlink">0</constant> ist, gebe eine
	      <constant xmlns:xlink="http://www.w3.org/1999/xlink">0</constant> aus, und reduziere den Zähler
	      um eins.</para>
	  </step>
	</procedure>

	<note xmlns:xlink="http://www.w3.org/1999/xlink">
	  <para xmlns:xlink="http://www.w3.org/1999/xlink">Der Wert <constant xmlns:xlink="http://www.w3.org/1999/xlink">10000</constant> ist nur für
	    den Fall, daß Sie <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">vier</emphasis>
	    signifikante Stellen haben wollen. Für eine andere
	    Anzahl signifikanter Stellen müssen Sie den Wert
	    <constant xmlns:xlink="http://www.w3.org/1999/xlink">10000</constant> mit <constant xmlns:xlink="http://www.w3.org/1999/xlink">10</constant>,
	    hoch der Anzahl der gewünschten signifikanten Stellen,
	    ersetzen.</para>
	</note>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Wir können so den Lochblendendurchmesser, auf vier
	  signifikante Stellen gerundet, ausgeben.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">An dieser Stellen kennen wir nun die <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">Brennweite
	  </emphasis> und den
	  <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">Lochblendendurchmesser</emphasis>. Wir haben also
	  jetzt genug Informationen, um den
	  <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">f&#8211;Wert</emphasis> zu bestimmen.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Wir werden den f&#8211;Wert, auf vier signifikante
	  Stellen gerundet, ausgeben. Es könnte passieren,
	  daß diese vier Stellen recht wenig aussagen. Um die
	  Aussagekraft des f&#8211;Wertes zu erhöhen, könnten
	  wir den nächstliegenden, <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">normalisierten
	  f&#8211;Wert</emphasis> bestimmen, also z.B. das
	  nächstliegende Vielfache der Quadratwurzel aus 2.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Wir erreichen dies, indem wir den aktuellen f&#8211;Wert
	  mit sich selbst multiplizieren, so daß wir dessen
	  Quadrat (<function xmlns:xlink="http://www.w3.org/1999/xlink">square</function>) erhalten.
	  Anschließend berechnen wir den Logarithmus zur Basis 2
	  von dieser Zahl. Dies ist sehr viel einfacher, als direkt den
	  Logarithmus zur Basis der Quadratwurzel aus 2 zu berechnen!
	  Wir runden dann das Ergebnis auf die nächstliegende
	  ganze Zahl. Genau genommen können wir mit Hilfe der
	  <acronym xmlns:xlink="http://www.w3.org/1999/xlink">FPU</acronym> diese Berechnung beschleunigen: Wir
	  können den op-Code
	  <function xmlns:xlink="http://www.w3.org/1999/xlink" role="opcode">fscale</function> verwenden, um eine
	  Zahl um 1 zu "skalieren", was dasselbe ist, wie eine Zahl
	  mittels <function xmlns:xlink="http://www.w3.org/1999/xlink" role="opcode">shift</function> um eine
	  Stelle nach links zu verschieben. Am Ende berechnen wir noch
	  die Quadratwurzel aus allem, und erhalten dann den
	  nächstliegenden, normalisierten f&#8211;Wert.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Wenn das alles jetzt viel zu kompliziert wirkt&#8212;oder
	  viel zu aufwendig&#8212;wird es vielleicht klarer, wenn man
	  den Code selber betrachtet. Wir benötigen insgesamt
	  9 op-Codes:</para>

	<programlisting xmlns:xlink="http://www.w3.org/1999/xlink">fmul    st0, st0
    fld1
    fld     st1
    fyl2x
    frndint
    fld1
    fscale
    fsqrt
    fstp    st1</programlisting>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Die erste Zeile,
	  <function xmlns:xlink="http://www.w3.org/1999/xlink" role="opcode">fmul st0, st0</function>, quadriert
	  den Inhalt des <acronym xmlns:xlink="http://www.w3.org/1999/xlink">TOS</acronym> (Top Of Stack, was
	  dasselbe ist wie <varname xmlns:xlink="http://www.w3.org/1999/xlink" role="register">st</varname>, von
	  <application xmlns:xlink="http://www.w3.org/1999/xlink">nasm</application> auch
	  <varname xmlns:xlink="http://www.w3.org/1999/xlink" role="register">st0</varname> genannt). Die Funktion
	  <function xmlns:xlink="http://www.w3.org/1999/xlink" role="opcode">fld1</function> fügt eine
	  <constant xmlns:xlink="http://www.w3.org/1999/xlink">1</constant> dem <acronym xmlns:xlink="http://www.w3.org/1999/xlink">TOS</acronym>
	  hinzu.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Die nächste Zeile, <function xmlns:xlink="http://www.w3.org/1999/xlink" role="opcode">fld
	  st1</function>, legt das Quadrat auf dem
	  <acronym xmlns:xlink="http://www.w3.org/1999/xlink">TOS</acronym> ab. An diesem Punkt befindet sich das
	  Quadrat sowohl in <varname xmlns:xlink="http://www.w3.org/1999/xlink" role="register">st</varname> als
	  auch in <varname xmlns:xlink="http://www.w3.org/1999/xlink" role="register">st(2)</varname> (es wird
	  sich gleich zeigen, warum wir eine zweite Kopie auf dem
	  Stack lassen.) <varname xmlns:xlink="http://www.w3.org/1999/xlink" role="register">st(1)</varname>
	  enthält die <constant xmlns:xlink="http://www.w3.org/1999/xlink">1</constant>.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Im nächsten Schritt, <function xmlns:xlink="http://www.w3.org/1999/xlink" role="opcode">fyl2x</function>, wird der Logarithmus von
	  <varname xmlns:xlink="http://www.w3.org/1999/xlink" role="register">st</varname> zur Basis 2 berechnet,
	  und anschließend mit <varname xmlns:xlink="http://www.w3.org/1999/xlink" role="register">st(1)</varname> multipliziert. Deshalb haben
	  wir vorher die <constant xmlns:xlink="http://www.w3.org/1999/xlink">1</constant> in <varname xmlns:xlink="http://www.w3.org/1999/xlink" role="register">st(1)</varname> abgelegt.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">An dieser Stelle enthält
	  <varname xmlns:xlink="http://www.w3.org/1999/xlink" role="register">st</varname> den gerade berechneten
	  Logarithmus, und <varname xmlns:xlink="http://www.w3.org/1999/xlink" role="register">st(1)</varname>
	  das Quadrat des aktuellen f&#8211;Wertes, den wir für
	  später gespeichert haben.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink"><function xmlns:xlink="http://www.w3.org/1999/xlink" role="opcode">frndint</function> rundet den
	  <acronym xmlns:xlink="http://www.w3.org/1999/xlink">TOS</acronym> zur nächstliegenden ganzen Zahl.
	  <function xmlns:xlink="http://www.w3.org/1999/xlink" role="opcode">fld1</function> legt eine
	  <constant xmlns:xlink="http://www.w3.org/1999/xlink">1</constant> auf dem Stack ab.
	  <function xmlns:xlink="http://www.w3.org/1999/xlink" role="opcode">fscale</function> shiftet die
	  <constant xmlns:xlink="http://www.w3.org/1999/xlink">1</constant> auf dem <acronym xmlns:xlink="http://www.w3.org/1999/xlink">TOS</acronym> um
	  <varname xmlns:xlink="http://www.w3.org/1999/xlink" role="register">st(1)</varname> Stellen, wodurch im
	  Endeffekt eine 2 in <varname xmlns:xlink="http://www.w3.org/1999/xlink" role="register">st(1)</varname>
	  steht.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Schließlich berechnet
	  <function xmlns:xlink="http://www.w3.org/1999/xlink" role="opcode">fsqrt</function> die Quadratwurzel
	  des Rechenergebnisses, also des nächstliegenden,
	  normalisierten f&#8211;Wertes.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Wir haben nun den nächstliegenden, normalisierten
	  f&#8211;Wert auf dem <acronym xmlns:xlink="http://www.w3.org/1999/xlink">TOS</acronym> liegen, den auf
	  den Logarithmus zur Basis 2 gerundeten, nächstliegenden
	  ganzzahligen Wert in <varname xmlns:xlink="http://www.w3.org/1999/xlink" role="register">st(1)</varname>, und das Quadrat des
	  aktuellen f&#8211;Wertes in <varname xmlns:xlink="http://www.w3.org/1999/xlink" role="register">st(2)</varname>. Wir speichern den Wert
	  für eine spätere Verwendung in <varname xmlns:xlink="http://www.w3.org/1999/xlink" role="register">st(2)</varname>.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Aber wir brauchen den Inhalt von
	  <varname xmlns:xlink="http://www.w3.org/1999/xlink" role="register">st(1)</varname> gar nicht mehr. Die
	  letzte Zeile, <function xmlns:xlink="http://www.w3.org/1999/xlink" role="opcode">fstp st1</function>,
	  platziert den Inhalt von <varname xmlns:xlink="http://www.w3.org/1999/xlink" role="register">st</varname>
	  in <varname xmlns:xlink="http://www.w3.org/1999/xlink" role="register">st(1)</varname>, und erniedrigt
	  den Stackpointer um eins. Dadurch ist der Inhalt von
	  <varname xmlns:xlink="http://www.w3.org/1999/xlink" role="register">st(1)</varname> jetzt
	  <varname xmlns:xlink="http://www.w3.org/1999/xlink" role="register">st</varname>, der Inhalt von
	  <varname xmlns:xlink="http://www.w3.org/1999/xlink" role="register">st(2)</varname> jetzt
	  <varname xmlns:xlink="http://www.w3.org/1999/xlink" role="register">st(1)</varname> usw. Der neue
	  <varname xmlns:xlink="http://www.w3.org/1999/xlink" role="register">st</varname> speichert jetzt den
	  normalisierten f&#8211;Wert. Der neue
	  <varname xmlns:xlink="http://www.w3.org/1999/xlink" role="register">st(1)</varname> speichert das
	  Quadrat des aktuellen f&#8211;Wertes für die
	  Nachwelt.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Jetzt können wir den normalisierten f&#8211;Wert
	  ausgeben. Da er normalisiert ist, werden wir ihn nicht auf
	  vier signifikante Stellen runden, sondern stattdessen
	  mit voller Genauigkeit ausgeben.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Der normalisierte f&#8211;Wert ist nützlich, solange
	  er so klein ist, daß wir ihn auf einem Photometer
	  wiederfinden können. Ansonsten brauchen wir eine andere
	  Methode, um die benötigten Belichtungsdaten zu
	  bestimmen.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Wir haben weiter oben eine Formel aufgestellt, über
	  die wir einen f&#8211;Wert mit Hilfe eines anderen
	  f&#8211;Wertes und den zugehörigen Belichtungsdaten
	  bestimmen können.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Jedes Photometer, das ich jemals gesehen habe, konnte
	  die benötigte Belichtungszeit für f5.6 berechnen.
	  Wir werden daher einen
	  <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">"f5.6 Multiplizierer"</emphasis> berechnen, der
	  uns den Faktor angibt, mit dem wir die bei f5.6 gemessene
	  Belichtungszeit für unsere Lochkamera multiplizieren
	  müssen.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Durch die Formel wissen wir, daß dieser Faktor
	  durch Dividieren unseres f&#8211;Wertes (der aktuelle Wert,
	  nicht der normalisierte) durch <constant xmlns:xlink="http://www.w3.org/1999/xlink">5.6</constant>
	  und anschließendes Quadrieren, berechnen
	  können.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Mathematisch äquivalent dazu wäre, wenn wir
	  das Quadrat unseres f&#8211;Wertes durch das Quadrat von
	  <constant xmlns:xlink="http://www.w3.org/1999/xlink">5.6</constant> dividieren würden.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Numerisch betrachtet wollen wir nicht zwei Zahlen
	  quadrieren, wenn es möglich ist, nur
	  eine Zahl zu quadrieren. Daher wirkt die erste Variante
	  auf den ersten Blick besser.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Aber...</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink"><constant xmlns:xlink="http://www.w3.org/1999/xlink">5.6</constant> ist eine
	  <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">Konstante</emphasis>. Wir müssen nicht
	  wertvolle Rechenzeit der <acronym xmlns:xlink="http://www.w3.org/1999/xlink">FPU</acronym> verschwenden.
	  Es reicht aus, daß wir die Quadrate der einzelnen
	  f&#8211;Werte durch den konstanten Wert
	  <constant xmlns:xlink="http://www.w3.org/1999/xlink">5.6²</constant> dividieren. Oder wir
	  können den jeweiligen f&#8211;Wert durch
	  <constant xmlns:xlink="http://www.w3.org/1999/xlink">5.6</constant> dividieren, und dann das Ergebnis
	  quadrieren. Zwei Möglichkeiten, die gleich
	  erscheinen.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Aber das sind sie nicht!</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Erinnern wir uns an die Grundlagen der Photographie
	  weiter oben, dann wissen wir, daß sich die
	  Konstante <constant xmlns:xlink="http://www.w3.org/1999/xlink">5.6</constant> aus dem 5-fachen der
	  Quadratwurzel aus 2 ergibt. Eine
	  <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">irrationale</emphasis> Zahl. Das Quadrat dieser
	  Zahl ist <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">exakt</emphasis>
	  <constant xmlns:xlink="http://www.w3.org/1999/xlink">32</constant>.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink"><constant xmlns:xlink="http://www.w3.org/1999/xlink">32</constant> ist nicht nur eine ganze Zahl,
	  sondern auch ein Vielfaches von 2. Wir brauchen also
	  gar nicht das Quadrat eines f&#8211;Wertes durch
	  <constant xmlns:xlink="http://www.w3.org/1999/xlink">32</constant> zu teilen. Wir müssen lediglich
	  mittels <function xmlns:xlink="http://www.w3.org/1999/xlink" role="opcode">fscale</function> den
	  f&#8211;Wert um fünf Stellen nach rechts shiften.
	  Aus Sicht der <acronym xmlns:xlink="http://www.w3.org/1999/xlink">FPU</acronym> müssen wir also
	  <function xmlns:xlink="http://www.w3.org/1999/xlink" role="opcode">fscale</function> mit
	  <varname xmlns:xlink="http://www.w3.org/1999/xlink" role="register">st(1)</varname>, welcher gleich
	  <constant xmlns:xlink="http://www.w3.org/1999/xlink">-5</constant> ist, auf den f&#8211;Wert anwenden.
	  Dies ist <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">sehr viel schneller</emphasis> als die
	  Division.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Jetzt wird es auch klar, warum wir das Quadrat des
	  f&#8211;Wertes ganz oben auf dem Stack der
	  <acronym xmlns:xlink="http://www.w3.org/1999/xlink">FPU</acronym> gespeichert haben. Die Berechnung
	  des f5.6 Multiplizierers ist die einfachste Berechnung
	  des gesamten Programmes! Wir werden das Ergebnis auf vier
	  signifikante Stellen gerundet ausgeben.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Es gibt noch eine weitere nützliche Zahl, die wir
	  berechnen können: Die Anzahl der Stopps, die unser
	  f&#8211;Wert von f5.6 entfernt ist. Dies könnte
	  hilfreich sein, wenn unser f&#8211;Wert außerhalb des
	  Meßbereiches unseres Photometers liegt, wir aber eine
	  Blende haben, bei der wir unterschiedliche Geschwindigkeiten
	  einstellen können, und diese Blende Stopps
	  benutzt.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Angenommen, unser f&#8211;Wert ist 5 Stopps von f5.6
	  entfernt, und unser Photometer sagt uns, daß wir eine
	  Belichtungszeit von 1/1000 Sek. einstellen sollen. Dann
	  können wir unsere Blende auf die Geschwindigkeit 1/1000
	  einstellen, und unsere Skala um 5 Stopps verschieben.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Diese Rechnung ist ebenfalls sehr einfach. Alles, was
	  wir tun müssen, ist, den Logarithmus des f5.6
	  Multiplizierers, den wir schon berechnet haben (wobei wir
	  dessen Wert vor der Rundung nehmen müssen) zur Basis 2
	  zu nehmen. Wir runden dann das Ergebnis zur nächsten
	  ganzen Zahl hin, und geben dies aus. Wir müssen uns
	  nicht darum kümmern, ob wir mehr als vier signifikante
	  Stellen haben: Das Ergebnis besteht
	  höchstwahrscheinlich nur aus einer oder zwei
	  Stellen.</para>
      </sect3>
    </sect2>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="x86-fpu-optimizations">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">FPU Optimierungen</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">In Assemblersprache können wir den Code für die
	<acronym xmlns:xlink="http://www.w3.org/1999/xlink">FPU</acronym> besser optimieren, als in einer der
	Hochsprachen, inklusive C.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Sobald eine C-Funktion die Berechnung einer
	Fließkommazahl durchführen will, lädt sie erst
	einmal alle benötigten Variablen und Konstanten in die
	Register der <acronym xmlns:xlink="http://www.w3.org/1999/xlink">FPU</acronym>. Dann werden die
	Berechnungen durchgeführt, um das korrekte Ergebnis zu
	erhalten. Gute C-Compiler können diesen Teil des Codes
	sehr gut optimieren.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Das Ergebnis wird "zurückgegeben", indem dieses auf
	dem <acronym xmlns:xlink="http://www.w3.org/1999/xlink">TOS</acronym> abgelegt wird. Vorher wird
	aufgeräumt. Sämtliche Variablen und Konstanten, die
	während der Berechnung verwendet wurden, werden dabei
	aus der <acronym xmlns:xlink="http://www.w3.org/1999/xlink">FPU</acronym> entfernt.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Was wir im vorherigen Abschnitt selber getan haben, kann so
	nicht durchgeführt werden: Wir haben das Quadrat des
	f&#8211;Wertes berechnet, und das Ergebnis für eine
	weitere Berechnung mit einer anderen Funktion auf dem Stack
	behalten.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Wir <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">wußten</emphasis>, daß wir
	diesen Wert später noch einmal brauchen würden. Wir
	wußten auch, daß auf dem Stack genügend Platz
	war (welcher nur Platz für 8 Zahlen bietet), um den Wert
	dort zu speichern.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Ein C-Compiler kann nicht wissen, ob ein Wert auf dem
        Stack in naher Zukunft noch einmal gebraucht wird.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Natürlich könnte der C-Programmierer dies wissen.
	Aber die einzige Möglichkeit, die er hat, ist, den Wert
	im verfügbaren Speicher zu halten.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Das bedeutet zum einen, daß der Wert mit der
	<acronym xmlns:xlink="http://www.w3.org/1999/xlink">FPU</acronym>-internen, 80-stelligen
	Genauigkeit in einer normalen C-Variable vom Typ
	<emphasis xmlns:xlink="http://www.w3.org/1999/xlink">double</emphasis> (64 Bit) oder vom Typ
	<emphasis xmlns:xlink="http://www.w3.org/1999/xlink">single</emphasis> (32 Bit) gespeichert wird.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Dies bedeutet außerdem, daß der Wert aus dem
	<acronym xmlns:xlink="http://www.w3.org/1999/xlink">TOS</acronym> in den Speicher verschoben werden
	muß, und später wieder zurück. Von allen
	Operationen mit der <acronym xmlns:xlink="http://www.w3.org/1999/xlink">FPU</acronym> ist der Zugriff
	auf den Speicher die langsamste.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Wann immer also mit der <acronym xmlns:xlink="http://www.w3.org/1999/xlink">FPU</acronym> in einer
	Assemblersprache programmiert wird, sollte nach
	Möglichkeiten gesucht werden, Zwischenergebnisse auf dem
	Stack der <acronym xmlns:xlink="http://www.w3.org/1999/xlink">FPU</acronym> zu lassen.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Wir können mit dieser Idee noch einen Schritt weiter
	gehen! In unserem Programm verwenden wir eine
	<emphasis xmlns:xlink="http://www.w3.org/1999/xlink">Konstante</emphasis> (die wir <constant xmlns:xlink="http://www.w3.org/1999/xlink">PC</constant>
	genannt haben).</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Es ist unwichtig, wieviele Lochblendendurchmesser wir
	berechnen: 1, 10, 20, 1000, wir verwenden immer dieselbe
	Konstante. Daher können wir unser Programm so optimieren,
	daß diese Konstante immer auf dem Stack belassen
	wird.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Am Anfang unseres Programmes berechnen wir die oben
	erwähnte Konstante. Wir müssen die Eingabe für
	jede Dezimalstelle der Konstanten durch <constant xmlns:xlink="http://www.w3.org/1999/xlink">10</constant>
	dividieren.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Multiplizieren geht sehr viel schneller als Dividieren.
	Wir teilen also zu Beginn unseres Programmes
	<constant xmlns:xlink="http://www.w3.org/1999/xlink">1</constant> durch <constant xmlns:xlink="http://www.w3.org/1999/xlink">10</constant>, um
	<constant xmlns:xlink="http://www.w3.org/1999/xlink">0.1</constant> zu erhalten, was wir auf dem Stack
	speichern: Anstatt daß wir nun für jede einzelne
	Dezimalstelle die Eingabe wieder durch <constant xmlns:xlink="http://www.w3.org/1999/xlink">10</constant>
	teilen,	multiplizieren wir sie stattdessen mit
	<constant xmlns:xlink="http://www.w3.org/1999/xlink">0.1</constant>.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Auf diese Weise geben wir <constant xmlns:xlink="http://www.w3.org/1999/xlink">0.1</constant> nicht
	direkt ein, obwohl wir dies könnten. Dies hat einen Grund:
	Während <constant xmlns:xlink="http://www.w3.org/1999/xlink">0.1</constant> durch nur eine einzige
	Dezimalstelle dargestellt werden kann, wissen wir nicht,
	wieviele <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">binäre</emphasis> Stellen benötigt
	werden. Wir überlassen die Berechnung des binären
	Wertes daher der <acronym xmlns:xlink="http://www.w3.org/1999/xlink">FPU</acronym>, mit dessen eigener,
	hoher Genauigkeit.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Wir verwenden noch weitere Konstanten: Wir multiplizieren
	den Lochblendendurchmesser mit <constant xmlns:xlink="http://www.w3.org/1999/xlink">1000</constant>, um
	den Wert von Millimeter in Micrometer zu konvertieren. Wir
	vergleichen Werte mit <constant xmlns:xlink="http://www.w3.org/1999/xlink">10000</constant>, wenn wir
	diese auf vier signifikante Stellen runden wollen. Wir
	behalten also beide Konstanten, <constant xmlns:xlink="http://www.w3.org/1999/xlink">1000</constant>
	und <constant xmlns:xlink="http://www.w3.org/1999/xlink">10000</constant>, auf dem Stack. Und
	selbstverständlich verwenden wir erneut die gespeicherte
	<constant xmlns:xlink="http://www.w3.org/1999/xlink">0.1</constant>, um Werte auf vier signifikante
	Stellen zu runden.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Zu guter letzt behalten wir <constant xmlns:xlink="http://www.w3.org/1999/xlink">-5</constant> noch
	auf dem Stack. Wir brauchen diesen Wert, um das Quadrat des
	f&#8211;Wertes zu skalieren, anstatt diesen durch
	<constant xmlns:xlink="http://www.w3.org/1999/xlink">32</constant> zu teilen. Es ist kein Zufall, daß
	wir diese Konstante als letztes laden. Dadurch wird diese
	Zahl die oberste Konstante auf dem Stack. Wenn später
	das Quadrat des f&#8211;Wertes skaliert werden muß,
	befindet sich die <constant xmlns:xlink="http://www.w3.org/1999/xlink">-5</constant> in
	<varname xmlns:xlink="http://www.w3.org/1999/xlink" role="register">st(1)</varname>, also genau da, wo
	die Funktion <function xmlns:xlink="http://www.w3.org/1999/xlink" role="opcode">fscale</function> diesen
	Wert erwartet.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Es ist üblich, einige Konstanten per Hand zu erzeugen,
	anstatt sie aus dem Speicher zu laden. Genau das machen wir
	mit der <constant xmlns:xlink="http://www.w3.org/1999/xlink">-5</constant>:</para>

      <programlisting xmlns:xlink="http://www.w3.org/1999/xlink">
    	fld1			; TOS =  1
    	fadd	st0, st0	; TOS =  2
    	fadd	st0, st0	; TOS =  4
    	fld1			; TOS =  1
    	faddp	st1, st0	; TOS =  5
    	fchs			; TOS = -5</programlisting>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Wir können all diese Optimierungen in einer Regel
	zusammenfassen: <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">Behalte wiederverwendbare Werte auf
	dem Stack!</emphasis></para>

      <tip xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink"><emphasis xmlns:xlink="http://www.w3.org/1999/xlink"><trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">PostScript</trademark></emphasis> ist eine
	  Stack-orientierte Programmiersprache. Es gibt weit mehr
	  Bücher über <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">PostScript</trademark>, als über die
	  Assemblersprache der <acronym xmlns:xlink="http://www.w3.org/1999/xlink">FPU</acronym>: Werden Sie
	  in <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">PostScript</trademark> besser, dann werden Sie auch automatisch
	  in der Programmierung der <acronym xmlns:xlink="http://www.w3.org/1999/xlink">FPU</acronym>
	  besser.</para>
      </tip>
    </sect2>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="x86-pinhole-the-code">
      <title xmlns:xlink="http://www.w3.org/1999/xlink"><application xmlns:xlink="http://www.w3.org/1999/xlink">pinhole</application>&#8212;Der Code</title>

      <programlisting xmlns:xlink="http://www.w3.org/1999/xlink">
;;;;;;; pinhole.asm ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; Find various parameters of a pinhole camera construction and use
;
; Started:	 9-Jun-2001
; Updated:	10-Jun-2001
;
; Copyright (c) 2001 G. Adam Stanislav
; All rights reserved.
;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

%include	'system.inc'

%define	BUFSIZE	2048

section	.data
align 4
ten	dd	10
thousand	dd	1000
tthou	dd	10000
fd.in	dd	stdin
fd.out	dd	stdout
envar	db	'PINHOLE='	; Exactly 8 bytes, or 2 dwords long
pinhole	db	'04,', 		; Bender's constant (0.04)
connors	db	'037', 0Ah	; Connors' constant
usg	db	'Usage: pinhole [-b] [-c] [-e] [-p &lt;value&gt;] [-o &lt;outfile&gt;] [-i &lt;infile&gt;]', 0Ah
usglen	equ	$-usg
iemsg	db	"pinhole: Can't open input file", 0Ah
iemlen	equ	$-iemsg
oemsg	db	"pinhole: Can't create output file", 0Ah
oemlen	equ	$-oemsg
pinmsg	db	"pinhole: The PINHOLE constant must not be 0", 0Ah
pinlen	equ	$-pinmsg
toobig	db	"pinhole: The PINHOLE constant may not exceed 18 decimal places", 0Ah
biglen	equ	$-toobig
huhmsg	db	9, '???'
separ	db	9, '???'
sep2	db	9, '???'
sep3	db	9, '???'
sep4	db	9, '???', 0Ah
huhlen	equ	$-huhmsg
header	db	'focal length in millimeters,pinhole diameter in microns,'
	db	'F-number,normalized F-number,F-5.6 multiplier,stops '
	db	'from F-5.6', 0Ah
headlen	equ	$-header

section .bss
ibuffer	resb	BUFSIZE
obuffer	resb	BUFSIZE
dbuffer	resb	20		; decimal input buffer
bbuffer	resb	10		; BCD buffer

section	.text
align 4
huh:
	call	write
	push	dword huhlen
	push	dword huhmsg
	push	dword [fd.out]
	sys.write
	add	esp, byte 12
	ret

align 4
perr:
	push	dword pinlen
	push	dword pinmsg
	push	dword stderr
	sys.write
	push	dword 4		; return failure
	sys.exit

align 4
consttoobig:
	push	dword biglen
	push	dword toobig
	push	dword stderr
	sys.write
	push	dword 5		; return failure
	sys.exit

align 4
ierr:
	push	dword iemlen
	push	dword iemsg
	push	dword stderr
	sys.write
	push	dword 1		; return failure
	sys.exit

align 4
oerr:
	push	dword oemlen
	push	dword oemsg
	push	dword stderr
	sys.write
	push	dword 2
	sys.exit

align 4
usage:
	push	dword usglen
	push	dword usg
	push	dword stderr
	sys.write
	push	dword 3
	sys.exit

align 4
global	_start
_start:
	add	esp, byte 8	; discard argc and argv[0]
	sub	esi, esi

.arg:
	pop	ecx
	or	ecx, ecx
	je	near .getenv		; no more arguments

	; ECX contains the pointer to an argument
	cmp	byte [ecx], '-'
	jne	usage

	inc	ecx
	mov	ax, [ecx]
	inc	ecx

.o:
	cmp	al, 'o'
	jne	.i

	; Make sure we are not asked for the output file twice
	cmp	dword [fd.out], stdout
	jne	usage

	; Find the path to output file - it is either at [ECX+1],
	; i.e., -ofile --
	; or in the next argument,
	; i.e., -o file

	or	ah, ah
	jne	.openoutput
	pop	ecx
	jecxz	usage

.openoutput:
	push	dword 420	; file mode (644 octal)
	push	dword 0200h | 0400h | 01h
	; O_CREAT | O_TRUNC | O_WRONLY
	push	ecx
	sys.open
	jc	near oerr

	add	esp, byte 12
	mov	[fd.out], eax
	jmp	short .arg

.i:
	cmp	al, 'i'
	jne	.p

	; Make sure we are not asked twice
	cmp	dword [fd.in], stdin
	jne	near usage

	; Find the path to the input file
	or	ah, ah
	jne	.openinput
	pop	ecx
	or	ecx, ecx
	je near usage

.openinput:
	push	dword 0		; O_RDONLY
	push	ecx
	sys.open
	jc	near ierr		; open failed

	add	esp, byte 8
	mov	[fd.in], eax
	jmp	.arg

.p:
	cmp	al, 'p'
	jne	.c
	or	ah, ah
	jne	.pcheck

	pop	ecx
	or	ecx, ecx
	je	near usage

	mov	ah, [ecx]

.pcheck:
	cmp	ah, '0'
	jl	near usage
	cmp	ah, '9'
	ja	near usage
	mov	esi, ecx
	jmp	.arg

.c:
	cmp	al, 'c'
	jne	.b
	or	ah, ah
	jne	near usage
	mov	esi, connors
	jmp	.arg

.b:
	cmp	al, 'b'
	jne	.e
	or	ah, ah
	jne	near usage
	mov	esi, pinhole
	jmp	.arg

.e:
	cmp	al, 'e'
	jne	near usage
	or	ah, ah
	jne	near usage
	mov	al, ','
	mov	[huhmsg], al
	mov	[separ], al
	mov	[sep2], al
	mov	[sep3], al
	mov	[sep4], al
	jmp	.arg

align 4
.getenv:
	; If ESI = 0, we did not have a -p argument,
	; and need to check the environment for "PINHOLE="
	or	esi, esi
	jne	.init

	sub	ecx, ecx

.nextenv:
	pop	esi
	or	esi, esi
	je	.default	; no PINHOLE envar found

	; check if this envar starts with 'PINHOLE='
	mov	edi, envar
	mov	cl, 2		; 'PINHOLE=' is 2 dwords long
rep	cmpsd
	jne	.nextenv

	; Check if it is followed by a digit
	mov	al, [esi]
	cmp	al, '0'
	jl	.default
	cmp	al, '9'
	jbe	.init
	; fall through

align 4
.default:
	; We got here because we had no -p argument,
	; and did not find the PINHOLE envar.
	mov	esi, pinhole
	; fall through

align 4
.init:
	sub	eax, eax
	sub	ebx, ebx
	sub	ecx, ecx
	sub	edx, edx
	mov	edi, dbuffer+1
	mov	byte [dbuffer], '0'

	; Convert the pinhole constant to real
.constloop:
	lodsb
	cmp	al, '9'
	ja	.setconst
	cmp	al, '0'
	je	.processconst
	jb	.setconst

	inc	dl

.processconst:
	inc	cl
	cmp	cl, 18
	ja	near consttoobig
	stosb
	jmp	short .constloop

align 4
.setconst:
	or	dl, dl
	je	near perr

	finit
	fild	dword [tthou]

	fld1
	fild	dword [ten]
	fdivp	st1, st0

	fild	dword [thousand]
	mov	edi, obuffer

	mov	ebp, ecx
	call	bcdload

.constdiv:
	fmul	st0, st2
	loop	.constdiv

	fld1
	fadd	st0, st0
	fadd	st0, st0
	fld1
	faddp	st1, st0
	fchs

	; If we are creating a CSV file,
	; print header
	cmp	byte [separ], ','
	jne	.bigloop

	push	dword headlen
	push	dword header
	push	dword [fd.out]
	sys.write

.bigloop:
	call	getchar
	jc	near done

	; Skip to the end of the line if you got '#'
	cmp	al, '#'
	jne	.num
	call	skiptoeol
	jmp	short .bigloop

.num:
	; See if you got a number
	cmp	al, '0'
	jl	.bigloop
	cmp	al, '9'
	ja	.bigloop

	; Yes, we have a number
	sub	ebp, ebp
	sub	edx, edx

.number:
	cmp	al, '0'
	je	.number0
	mov	dl, 1

.number0:
	or	dl, dl		; Skip leading 0's
	je	.nextnumber
	push	eax
	call	putchar
	pop	eax
	inc	ebp
	cmp	ebp, 19
	jae	.nextnumber
	mov	[dbuffer+ebp], al

.nextnumber:
	call	getchar
	jc	.work
	cmp	al, '#'
	je	.ungetc
	cmp	al, '0'
	jl	.work
	cmp	al, '9'
	ja	.work
	jmp	short .number

.ungetc:
	dec	esi
	inc	ebx

.work:
	; Now, do all the work
	or	dl, dl
	je	near .work0

	cmp	ebp, 19
	jae	near .toobig

	call	bcdload

	; Calculate pinhole diameter

	fld	st0	; save it
	fsqrt
	fmul	st0, st3
	fld	st0
	fmul	st5
	sub	ebp, ebp

	; Round off to 4 significant digits
.diameter:
	fcom	st0, st7
	fstsw	ax
	sahf
	jb	.printdiameter
	fmul	st0, st6
	inc	ebp
	jmp	short .diameter

.printdiameter:
	call	printnumber	; pinhole diameter

	; Calculate F-number

	fdivp	st1, st0
	fld	st0

	sub	ebp, ebp

.fnumber:
	fcom	st0, st6
	fstsw	ax
	sahf
	jb	.printfnumber
	fmul	st0, st5
	inc	ebp
	jmp	short .fnumber

.printfnumber:
	call	printnumber	; F number

	; Calculate normalized F-number
	fmul	st0, st0
	fld1
	fld	st1
	fyl2x
	frndint
	fld1
	fscale
	fsqrt
	fstp	st1

	sub	ebp, ebp
	call	printnumber

	; Calculate time multiplier from F-5.6

	fscale
	fld	st0

	; Round off to 4 significant digits
.fmul:
	fcom	st0, st6
	fstsw	ax
	sahf

	jb	.printfmul
	inc	ebp
	fmul	st0, st5
	jmp	short .fmul

.printfmul:
	call	printnumber	; F multiplier

	; Calculate F-stops from 5.6

	fld1
	fxch	st1
	fyl2x

	sub	ebp, ebp
	call	printnumber

	mov	al, 0Ah
	call	putchar
	jmp	.bigloop

.work0:
	mov	al, '0'
	call	putchar

align 4
.toobig:
	call	huh
	jmp	.bigloop

align 4
done:
	call	write		; flush output buffer

	; close files
	push	dword [fd.in]
	sys.close

	push	dword [fd.out]
	sys.close

	finit

	; return success
	push	dword 0
	sys.exit

align 4
skiptoeol:
	; Keep reading until you come to cr, lf, or eof
	call	getchar
	jc	done
	cmp	al, 0Ah
	jne	.cr
	ret

.cr:
	cmp	al, 0Dh
	jne	skiptoeol
	ret

align 4
getchar:
	or	ebx, ebx
	jne	.fetch

	call	read

.fetch:
	lodsb
	dec	ebx
	clc
	ret

read:
	jecxz	.read
	call	write

.read:
	push	dword BUFSIZE
	mov	esi, ibuffer
	push	esi
	push	dword [fd.in]
	sys.read
	add	esp, byte 12
	mov	ebx, eax
	or	eax, eax
	je	.empty
	sub	eax, eax
	ret

align 4
.empty:
	add	esp, byte 4
	stc
	ret

align 4
putchar:
	stosb
	inc	ecx
	cmp	ecx, BUFSIZE
	je	write
	ret

align 4
write:
	jecxz	.ret	; nothing to write
	sub	edi, ecx	; start of buffer
	push	ecx
	push	edi
	push	dword [fd.out]
	sys.write
	add	esp, byte 12
	sub	eax, eax
	sub	ecx, ecx	; buffer is empty now
.ret:
	ret

align 4
bcdload:
	; EBP contains the number of chars in dbuffer
	push	ecx
	push	esi
	push	edi

	lea	ecx, [ebp+1]
	lea	esi, [dbuffer+ebp-1]
	shr	ecx, 1

	std

	mov	edi, bbuffer
	sub	eax, eax
	mov	[edi], eax
	mov	[edi+4], eax
	mov	[edi+2], ax

.loop:
	lodsw
	sub	ax, 3030h
	shl	al, 4
	or	al, ah
	mov	[edi], al
	inc	edi
	loop	.loop

	fbld	[bbuffer]

	cld
	pop	edi
	pop	esi
	pop	ecx
	sub	eax, eax
	ret

align 4
printnumber:
	push	ebp
	mov	al, [separ]
	call	putchar

	; Print the integer at the TOS
	mov	ebp, bbuffer+9
	fbstp	[bbuffer]

	; Check the sign
	mov	al, [ebp]
	dec	ebp
	or	al, al
	jns	.leading

	; We got a negative number (should never happen)
	mov	al, '-'
	call	putchar

.leading:
	; Skip leading zeros
	mov	al, [ebp]
	dec	ebp
	or	al, al
	jne	.first
	cmp	ebp, bbuffer
	jae	.leading

	; We are here because the result was 0.
	; Print '0' and return
	mov	al, '0'
	jmp	putchar

.first:
	; We have found the first non-zero.
	; But it is still packed
	test	al, 0F0h
	jz	.second
	push	eax
	shr	al, 4
	add	al, '0'
	call	putchar
	pop	eax
	and	al, 0Fh

.second:
	add	al, '0'
	call	putchar

.next:
	cmp	ebp, bbuffer
	jb	.done

	mov	al, [ebp]
	push	eax
	shr	al, 4
	add	al, '0'
	call	putchar
	pop	eax
	and	al, 0Fh
	add	al, '0'
	call	putchar

	dec	ebp
	jmp	short .next

.done:
	pop	ebp
	or	ebp, ebp
	je	.ret

.zeros:
	mov	al, '0'
	call	putchar
	dec	ebp
	jne	.zeros

.ret:
	ret</programlisting>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Der Code folgt demselben Aufbau wie alle anderen Filter,
	die wir bisher gesehen haben, bis auf eine Kleinigkeit:</para>

      <blockquote xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Wir nehmen nun nicht mehr an, daß das Ende
	  der Eingabe auch das Ende der nötigen Arbeit bedeutet,
	  etwas, das wir für <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">zeichenbasierte</emphasis>
	  Filter automatisch angenommen haben.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Dieser Filter verarbeitet keine Zeichen. Er verarbeitet
	  eine <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">Sprache</emphasis> (obgleich eine sehr
	  einfache, die nur aus Zahlen besteht).</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Wenn keine weiteren Eingaben vorliegen, kann das zwei
	  Ursachen haben:</para>

	<itemizedlist xmlns:xlink="http://www.w3.org/1999/xlink">
	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Wir sind fertig und können aufhören. Dies
	      ist dasselbe wie vorher.</para>
	  </listitem>

	  <listitem xmlns:xlink="http://www.w3.org/1999/xlink">
	    <para xmlns:xlink="http://www.w3.org/1999/xlink">Das Zeichen, das wir eingelesen haben, war eine Zahl.
	      Wir haben diese am Ende unseres <acronym xmlns:xlink="http://www.w3.org/1999/xlink">ASCII</acronym>
	      &#8211;zu&#8211;float Kovertierungspuffers gespeichert.
	      Wir müssen nun den gesamten Pufferinhalt in eine
	      Zahl konvertieren, und die letzte Zeile unserer Ausgabe
	      ausgeben.</para>
	  </listitem>
	</itemizedlist>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Aus diesem Grund haben wir unsere <function xmlns:xlink="http://www.w3.org/1999/xlink">getchar
	  </function>- und <function xmlns:xlink="http://www.w3.org/1999/xlink">read</function>-Routinen
	  so angepaßt, daß sie das
	  <varname xmlns:xlink="http://www.w3.org/1999/xlink" role="register">carry flag</varname>
	  <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">clear</emphasis> immer dann zurückgeben, wenn
	  wir ein weiteres Zeichen aus der Eingabe lesen, und das
	  <varname xmlns:xlink="http://www.w3.org/1999/xlink" role="register">carry flag</varname>
	  <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">set</emphasis> immer dann zurückgeben, wenn
	  es keine weiteren Eingabedaten gibt.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Selbstverständlich verwenden wir auch hier die
	  Magie der Assemblersprache! Schauen Sie sich
	  <function xmlns:xlink="http://www.w3.org/1999/xlink">getchar</function> näher an. Dieses gibt
	  <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">immer</emphasis> das
	  <varname xmlns:xlink="http://www.w3.org/1999/xlink" role="register">carry flag</varname>
	  <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">clear</emphasis> zurück.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Dennoch basiert der Hauptteil unseres Programmes auf dem
	  <varname xmlns:xlink="http://www.w3.org/1999/xlink" role="register">carry flag</varname>, um diesem eine
	  Beendigung mitzuteilen&#8212;und es funktioniert.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Die Magie passiert in <function xmlns:xlink="http://www.w3.org/1999/xlink">read</function>. Wann
	  immer weitere Eingaben durch das System zur Verfügung
	  stehen, ruft diese Funktion <function xmlns:xlink="http://www.w3.org/1999/xlink">getchar</function>
	  auf, welche ein weiteres Zeichen aus dem Eingabepuffer
	  einliest, und anschließend das
	  <varname xmlns:xlink="http://www.w3.org/1999/xlink" role="register">carry flag</varname>
	  <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">clear</emphasis>t.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Wenn aber <function xmlns:xlink="http://www.w3.org/1999/xlink">read</function> keine weiteren
	  Eingaben von dem System bekommt, ruft dieses
	  <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">nicht</emphasis> <function xmlns:xlink="http://www.w3.org/1999/xlink">getchar</function>
	  auf. Stattdessen addiert der op-Code
	  <function xmlns:xlink="http://www.w3.org/1999/xlink" role="opcode">add esp, byte 4</function>
	  <constant xmlns:xlink="http://www.w3.org/1999/xlink">4</constant> zu
	  <varname xmlns:xlink="http://www.w3.org/1999/xlink" role="register">ESP</varname> hinzu,
	  <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">setzt</emphasis> das
	  <varname xmlns:xlink="http://www.w3.org/1999/xlink" role="register">carry flag</varname>, und
	  springt zurück.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Wo springt diese Funktion hin? Wann immer ein Programm
	  den op-Code <function xmlns:xlink="http://www.w3.org/1999/xlink" role="opcode">call</function>
	  verwendet, <function xmlns:xlink="http://www.w3.org/1999/xlink" role="opcode">push</function>t der
	  Mikroprozessor die Rücksprungandresse, d.h. er
	  speichert diese ganz oben auf dem Stack (nicht auf dem
	  Stack der <acronym xmlns:xlink="http://www.w3.org/1999/xlink">FPU</acronym>, sondern auf dem Systemstack,
	  der sich im Hauptspeicher befindet). Wenn ein Programm den
	  op-Code <function xmlns:xlink="http://www.w3.org/1999/xlink" role="opcode">ret</function> verwendet,
	  <function xmlns:xlink="http://www.w3.org/1999/xlink" role="opcode">pop</function>t der
	  Mikroprozessor den Rückgabewert von dem Stack, und
	  springt zu der Adresse, die dort gespeichert wurde.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Da wir aber <constant xmlns:xlink="http://www.w3.org/1999/xlink">4</constant> zu
	  <varname xmlns:xlink="http://www.w3.org/1999/xlink" role="register">ESP</varname> hinzuaddiert haben
	  (welches das Register der Stackzeiger ist), haben wir
	  effektiv dem Mikroprzessor eine kleine
	  <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">Amnesie</emphasis> verpaßt: Dieser erinnert
	  sich nun nicht mehr daran, daß
	  <function xmlns:xlink="http://www.w3.org/1999/xlink">getchar</function> durch
	  <function xmlns:xlink="http://www.w3.org/1999/xlink">read</function> aufgerufen wurde.</para>

	<para xmlns:xlink="http://www.w3.org/1999/xlink">Und da <function xmlns:xlink="http://www.w3.org/1999/xlink">getchar</function> nichts vor dem
	  Aufruf von <function xmlns:xlink="http://www.w3.org/1999/xlink">read</function> auf dem Stack abgelegt
	  hat, enthält der Anfang des Stacks nun die
	  Rücksprungadresse von der Funktion, die
	  <function xmlns:xlink="http://www.w3.org/1999/xlink">getchar</function> aufgerufen hat. Soweit es den
	  Aufrufer betrifft, hat dieser <function xmlns:xlink="http://www.w3.org/1999/xlink">getchar</function>
	  ge<function xmlns:xlink="http://www.w3.org/1999/xlink" role="opcode">call</function>t, welche mit
	  einem gesetzten
	  <varname xmlns:xlink="http://www.w3.org/1999/xlink" role="register">carry flag</varname>
	  <function xmlns:xlink="http://www.w3.org/1999/xlink" role="opcode">ret</function>urned.</para>
      </blockquote>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Des weiteren wird die Routine <function xmlns:xlink="http://www.w3.org/1999/xlink">bcdload</function>
	bei einem klitzekleinen Problem zwischen der Big&#8211;Endian-
	und Little&#8211;Endian-Codierung aufgerufen.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Diese konvertiert die Textrepräsentation einer
	Zahl in eine andere Textrepräsentation: Der Text wird
	in der Big&#8211;Endian-Codierung gespeichert, die
	<emphasis xmlns:xlink="http://www.w3.org/1999/xlink">packed decimal</emphasis>-Darstellung jedoch in der
	Little&#8211;Endian-Codierung.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Um dieses Problem zu lösen haben wir vorher den
	op-Code <function xmlns:xlink="http://www.w3.org/1999/xlink">std</function> verwendet. Wir machen diesen
	Aufruf später mittels <function xmlns:xlink="http://www.w3.org/1999/xlink">cld</function> wieder
	rückgängig: Es ist sehr wichtig, daß wir keine
	Funktion mittels <function xmlns:xlink="http://www.w3.org/1999/xlink">call</function> aufrufen, die von
	einer Standardeinstellung des
	<emphasis xmlns:xlink="http://www.w3.org/1999/xlink">Richtungsflags</emphasis> abhängig ist,
	während <function xmlns:xlink="http://www.w3.org/1999/xlink">std</function> ausgeführt
	wird.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Alles weitere in dem Programm sollte leicht zu verstehen
	sein, vorausgesetzt, daß Sie das gesamte vorherige
	Kapitel gelesen haben.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Es ist ein klassisches Beispiel für das Sprichwort,
	daß das Programmieren eine Menge Denkarbeit, und nur
	ein wenig Programmcode benötigt. Sobald wir uns über
	jedes Detail im klaren sind, steht der Code fast schon
	da.</para>
    </sect2>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="x86-pinhole-using">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Das Programm <application xmlns:xlink="http://www.w3.org/1999/xlink">pinhole</application>
	verwenden</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Da wir uns bei dem Programm dafür entschieden haben,
	alle Eingaben, die keine Zahlen sind, zu ignorieren (selbst
	die in Kommentaren), können wir jegliche
	<emphasis xmlns:xlink="http://www.w3.org/1999/xlink">textbasierten Eingaben</emphasis> verarbeiten. Wir
	<emphasis xmlns:xlink="http://www.w3.org/1999/xlink">müssen</emphasis> dies nicht tun, wir
	<emphasis xmlns:xlink="http://www.w3.org/1999/xlink">könnten</emphasis> aber.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Meiner bescheidenen Meinung nach wird ein Programm durch
	die Möglichkeit, anstatt einer strikten Eingabesyntax
	textbasierte Anfragen stellen zu können, sehr viel
	benutzerfreundlicher.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Angenommen, wir wollten eine Lochkamera für einen
	4x5 Zoll Film bauen. Die standardmäßige Brennweite
	für diesen Film ist ungefähr 150mm.
	Wir wollen diesen Wert <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">optimieren</emphasis>, so
	daß der Lochblendendurchmesser eine möglichst
	runde Zahl ergibt. Lassen Sie uns weiter annehmen, daß
	wir zwar sehr gut mit Kameras umgehen können, dafür
	aber nicht so gut mit Computern. Anstatt das wir nun eine
	Reihe von Zahlen eingeben, wollen wir lieber ein paar
	<emphasis xmlns:xlink="http://www.w3.org/1999/xlink">Fragen</emphasis> stellen.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Unsere Sitzung könnte wie folgt aussehen:</para>

      <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">pinhole

Computer,

Wie groß müßte meine Lochblende bei einer Brennweite
von 150 sein?</userinput>
150	490	306	362	2930	12
<userinput xmlns:xlink="http://www.w3.org/1999/xlink">Hmmm... Und bei 160?</userinput>
160	506	316	362	3125	12
<userinput xmlns:xlink="http://www.w3.org/1999/xlink">Laß uns bitte 155 nehmen.</userinput>
155	498	311	362	3027	12
<userinput xmlns:xlink="http://www.w3.org/1999/xlink">Ah, laß uns 157 probieren...</userinput>
157	501	313	362	3066	12
<userinput xmlns:xlink="http://www.w3.org/1999/xlink">156?</userinput>
156	500	312	362	3047	12
<userinput xmlns:xlink="http://www.w3.org/1999/xlink">Das ist es! Perfekt! Vielen Dank!
^D</userinput></screen>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Wir haben herausgefunden, daß der
	Lochblendendurchmesser bei einer Brennweite von 150 mm
	490 Mikrometer, oder 0.49 mm ergeben würde. Bei einer fast
	identischen Brennweite von 156 mm würden wir
	einen Durchmesser von genau einem halben Millimeter
	bekommen.</para>
    </sect2>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="x86-pinhole-scripting">
      <title xmlns:xlink="http://www.w3.org/1999/xlink">Skripte schreiben</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Da wir uns dafür entschieden haben, das Zeichen
	<constant xmlns:xlink="http://www.w3.org/1999/xlink">#</constant> als den Anfang eines Kommentares zu
	interpretieren, können wir unser
	<application xmlns:xlink="http://www.w3.org/1999/xlink">pinhole</application>-Programm auch als
	<emphasis xmlns:xlink="http://www.w3.org/1999/xlink">Skriptsprache</emphasis> verwenden.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Sie haben vielleicht schon einmal
	<application xmlns:xlink="http://www.w3.org/1999/xlink">shell</application><emphasis xmlns:xlink="http://www.w3.org/1999/xlink">-Skripte</emphasis>
	gesehen, die mit folgenden Zeichen begonnen haben:</para>

      <programlisting xmlns:xlink="http://www.w3.org/1999/xlink">#! /bin/sh</programlisting>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">...oder...</para>

      <programlisting xmlns:xlink="http://www.w3.org/1999/xlink">#!/bin/sh</programlisting>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">... da das Leerzeichen hinter dem <function xmlns:xlink="http://www.w3.org/1999/xlink">#!</function>
	optional ist.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Wann immer <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark> eine Datei ausführen soll, die mit
	einem <function xmlns:xlink="http://www.w3.org/1999/xlink">#!</function> beginnt, wird angenommen, das
	die Datei ein Skript ist. Es fügt den Befehl an das Ende
	der ersten Zeile an, und versucht dann, dieses
	auszuführen.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Angenommen, wir haben unser Programm
	<application xmlns:xlink="http://www.w3.org/1999/xlink">pinhole</application> unter
	<application xmlns:xlink="http://www.w3.org/1999/xlink">/usr/local/bin/</application> installiert, dann
	können wir nun Skripte schreiben, um unterschiedliche
	Lochblendendurchmesser für mehrere Brennweiten
	zu berechnen, die normalerweise mit 120er Filmen verwendet
	werden.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Das Skript könnte wie folgt aussehen:</para>

      <programlisting xmlns:xlink="http://www.w3.org/1999/xlink">#! /usr/local/bin/pinhole -b -i
# Find the best pinhole diameter
# for the 120 film

### Standard
80

### Wide angle
30, 40, 50, 60, 70

### Telephoto
100, 120, 140</programlisting>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Da ein 120er Film ein Film mittlerer Größe ist,
	könnten wir die Datei <application xmlns:xlink="http://www.w3.org/1999/xlink">medium</application>
	nennen.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Wir können die Datei ausführbar machen und dann
	aufrufen, als wäre es ein Programm:</para>

      <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">chmod 755 medium</userinput>
<prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">./medium</userinput></screen>

      <para xmlns:xlink="http://www.w3.org/1999/xlink"><trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark> wird den letzten Befehl wie folgt
	interpretieren:</para>

      <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">/usr/local/bin/pinhole -b -i ./medium</userinput></screen>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Es wird den Befehl ausführen und folgendes
	ausgeben:</para>

      <screen xmlns:xlink="http://www.w3.org/1999/xlink">80	358	224	256	1562	11
30	219	137	128	586	9
40	253	158	181	781	10
50	283	177	181	977	10
60	310	194	181	1172	10
70	335	209	181	1367	10
100	400	250	256	1953	11
120	438	274	256	2344	11
140	473	296	256	2734	11</screen>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Lassen Sie uns nun das folgende eingeben:</para>

      <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">./medium -c</userinput></screen>

      <para xmlns:xlink="http://www.w3.org/1999/xlink"><trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark> wird dieses wie folgt behandeln:</para>

      <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">/usr/local/bin/pinhole -b -i ./medium -c</userinput></screen>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Dadurch erhält das Programm zwei
	widersprüchliche Optionen: <parameter xmlns:xlink="http://www.w3.org/1999/xlink">-b</parameter> und
	<parameter xmlns:xlink="http://www.w3.org/1999/xlink">-c</parameter> (Verwende Benders Konstante und
	verwende Connors Konstante). Wir haben unser Programm so
	geschrieben, daß später eingelesene Optionen die
	vorheringen überschreiben&#8212;unser Programm wird also
	Connors Konstante für die Berechnungen verwenden:</para>

      <screen xmlns:xlink="http://www.w3.org/1999/xlink">80	331	242	256	1826	11
30	203	148	128	685	9
40	234	171	181	913	10
50	262	191	181	1141	10
60	287	209	181	1370	10
70	310	226	256	1598	11
100	370	270	256	2283	11
120	405	296	256	2739	11
140	438	320	362	3196	12</screen>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Wir entscheiden uns am Ende doch für Benders
	Konstante. Wir wollen die Ergebnisse im CSV-Format in
	einer Datei speichern:</para>

      <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">./medium -b -e &gt; bender</userinput>
<prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">cat bender</userinput>
focal length in millimeters,pinhole diameter in microns,F-number,normalized F-number,F-5.6 multiplier,stops from F-5.6
80,358,224,256,1562,11
30,219,137,128,586,9
40,253,158,181,781,10
50,283,177,181,977,10
60,310,194,181,1172,10
70,335,209,181,1367,10
100,400,250,256,1953,11
120,438,274,256,2344,11
140,473,296,256,2734,11
<prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt></screen>
    </sect2>
  </sect1>

  <sect1 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="x86-caveats">
    <info><title xmlns:xlink="http://www.w3.org/1999/xlink">Vorsichtsmassnahmen</title>
      <authorgroup xmlns:xlink="http://www.w3.org/1999/xlink">
	<author xmlns:xlink="http://www.w3.org/1999/xlink"><personname xmlns:xlink="http://www.w3.org/1999/xlink"><firstname xmlns:xlink="http://www.w3.org/1999/xlink">Daniel</firstname><surname xmlns:xlink="http://www.w3.org/1999/xlink">Seuffert</surname></personname><contrib xmlns:xlink="http://www.w3.org/1999/xlink">Übersetzt von </contrib></author>
      </authorgroup>
    </info>

    

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Assembler-Programmierer, die aufwuchsen mit
      <acronym xmlns:xlink="http://www.w3.org/1999/xlink"><trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">MS-DOS</trademark></acronym> und windows <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">Windows</trademark> neigen oft
      dazu Shotcuts zu verwenden. Das Lesen der Tastatur-Scancodes und
      das direkte Schreiben in den Grafikspeicher sind zwei klassische
      Beispiele von Gewohnheiten, die unter
      <acronym xmlns:xlink="http://www.w3.org/1999/xlink"><trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">MS-DOS</trademark></acronym> nicht verpönt sind, aber nicht
      als richtig angesehen werden.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Warum dies? Sowohl das <acronym xmlns:xlink="http://www.w3.org/1999/xlink">PC-BIOS</acronym> als auch
      <acronym xmlns:xlink="http://www.w3.org/1999/xlink"><trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">MS-DOS</trademark></acronym> sind notorisch langsam bei der
      Ausführung dieser Operationen.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Sie mögen versucht sein ähnliche Angewohnheiten
      in der <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark>-Umgebung fortzuführen. Zum Beispiel habe ich
      eine Webseite gesehen, welche erklärt, wie man auf einem
      beliebten <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark>-Ableger die Tastatur-Scancodes
      verwendet.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Das ist generell eine <emphasis xmlns:xlink="http://www.w3.org/1999/xlink">sehr schlechte
      Idee</emphasis> in einer <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark>-Umgebung! Lassen Sie mich
      erklären warum.</para>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="x86-protected">
      <title xmlns:xlink="http://www.w3.org/1999/xlink"><trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark> ist geschützt</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Zum Einen mag es schlicht nicht möglich sein.
	<trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark> läuft im Protected Mode. Nur der Kernel und
	Gerätetreiber dürfen direkt auf die Hardware
	zugreifen. Unter Umständen erlaubt es Ihnen ein
	bestimmter <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark>-Ableger Tastatur-Scancodes auszulesen, aber
	ein wirkliches <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark>-Betriebssystem wird dies zu verhindern
	wissen. Und falls eine Version es Ihnen erlaubt wird es eine
	andere nicht tun, daher kann eine sorgfältig erstellte
	Software über Nacht zu einem überkommenen
	Dinosaurier werden.</para>
    </sect2>

    <sect2 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="x86-abstraction">
      <title xmlns:xlink="http://www.w3.org/1999/xlink"><trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark> ist eine Abstraktion</title>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Aber es gibt einen viel wichtigeren Grund, weshalb Sie
	nicht versuchen sollten, die Hardware direkt anzusprechen
	(natürlich nicht, wenn Sie einen Gerätetreiber
	schreiben), selbst auf den <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark>-ähnlichen Systemen, die
	es Ihnen erlauben:</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink"><emphasis xmlns:xlink="http://www.w3.org/1999/xlink"><trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark> ist eine Abstraktion!</emphasis></para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Es gibt einen wichtigen Unterschied in der
	Design-Philosophie zwischen <acronym xmlns:xlink="http://www.w3.org/1999/xlink"><trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">MS-DOS</trademark></acronym> und
	<trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark>. <acronym xmlns:xlink="http://www.w3.org/1999/xlink"><trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">MS-DOS</trademark></acronym> wurde entworfen als
	Einzelnutzer-System. Es läuft auf einem Rechner mit einer
	direkt angeschlossenen Tastatur und einem direkt
	angeschlossenem Bildschirm. Die Eingaben des Nutzers kommen
	nahezu immer von dieser Tastatur. Die Ausgabe Ihres Programmes
	erscheint fast immer auf diesem Bildschirm.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Dies ist NIEMALS garantiert unter <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark>. Es ist sehr
	verbreitet für ein <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark>, daß der Nutzer seine
	Aus- und Eingaben kanalisiert und umleitet:</para>

      <screen xmlns:xlink="http://www.w3.org/1999/xlink"><prompt xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">%</prompt> <userinput xmlns:xlink="http://www.w3.org/1999/xlink">program1 | program2 | program3 &gt; file1</userinput></screen>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Falls Sie eine Anwendung
	<application xmlns:xlink="http://www.w3.org/1999/xlink">program2</application> geschrieben haben, kommt
	ihre Eingabe nicht von der Tastatur, sondern von der Ausgabe
	von <application xmlns:xlink="http://www.w3.org/1999/xlink">program1</application>. Gleichermassen geht
	Ihre Ausgabe nicht auf den Bildschirm, sondern wird zur
	Eingabe für <application xmlns:xlink="http://www.w3.org/1999/xlink">program3</application>, dessen
	Ausgabe wiederum in <filename xmlns:xlink="http://www.w3.org/1999/xlink">file1</filename> endet.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Aber es gibt noch mehr! Selbst wenn Sie sichergestellt
	haben, daß Ihre Eingabe und Ausgabe zum Terminal kommt
	bzw. gelangt, dann ist immer noch nicht garantiert, daß
	ihr Terminal ein PC ist: Es mag seinen Grafikspeicher nicht
	dort haben, wo Sie ihn erwarten, oder die Tastatur könnte
	keine <acronym xmlns:xlink="http://www.w3.org/1999/xlink">PC</acronym>-ähnlichen Scancodes erzeugen
	können. Es mag ein <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">Macintosh</trademark> oder irgendein anderer
	Rechner sein.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Sie mögen nun den Kopf schütteln: Mein
	Programm ist in <acronym xmlns:xlink="http://www.w3.org/1999/xlink">PC</acronym>-Assembler geschrieben,
	wie kann es auf einem <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">Macintosh</trademark> laufen? Aber ich habe nicht
	gesagt, daß Ihr Programm auf <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">Macintosh</trademark> läuft, nur
	sein Terminal mag ein <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">Macintosh</trademark> sein.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Unter <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark> muß der Terminal nicht direkt am
	Rechner angeschlossen sein, auf dem die Software läuft,
	er kann sogar auf einem anderen Kontinent sein oder sogar auf
	einem anderen Planeten. Es ist nicht ungewöhnlich,
	daß ein <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">Macintosh</trademark>-Nutzer in Australien sich auf ein
	<trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark>-System in Nordamerika (oder sonstwo) mittels
	<application xmlns:xlink="http://www.w3.org/1999/xlink">telnet</application> verbindet. Die Software
	läuft auf einem Rechner während das Terminal sich
	auf einem anderen Rechner befindet: Falls Sie versuchen
	sollten die Scancodes auszulesen werden Sie die falschen
	Eingaben erhalten!</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Das Gleiche gilt für jede andere Hardware: Eine
	Datei, welche Sie einlesen, mag auf einem Laufwerk sein, auf
	das Sie keinen direkten Zugriff haben. Eine Kamera, deren
	Bilder Sie auslesen, befindet sich möglicherweise in
	einem Space Shuttle, durch Satelliten mit Ihnen
	verbunden.</para>

      <para xmlns:xlink="http://www.w3.org/1999/xlink">Das sind die Gründe, weshalb Sie niemals unter
	<trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark> Annahmen treffen dürfen, woher Ihre Daten kommen
	oder gehen. Lassen Sie immer das System den physischen Zugriff
	auf die Hardware regeln.</para>

      <note xmlns:xlink="http://www.w3.org/1999/xlink">
	<para xmlns:xlink="http://www.w3.org/1999/xlink">Das sind Vorsichtsmassnahmen, keine absoluten Regeln.
	  Ausnahmen sind möglich. Wenn zum Beispiel ein
	  Texteditor bestimmt hat, daß er auf einer lokalen
	  Maschine läuft, dann mag er die Tastatur-Scancodes
	  direkt auslesen, um eine bessere Kontrolle zu
	  gewährleisten. Ich erwähne diese
	  Vorsichtsmassnahmen nicht, um Ihnen zu sagen, was sie tun
	  oder lassen sollen, ich will Ihnen nur bewusst machen,
	  daß es bestimmte Fallstricke gibt, die Sie erwarten,
	  wenn Sie soeben ihn <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark> von <acronym xmlns:xlink="http://www.w3.org/1999/xlink"><trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">MS-DOS</trademark></acronym>
	  angelangt sind. Kreative Menschen brechen oft Regeln und das
	  ist in Ordnung, solange sie wissen welche Regeln und
	  warum.</para>
      </note>
    </sect2>
  </sect1>

  <sect1 xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="x86-acknowledgements">
    <info><title xmlns:xlink="http://www.w3.org/1999/xlink">Danksagungen</title>
      <authorgroup xmlns:xlink="http://www.w3.org/1999/xlink">
	<author xmlns:xlink="http://www.w3.org/1999/xlink"><personname xmlns:xlink="http://www.w3.org/1999/xlink"><firstname xmlns:xlink="http://www.w3.org/1999/xlink">Daniel</firstname><surname xmlns:xlink="http://www.w3.org/1999/xlink">Seuffert</surname></personname><contrib xmlns:xlink="http://www.w3.org/1999/xlink">Übersetzt von </contrib></author>
      </authorgroup>
    </info>

    

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Dieses Handbuch wäre niemals möglich gewesen
      ohne die Hilfe vieler erfahrener FreeBSD-Programmierer aus
      <link xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://lists.FreeBSD.org/mailman/listinfo/freebsd-hackers">FreeBSD technical
  discussions</link>. Viele dieser Personen haben geduldig meine Fragen
      beantwortet und mich in die richtige Richtung gewiesen bei
      meinem Versuch, die tieferen liegenden Mechanismen der
      <trademark xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="registered">UNIX</trademark>-Systemprogrammierung zu erforschen im Allgemeinen und bei
      FreeBSD im Besonderen.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Thomas M. Sommers öffnete die Türen für
      mich. Seine <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://www.codebreakers-journal.com/content/view/262/27/">Wie
      schreibe ich "Hallo Welt" in FreeBSD-Assembler?</link> Webseite
      war mein erster Kontakt mit Assembler-Programmierung unter
      FreeBSD.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Jake Burkholder hat die Tür offen gehalten durch das
      bereitwillige Beantworten all meiner Fragen und das
      Zurverfügungstellen von Assembler-Codebeispielen.</para>

    <para xmlns:xlink="http://www.w3.org/1999/xlink">Copyright © 2000-2001 G. Adam Stanislav. Alle Rechte
      vorbehalten.</para>
  </sect1>
</chapter>

  </part>

  <part xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="appendices">
    <title xmlns:xlink="http://www.w3.org/1999/xlink">Anhang</title>

    <bibliography xmlns:xlink="http://www.w3.org/1999/xlink">
      <biblioentry xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="COD" xreflabel="1">
	<authorgroup xmlns:xlink="http://www.w3.org/1999/xlink">
	  <author xmlns:xlink="http://www.w3.org/1999/xlink"><personname xmlns:xlink="http://www.w3.org/1999/xlink"><firstname xmlns:xlink="http://www.w3.org/1999/xlink">Dave</firstname><othername xmlns:xlink="http://www.w3.org/1999/xlink" role="MI">A</othername><surname xmlns:xlink="http://www.w3.org/1999/xlink">Patterson</surname></personname></author>

	  <author xmlns:xlink="http://www.w3.org/1999/xlink"><personname xmlns:xlink="http://www.w3.org/1999/xlink"><firstname xmlns:xlink="http://www.w3.org/1999/xlink">John</firstname><othername xmlns:xlink="http://www.w3.org/1999/xlink" role="MI">L</othername><surname xmlns:xlink="http://www.w3.org/1999/xlink">Hennessy</surname></personname></author>
	</authorgroup>

	<copyright xmlns:xlink="http://www.w3.org/1999/xlink">
	  <year xmlns:xlink="http://www.w3.org/1999/xlink">1998</year>
	  <holder xmlns:xlink="http://www.w3.org/1999/xlink">Morgan Kaufmann Publishers, Inc.</holder>
	</copyright>

	<biblioid xmlns:xlink="http://www.w3.org/1999/xlink" class="isbn">1-55860-428-6</biblioid>

	<publisher xmlns:xlink="http://www.w3.org/1999/xlink">
	  <publishername xmlns:xlink="http://www.w3.org/1999/xlink">Morgan Kaufmann Publishers,
	    Inc.</publishername>
	</publisher>

	<citetitle xmlns:xlink="http://www.w3.org/1999/xlink">Computer Organization and Design</citetitle>

	<subtitle xmlns:xlink="http://www.w3.org/1999/xlink">The Hardware / Software Interface</subtitle>

	<pagenums xmlns:xlink="http://www.w3.org/1999/xlink">1-2</pagenums>
      </biblioentry>

      <biblioentry xmlns:xlink="http://www.w3.org/1999/xlink" xreflabel="2">
        <authorgroup xmlns:xlink="http://www.w3.org/1999/xlink">
	  <author xmlns:xlink="http://www.w3.org/1999/xlink"><personname xmlns:xlink="http://www.w3.org/1999/xlink"><firstname xmlns:xlink="http://www.w3.org/1999/xlink">W.</firstname><othername xmlns:xlink="http://www.w3.org/1999/xlink" role="Middle">Richard</othername><surname xmlns:xlink="http://www.w3.org/1999/xlink">Stevens</surname></personname></author>
	</authorgroup>

	<copyright xmlns:xlink="http://www.w3.org/1999/xlink">
	  <year xmlns:xlink="http://www.w3.org/1999/xlink">1993</year>
	  <holder xmlns:xlink="http://www.w3.org/1999/xlink">Addison Wesley Longman, Inc.</holder>
	</copyright>

	<biblioid xmlns:xlink="http://www.w3.org/1999/xlink" class="isbn">0-201-56317-7</biblioid>

	<publisher xmlns:xlink="http://www.w3.org/1999/xlink">
	  <publishername xmlns:xlink="http://www.w3.org/1999/xlink">Addison Wesley Longman, Inc.</publishername>
	</publisher>

	<citetitle xmlns:xlink="http://www.w3.org/1999/xlink">Advanced Programming in the Unix Environment</citetitle>

	<pagenums xmlns:xlink="http://www.w3.org/1999/xlink">1-2</pagenums>
      </biblioentry>

      <biblioentry xmlns:xlink="http://www.w3.org/1999/xlink" xreflabel="3">
	<authorgroup xmlns:xlink="http://www.w3.org/1999/xlink">
	  <author xmlns:xlink="http://www.w3.org/1999/xlink"><personname xmlns:xlink="http://www.w3.org/1999/xlink"><firstname xmlns:xlink="http://www.w3.org/1999/xlink">Marshall</firstname><othername xmlns:xlink="http://www.w3.org/1999/xlink" role="Middle">Kirk</othername><surname xmlns:xlink="http://www.w3.org/1999/xlink">McKusick</surname></personname></author>

	  <author xmlns:xlink="http://www.w3.org/1999/xlink"><personname xmlns:xlink="http://www.w3.org/1999/xlink"><firstname xmlns:xlink="http://www.w3.org/1999/xlink">George</firstname><surname xmlns:xlink="http://www.w3.org/1999/xlink">Neville-Neil</surname></personname></author>
	</authorgroup>

	<copyright xmlns:xlink="http://www.w3.org/1999/xlink">
	  <year xmlns:xlink="http://www.w3.org/1999/xlink">2004</year>
	  <holder xmlns:xlink="http://www.w3.org/1999/xlink">Addison-Wesley Publishing Company, Inc.</holder>
	</copyright>

	<biblioid xmlns:xlink="http://www.w3.org/1999/xlink" class="isbn">0-201-70245-2</biblioid>

	<publisher xmlns:xlink="http://www.w3.org/1999/xlink">
	  <publishername xmlns:xlink="http://www.w3.org/1999/xlink">Addison-Wesley</publishername>
	</publisher>

	<citetitle xmlns:xlink="http://www.w3.org/1999/xlink">The Design and Implementation of the FreeBSD Operating
	  System</citetitle>

	<pagenums xmlns:xlink="http://www.w3.org/1999/xlink">1-2</pagenums>
      </biblioentry>

      <biblioentry xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="Phrack" xreflabel="4">
	<authorgroup xmlns:xlink="http://www.w3.org/1999/xlink">
	  <author xmlns:xlink="http://www.w3.org/1999/xlink"><personname xmlns:xlink="http://www.w3.org/1999/xlink"><firstname xmlns:xlink="http://www.w3.org/1999/xlink">Aleph</firstname><surname xmlns:xlink="http://www.w3.org/1999/xlink">One</surname></personname></author>
	</authorgroup>

	<citetitle xmlns:xlink="http://www.w3.org/1999/xlink">Phrack 49; "Smashing the Stack for Fun and
	  Profit"</citetitle>
      </biblioentry>

      <biblioentry xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="StackGuard" xreflabel="5">
	<authorgroup xmlns:xlink="http://www.w3.org/1999/xlink">
	  <author xmlns:xlink="http://www.w3.org/1999/xlink"><personname xmlns:xlink="http://www.w3.org/1999/xlink"><firstname xmlns:xlink="http://www.w3.org/1999/xlink">Chrispin</firstname><surname xmlns:xlink="http://www.w3.org/1999/xlink">Cowan</surname></personname></author>

	  <author xmlns:xlink="http://www.w3.org/1999/xlink"><personname xmlns:xlink="http://www.w3.org/1999/xlink"><firstname xmlns:xlink="http://www.w3.org/1999/xlink">Calton</firstname><surname xmlns:xlink="http://www.w3.org/1999/xlink">Pu</surname></personname></author>

	  <author xmlns:xlink="http://www.w3.org/1999/xlink"><personname xmlns:xlink="http://www.w3.org/1999/xlink"><firstname xmlns:xlink="http://www.w3.org/1999/xlink">Dave</firstname><surname xmlns:xlink="http://www.w3.org/1999/xlink">Maier</surname></personname></author>
	</authorgroup>

	<citetitle xmlns:xlink="http://www.w3.org/1999/xlink">StackGuard; Automatic Adaptive Detection and Prevention
	  of Buffer-Overflow Attacks</citetitle>
      </biblioentry>

      <biblioentry xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="OpenBSD" xreflabel="6">
	<authorgroup xmlns:xlink="http://www.w3.org/1999/xlink">
	  <author xmlns:xlink="http://www.w3.org/1999/xlink"><personname xmlns:xlink="http://www.w3.org/1999/xlink"><firstname xmlns:xlink="http://www.w3.org/1999/xlink">Todd</firstname><surname xmlns:xlink="http://www.w3.org/1999/xlink">Miller</surname></personname></author>

	  <author xmlns:xlink="http://www.w3.org/1999/xlink"><personname xmlns:xlink="http://www.w3.org/1999/xlink"><firstname xmlns:xlink="http://www.w3.org/1999/xlink">Theo</firstname><surname xmlns:xlink="http://www.w3.org/1999/xlink">de Raadt</surname></personname></author>
	</authorgroup>

	<citetitle xmlns:xlink="http://www.w3.org/1999/xlink">strlcpy and strlcat -- consistent, safe string copy and
	  concatenation.</citetitle>
      </biblioentry>
    </bibliography>
  </part>

  <index xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"/>

</book>
